{
	"id": "b179d2b2bf9732afe133f73be471695c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"SpageroTokenVesting_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n\n// File: @openzeppelin/contracts/interfaces/IERC1363.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\n\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Errors.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/finance/VestingWallet.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (finance/VestingWallet.sol)\npragma solidity ^0.8.20;\n\n\n\n\n\n\n/**\n * @dev A vesting wallet is an ownable contract that can receive native currency and ERC-20 tokens, and release these\n * assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n *\n * Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n * Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n * be immediately releasable.\n *\n * By setting the duration to 0, one can configure this contract to behave like an asset timelock that holds tokens for\n * a beneficiary until a specified time.\n *\n * NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n * Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n * counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n * near future.\n *\n * NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n * sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\n *\n * NOTE: Chains with support for native ERC20s may allow the vesting wallet to withdraw the underlying asset as both an\n * ERC20 and as native currency. For example, if chain C supports token A and the wallet gets deposited 100 A, then\n * at 50% of the vesting period, the beneficiary can withdraw 50 A as ERC20 and 25 A as native currency (totaling 75 A).\n * Consider disabling one of the withdrawal methods.\n */\ncontract VestingWallet is Context, Ownable {\n    event EtherReleased(uint256 amount);\n    event ERC20Released(address indexed token, uint256 amount);\n\n    uint256 private _released;\n    mapping(address token => uint256) private _erc20Released;\n    uint64 private immutable _start;\n    uint64 private immutable _duration;\n\n    /**\n     * @dev Sets the beneficiary (owner), the start timestamp and the vesting duration (in seconds) of the vesting\n     * wallet.\n     */\n    constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) payable Ownable(beneficiary) {\n        _start = startTimestamp;\n        _duration = durationSeconds;\n    }\n\n    /**\n     * @dev The contract should be able to receive Eth.\n     */\n    receive() external payable virtual {}\n\n    /**\n     * @dev Getter for the start timestamp.\n     */\n    function start() public view virtual returns (uint256) {\n        return _start;\n    }\n\n    /**\n     * @dev Getter for the vesting duration.\n     */\n    function duration() public view virtual returns (uint256) {\n        return _duration;\n    }\n\n    /**\n     * @dev Getter for the end timestamp.\n     */\n    function end() public view virtual returns (uint256) {\n        return start() + duration();\n    }\n\n    /**\n     * @dev Amount of eth already released\n     */\n    function released() public view virtual returns (uint256) {\n        return _released;\n    }\n\n    /**\n     * @dev Amount of token already released\n     */\n    function released(address token) public view virtual returns (uint256) {\n        return _erc20Released[token];\n    }\n\n    /**\n     * @dev Getter for the amount of releasable eth.\n     */\n    function releasable() public view virtual returns (uint256) {\n        return vestedAmount(uint64(block.timestamp)) - released();\n    }\n\n    /**\n     * @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n     * {IERC20} contract.\n     */\n    function releasable(address token) public view virtual returns (uint256) {\n        return vestedAmount(token, uint64(block.timestamp)) - released(token);\n    }\n\n    /**\n     * @dev Release the native token (ether) that have already vested.\n     *\n     * Emits a {EtherReleased} event.\n     */\n    function release() public virtual {\n        uint256 amount = releasable();\n        _released += amount;\n        emit EtherReleased(amount);\n        Address.sendValue(payable(owner()), amount);\n    }\n\n    /**\n     * @dev Release the tokens that have already vested.\n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release(address token) public virtual {\n        uint256 amount = releasable(token);\n        _erc20Released[token] += amount;\n        emit ERC20Released(token, amount);\n        SafeERC20.safeTransfer(IERC20(token), owner(), amount);\n    }\n\n    /**\n     * @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(address(this).balance + released(), timestamp);\n    }\n\n    /**\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp);\n    }\n\n    /**\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n     * an asset given its total historical allocation.\n     */\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {\n        if (timestamp < start()) {\n            return 0;\n        } else if (timestamp >= end()) {\n            return totalAllocation;\n        } else {\n            return (totalAllocation * (timestamp - start())) / duration();\n        }\n    }\n}\n\n// File: SpageroTokenVesting.sol\n\n\npragma solidity ^0.8.24;\n\n\ncontract SpageroTokenVesting is VestingWallet {\n    // Release ETH or any ERC20 using release(IERC20 token)\n    constructor(\n        address beneficiaryAddress,\n        uint64 startTimestamp,\n        uint64 durationSeconds\n    ) VestingWallet(beneficiaryAddress, startTimestamp, durationSeconds) {}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"SpageroTokenVesting_flattened.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroTokenVesting_flattened.sol\":19621:25383  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SpageroTokenVesting_flattened.sol\":19621:25383  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047d9156c2fb655888c2d500ee272d4705d71a46187178825b9d0e40a0ca2662e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047d9156c2fb655888c2d500ee272d4705d71a46187178825b9d0e40a0ca2662e64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xD9 ISZERO PUSH13 0x2FB655888C2D500EE272D4705D PUSH18 0xA46187178825B9D0E40A0CA2662E64736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "19621:5762:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;19621:5762:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047d9156c2fb655888c2d500ee272d4705d71a46187178825b9d0e40a0ca2662e64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xD9 ISZERO PUSH13 0x2FB655888C2D500EE272D4705D PUSH18 0xA46187178825B9D0E40A0CA2662E64736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "19621:5762:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19621,
									"end": 25383,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047d9156c2fb655888c2d500ee272d4705d71a46187178825b9d0e40a0ca2662e64736f6c63430008180033",
									".code": [
										{
											"begin": 19621,
											"end": 25383,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 19621,
											"end": 25383,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19621,
											"end": 25383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19621,
											"end": 25383,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19621,
											"end": 25383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19621,
											"end": 25383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19621,
											"end": 25383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19621,
											"end": 25383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19621,
											"end": 25383,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"SpageroTokenVesting_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroTokenVesting_flattened.sol\":18918:19402  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SpageroTokenVesting_flattened.sol\":18918:19402  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5e0bcfe28ab767a07d51b8c85d8acafd068d9f4f29de7442be7b887575a0a4564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5e0bcfe28ab767a07d51b8c85d8acafd068d9f4f29de7442be7b887575a0a4564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xE0 0xBC INVALID 0x28 0xAB PUSH23 0x7A07D51B8C85D8ACAFD068D9F4F29DE7442BE7B887575A EXP GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "18918:484:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;18918:484:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5e0bcfe28ab767a07d51b8c85d8acafd068d9f4f29de7442be7b887575a0a4564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xE0 0xBC INVALID 0x28 0xAB PUSH23 0x7A07D51B8C85D8ACAFD068D9F4F29DE7442BE7B887575A EXP GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "18918:484:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18918,
									"end": 19402,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5e0bcfe28ab767a07d51b8c85d8acafd068d9f4f29de7442be7b887575a0a4564736f6c63430008180033",
									".code": [
										{
											"begin": 18918,
											"end": 19402,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 19402,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 19402,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 19402,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18918,
											"end": 19402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18918,
											"end": 19402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 19402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18918,
											"end": 19402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 19402,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"SpageroTokenVesting_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 939,
								"contract": "SpageroTokenVesting_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroTokenVesting_flattened.sol\":9109:18485  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SpageroTokenVesting_flattened.sol\":9109:18485  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220550d2e6f8118a50f59ea414ed8a198d4243d70374505f67ec55e0eab4fa11d7f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220550d2e6f8118a50f59ea414ed8a198d4243d70374505f67ec55e0eab4fa11d7f64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xD 0x2E PUSH16 0x8118A50F59EA414ED8A198D4243D7037 GASLIMIT SDIV 0xF6 PUSH31 0xC55E0EAB4FA11D7F64736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "9109:9376:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;9109:9376:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220550d2e6f8118a50f59ea414ed8a198d4243d70374505f67ec55e0eab4fa11d7f64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xD 0x2E PUSH16 0x8118A50F59EA414ED8A198D4243D7037 GASLIMIT SDIV 0xF6 PUSH31 0xC55E0EAB4FA11D7F64736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "9109:9376:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9109,
									"end": 18485,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220550d2e6f8118a50f59ea414ed8a198d4243d70374505f67ec55e0eab4fa11d7f64736f6c63430008180033",
									".code": [
										{
											"begin": 9109,
											"end": 18485,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 18485,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 18485,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 18485,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9109,
											"end": 18485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9109,
											"end": 18485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 18485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 18485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 18485,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"SpageroTokenVesting_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SpageroTokenVesting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiaryAddress",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "startTimestamp",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "durationSeconds",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EtherReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "end",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"duration()": {
								"details": "Getter for the vesting duration."
							},
							"end()": {
								"details": "Getter for the end timestamp."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"releasable()": {
								"details": "Getter for the amount of releasable eth."
							},
							"releasable(address)": {
								"details": "Getter for the amount of releasable `token` tokens. `token` should be the address of an {IERC20} contract."
							},
							"release()": {
								"details": "Release the native token (ether) that have already vested. Emits a {EtherReleased} event."
							},
							"release(address)": {
								"details": "Release the tokens that have already vested. Emits a {ERC20Released} event."
							},
							"released()": {
								"details": "Amount of eth already released"
							},
							"released(address)": {
								"details": "Amount of token already released"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"start()": {
								"details": "Getter for the start timestamp."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"vestedAmount(address,uint64)": {
								"details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
							},
							"vestedAmount(uint64)": {
								"details": "Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroTokenVesting_flattened.sol\":35349:35649  contract SpageroTokenVesting is VestingWallet {... */\n  mstore(0x40, 0xc0)\n    /* \"SpageroTokenVesting_flattened.sol\":35461:35647  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SpageroTokenVesting_flattened.sol\":35592:35610  beneficiaryAddress */\n  dup3\n    /* \"SpageroTokenVesting_flattened.sol\":35612:35626  startTimestamp */\n  dup3\n    /* \"SpageroTokenVesting_flattened.sol\":35628:35643  durationSeconds */\n  dup3\n    /* \"SpageroTokenVesting_flattened.sol\":35592:35610  beneficiaryAddress */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SpageroTokenVesting_flattened.sol\":27619:27645  initialOwner == address(0) */\n  dup2\n  and\n    /* \"SpageroTokenVesting_flattened.sol\":27615:27710  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"SpageroTokenVesting_flattened.sol\":27668:27699  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"SpageroTokenVesting_flattened.sol\":27696:27697  0 */\n  0x00\n    /* \"SpageroTokenVesting_flattened.sol\":27668:27699  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":801:852   */\n  mstore\n    /* \"#utility.yul\":774:792   */\n  0x24\n  add\n    /* \"SpageroTokenVesting_flattened.sol\":27668:27699  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"SpageroTokenVesting_flattened.sol\":27615:27710  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"SpageroTokenVesting_flattened.sol\":27719:27751  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"SpageroTokenVesting_flattened.sol\":27738:27750  initialOwner */\n  dup2\n    /* \"SpageroTokenVesting_flattened.sol\":27719:27737  _transferOwnership */\n  tag_12\n    /* \"SpageroTokenVesting_flattened.sol\":27719:27751  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"SpageroTokenVesting_flattened.sol\":31875:31898  _start = startTimestamp */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"SpageroTokenVesting_flattened.sol\":31908:31935  _duration = durationSeconds */\n  and\n  0xa0\n  mstore\n  pop\n    /* \"SpageroTokenVesting_flattened.sol\":35349:35649  contract SpageroTokenVesting is VestingWallet {... */\n  tag_18\n  swap3\n  pop\n  pop\n  pop\n  jump\n    /* \"SpageroTokenVesting_flattened.sol\":29258:29445  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"SpageroTokenVesting_flattened.sol\":29331:29347  address oldOwner */\n  0x00\n    /* \"SpageroTokenVesting_flattened.sol\":29350:29356  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SpageroTokenVesting_flattened.sol\":29366:29383  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"SpageroTokenVesting_flattened.sol\":29350:29356  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"SpageroTokenVesting_flattened.sol\":29331:29347  address oldOwner */\n  swap1\n    /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"SpageroTokenVesting_flattened.sol\":29321:29445  {... */\n  pop\n    /* \"SpageroTokenVesting_flattened.sol\":29258:29445  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:189   */\ntag_17:\n    /* \"#utility.yul\":92:105   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":134:164   */\n  dup2\n  and\n    /* \"#utility.yul\":124:165   */\n  dup2\n  eq\n    /* \"#utility.yul\":114:183   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":179:180   */\n  0x00\n    /* \"#utility.yul\":176:177   */\n  dup1\n    /* \"#utility.yul\":169:181   */\n  revert\n    /* \"#utility.yul\":114:183   */\ntag_20:\n    /* \"#utility.yul\":14:189   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":194:650   */\ntag_3:\n    /* \"#utility.yul\":280:286   */\n  0x00\n    /* \"#utility.yul\":288:294   */\n  dup1\n    /* \"#utility.yul\":296:302   */\n  0x00\n    /* \"#utility.yul\":349:351   */\n  0x60\n    /* \"#utility.yul\":337:346   */\n  dup5\n    /* \"#utility.yul\":328:335   */\n  dup7\n    /* \"#utility.yul\":324:347   */\n  sub\n    /* \"#utility.yul\":320:352   */\n  slt\n    /* \"#utility.yul\":317:369   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":365:366   */\n  0x00\n    /* \"#utility.yul\":362:363   */\n  dup1\n    /* \"#utility.yul\":355:367   */\n  revert\n    /* \"#utility.yul\":317:369   */\ntag_22:\n    /* \"#utility.yul\":391:407   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":436:467   */\n  dup2\n  and\n    /* \"#utility.yul\":426:468   */\n  dup2\n  eq\n    /* \"#utility.yul\":416:486   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":482:483   */\n  0x00\n    /* \"#utility.yul\":479:480   */\n  dup1\n    /* \"#utility.yul\":472:484   */\n  revert\n    /* \"#utility.yul\":416:486   */\ntag_23:\n    /* \"#utility.yul\":505:510   */\n  swap3\n  pop\n    /* \"#utility.yul\":529:577   */\n  tag_24\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":558:576   */\n  dup6\n  add\n    /* \"#utility.yul\":529:577   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":519:577   */\n  swap2\n  pop\n    /* \"#utility.yul\":596:644   */\n  tag_25\n    /* \"#utility.yul\":640:642   */\n  0x40\n    /* \"#utility.yul\":629:638   */\n  dup6\n    /* \"#utility.yul\":625:643   */\n  add\n    /* \"#utility.yul\":596:644   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":586:644   */\n  swap1\n  pop\n    /* \"#utility.yul\":194:650   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":655:858   */\ntag_18:\n    /* \"SpageroTokenVesting_flattened.sol\":35349:35649  contract SpageroTokenVesting is VestingWallet {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n  0x00\n  assignImmutable(\"0x7e61868c26ad9542219295e4248d06589934ece56761f625f341eef80a4788c7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"SpageroTokenVesting_flattened.sol\":35349:35649  contract SpageroTokenVesting is VestingWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x96132521\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbe9a6555\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xefbe1c1c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfbccedae\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x96132521\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa3f8eace\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x810ec23b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x86d1a69f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x0a17b06b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SpageroTokenVesting_flattened.sol\":34228:34393  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":34228:34393  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SpageroTokenVesting_flattened.sol\":32275:32366  function duration() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":32350:32359  _duration */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"SpageroTokenVesting_flattened.sol\":32343:32359  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":32275:32366  function duration() public view virtual returns (uint256) {... */\n      jump(tag_23)\n        /* \"SpageroTokenVesting_flattened.sol\":33842:34088  function release(address token) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"SpageroTokenVesting_flattened.sol\":28639:28740  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_34\n      tag_40\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":34534:34736  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_23\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":33520:33718  function release() public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_34\n      tag_49\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":28030:28037  address */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      sload\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1339:1390   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1327:1329   */\n      0x20\n        /* \"#utility.yul\":1312:1330   */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":32592:32683  function released() public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":32667:32676  _released */\n      sload(0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":32592:32683  function released() public view virtual returns (uint256) {... */\n      jump(tag_23)\n        /* \"SpageroTokenVesting_flattened.sol\":32750:32866  function released(address token) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_23\n      tag_61\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":32812:32819  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32852  _erc20Released */\n      0x02\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":32750:32866  function released(address token) public view virtual returns (uint256) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":33223:33382  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_23\n      tag_66\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32123:32208  function start() public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_23\n      tag_71\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32430:32527  function end() public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_23\n      tag_75\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":28889:29104  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_34\n      tag_79\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32941:33075  function releasable() public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_23\n      tag_83\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":34228:34393  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"SpageroTokenVesting_flattened.sol\":34297:34304  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":34323:34386  _vestingSchedule(address(this).balance + released(), timestamp) */\n      tag_86\n        /* \"SpageroTokenVesting_flattened.sol\":34364:34374  released() */\n      tag_87\n        /* \"SpageroTokenVesting_flattened.sol\":32667:32676  _released */\n      sload(0x01)\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":32592:32683  function released() public view virtual returns (uint256) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":34364:34374  released() */\n    tag_87:\n        /* \"SpageroTokenVesting_flattened.sol\":34340:34374  address(this).balance + released() */\n      tag_88\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":34340:34361  address(this).balance */\n      selfbalance\n        /* \"SpageroTokenVesting_flattened.sol\":34340:34374  address(this).balance + released() */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"SpageroTokenVesting_flattened.sol\":34376:34385  timestamp */\n      dup4\n        /* \"SpageroTokenVesting_flattened.sol\":34323:34339  _vestingSchedule */\n      tag_90\n        /* \"SpageroTokenVesting_flattened.sol\":34323:34386  _vestingSchedule(address(this).balance + released(), timestamp) */\n      jump\t// in\n    tag_86:\n        /* \"SpageroTokenVesting_flattened.sol\":34316:34386  return _vestingSchedule(address(this).balance + released(), timestamp) */\n      swap3\n        /* \"SpageroTokenVesting_flattened.sol\":34228:34393  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":33842:34088  function release(address token) public virtual {... */\n    tag_37:\n        /* \"SpageroTokenVesting_flattened.sol\":33899:33913  uint256 amount */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":33916:33933  releasable(token) */\n      tag_93\n        /* \"SpageroTokenVesting_flattened.sol\":33927:33932  token */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":33916:33926  releasable */\n      tag_67\n        /* \"SpageroTokenVesting_flattened.sol\":33916:33933  releasable(token) */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33964  _erc20Released[token] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33957  _erc20Released */\n      0x02\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33964  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33974  _erc20Released[token] += amount */\n      dup1\n      sload\n        /* \"SpageroTokenVesting_flattened.sol\":33899:33933  uint256 amount = releasable(token) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33964  _erc20Released[token] */\n      swap1\n      swap2\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33974  _erc20Released[token] += amount */\n      tag_94\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":33899:33933  uint256 amount = releasable(token) */\n      dup5\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33974  _erc20Released[token] += amount */\n      tag_89\n      jump\t// in\n    tag_94:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33989:34017  ERC20Released(token, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":33989:34017  ERC20Released(token, amount) */\n      dup4\n      and\n      swap1\n      0xc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":33989:34017  ERC20Released(token, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SpageroTokenVesting_flattened.sol\":34027:34081  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      tag_96\n        /* \"SpageroTokenVesting_flattened.sol\":34057:34062  token */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":34065:34072  owner() */\n      tag_97\n        /* \"SpageroTokenVesting_flattened.sol\":28030:28037  address */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":34065:34072  owner() */\n    tag_97:\n        /* \"SpageroTokenVesting_flattened.sol\":34074:34080  amount */\n      dup4\n        /* \"SpageroTokenVesting_flattened.sol\":34027:34049  SafeERC20.safeTransfer */\n      tag_98\n        /* \"SpageroTokenVesting_flattened.sol\":34027:34081  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      jump\t// in\n    tag_96:\n        /* \"SpageroTokenVesting_flattened.sol\":33889:34088  {... */\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33842:34088  function release(address token) public virtual {... */\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":28639:28740  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27890  _checkOwner() */\n      tag_100\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27888  _checkOwner */\n      tag_101\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27890  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"SpageroTokenVesting_flattened.sol\":28703:28733  _transferOwnership(address(0)) */\n      tag_103\n        /* \"SpageroTokenVesting_flattened.sol\":28730:28731  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28703:28721  _transferOwnership */\n      tag_104\n        /* \"SpageroTokenVesting_flattened.sol\":28703:28733  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_103:\n        /* \"SpageroTokenVesting_flattened.sol\":28639:28740  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":34534:34736  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      dup3\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":34618:34625  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32852  _erc20Released */\n      0x02\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"SpageroTokenVesting_flattened.sol\":34644:34729  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      tag_106\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34699  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":34693:34697  this */\n      address\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34699  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34684  IERC20(token).balanceOf */\n      dup7\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34699  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34717  IERC20(token).balanceOf(address(this)) + released(token) */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":34644:34729  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n    tag_106:\n        /* \"SpageroTokenVesting_flattened.sol\":34637:34729  return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      swap4\n        /* \"SpageroTokenVesting_flattened.sol\":34534:34736  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":33520:33718  function release() public virtual {... */\n    tag_49:\n        /* \"SpageroTokenVesting_flattened.sol\":33564:33578  uint256 amount */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":33581:33593  releasable() */\n      tag_115\n        /* \"SpageroTokenVesting_flattened.sol\":33581:33591  releasable */\n      tag_83\n        /* \"SpageroTokenVesting_flattened.sol\":33581:33593  releasable() */\n      jump\t// in\n    tag_115:\n        /* \"SpageroTokenVesting_flattened.sol\":33564:33593  uint256 amount = releasable() */\n      swap1\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33616:33622  amount */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":33603:33612  _released */\n      0x01\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":33603:33622  _released += amount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_116:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33637:33658  EtherReleased(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":33637:33658  EtherReleased(amount) */\n      0xda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":33637:33658  EtherReleased(amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SpageroTokenVesting_flattened.sol\":33668:33711  Address.sendValue(payable(owner()), amount) */\n      tag_118\n        /* \"SpageroTokenVesting_flattened.sol\":33694:33701  owner() */\n      tag_119\n        /* \"SpageroTokenVesting_flattened.sol\":28030:28037  address */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":33694:33701  owner() */\n    tag_119:\n        /* \"SpageroTokenVesting_flattened.sol\":33704:33710  amount */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":33668:33685  Address.sendValue */\n      tag_120\n        /* \"SpageroTokenVesting_flattened.sol\":33668:33711  Address.sendValue(payable(owner()), amount) */\n      jump\t// in\n    tag_118:\n        /* \"SpageroTokenVesting_flattened.sol\":33554:33718  {... */\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33520:33718  function release() public virtual {... */\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":33223:33382  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      dup2\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":33287:33294  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32852  _erc20Released */\n      0x02\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"SpageroTokenVesting_flattened.sol\":33313:33357  vestedAmount(token, uint64(block.timestamp)) */\n      tag_126\n        /* \"SpageroTokenVesting_flattened.sol\":33326:33331  token */\n      dup4\n        /* \"SpageroTokenVesting_flattened.sol\":33340:33355  block.timestamp */\n      timestamp\n        /* \"SpageroTokenVesting_flattened.sol\":33313:33325  vestedAmount */\n      tag_45\n        /* \"SpageroTokenVesting_flattened.sol\":33313:33357  vestedAmount(token, uint64(block.timestamp)) */\n      jump\t// in\n    tag_126:\n        /* \"SpageroTokenVesting_flattened.sol\":33313:33375  vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      tag_86\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32123:32208  function start() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"SpageroTokenVesting_flattened.sol\":32188:32201  return _start */\n      0xffffffffffffffff\n        /* \"SpageroTokenVesting_flattened.sol\":32195:32201  _start */\n      immutable(\"0x7e61868c26ad9542219295e4248d06589934ece56761f625f341eef80a4788c7\")\n        /* \"SpageroTokenVesting_flattened.sol\":32188:32201  return _start */\n      and\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":32123:32208  function start() public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":32430:32527  function end() public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"SpageroTokenVesting_flattened.sol\":32474:32481  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":32350:32359  _duration */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"SpageroTokenVesting_flattened.sol\":32343:32359  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":32500:32507  start() */\n      tag_132\n        /* \"SpageroTokenVesting_flattened.sol\":32500:32505  start */\n      tag_71\n        /* \"SpageroTokenVesting_flattened.sol\":32500:32507  start() */\n      jump\t// in\n    tag_132:\n        /* \"SpageroTokenVesting_flattened.sol\":32500:32520  start() + duration() */\n      tag_133\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_133:\n        /* \"SpageroTokenVesting_flattened.sol\":32493:32520  return start() + duration() */\n      swap1\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":32430:32527  function end() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":28889:29104  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_80:\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27890  _checkOwner() */\n      tag_135\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27888  _checkOwner */\n      tag_101\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27890  _checkOwner() */\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":28973:28995  newOwner == address(0) */\n      dup2\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":28969:29060  if (newOwner == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":29018:29049  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":29046:29047  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":29018:29049  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":29018:29049  OwnableInvalidOwner(address(0)) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SpageroTokenVesting_flattened.sol\":28969:29060  if (newOwner == address(0)) {... */\n    tag_137:\n        /* \"SpageroTokenVesting_flattened.sol\":29069:29097  _transferOwnership(newOwner) */\n      tag_118\n        /* \"SpageroTokenVesting_flattened.sol\":29088:29096  newOwner */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":29069:29087  _transferOwnership */\n      tag_104\n        /* \"SpageroTokenVesting_flattened.sol\":29069:29097  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32941:33075  function releasable() public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"SpageroTokenVesting_flattened.sol\":32992:32999  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":33058:33068  released() */\n      tag_141\n        /* \"SpageroTokenVesting_flattened.sol\":32667:32676  _released */\n      sload(0x01)\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":32592:32683  function released() public view virtual returns (uint256) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":33058:33068  released() */\n    tag_141:\n        /* \"SpageroTokenVesting_flattened.sol\":33018:33055  vestedAmount(uint64(block.timestamp)) */\n      tag_142\n        /* \"SpageroTokenVesting_flattened.sol\":33038:33053  block.timestamp */\n      timestamp\n        /* \"SpageroTokenVesting_flattened.sol\":33018:33030  vestedAmount */\n      tag_26\n        /* \"SpageroTokenVesting_flattened.sol\":33018:33055  vestedAmount(uint64(block.timestamp)) */\n      jump\t// in\n    tag_142:\n        /* \"SpageroTokenVesting_flattened.sol\":33018:33068  vestedAmount(uint64(block.timestamp)) - released() */\n      tag_133\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":34931:35283  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_90:\n        /* \"SpageroTokenVesting_flattened.sol\":35031:35038  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":35066:35073  start() */\n      tag_145\n        /* \"SpageroTokenVesting_flattened.sol\":35066:35071  start */\n      tag_71\n        /* \"SpageroTokenVesting_flattened.sol\":35066:35073  start() */\n      jump\t// in\n    tag_145:\n        /* \"SpageroTokenVesting_flattened.sol\":35054:35063  timestamp */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":35054:35073  timestamp < start() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"SpageroTokenVesting_flattened.sol\":35050:35277  if (timestamp < start()) {... */\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":35096:35097  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":35089:35097  return 0 */\n      jump(tag_86)\n        /* \"SpageroTokenVesting_flattened.sol\":35050:35277  if (timestamp < start()) {... */\n    tag_146:\n        /* \"SpageroTokenVesting_flattened.sol\":35131:35136  end() */\n      tag_148\n        /* \"SpageroTokenVesting_flattened.sol\":35131:35134  end */\n      tag_75\n        /* \"SpageroTokenVesting_flattened.sol\":35131:35136  end() */\n      jump\t// in\n    tag_148:\n        /* \"SpageroTokenVesting_flattened.sol\":35118:35127  timestamp */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":35118:35136  timestamp >= end() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"SpageroTokenVesting_flattened.sol\":35114:35277  if (timestamp >= end()) {... */\n      tag_149\n      jumpi\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":35159:35174  totalAllocation */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":35152:35174  return totalAllocation */\n      jump(tag_86)\n        /* \"SpageroTokenVesting_flattened.sol\":35114:35277  if (timestamp >= end()) {... */\n    tag_149:\n        /* \"SpageroTokenVesting_flattened.sol\":32350:32359  _duration */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"SpageroTokenVesting_flattened.sol\":32343:32359  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":35244:35251  start() */\n      tag_152\n        /* \"SpageroTokenVesting_flattened.sol\":35244:35249  start */\n      tag_71\n        /* \"SpageroTokenVesting_flattened.sol\":35244:35251  start() */\n      jump\t// in\n    tag_152:\n        /* \"SpageroTokenVesting_flattened.sol\":35232:35251  timestamp - start() */\n      tag_153\n      swap1\n      0xffffffffffffffff\n      dup6\n      and\n      tag_128\n      jump\t// in\n    tag_153:\n        /* \"SpageroTokenVesting_flattened.sol\":35213:35252  totalAllocation * (timestamp - start()) */\n      tag_154\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":35213:35228  totalAllocation */\n      dup6\n        /* \"SpageroTokenVesting_flattened.sol\":35213:35252  totalAllocation * (timestamp - start()) */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"SpageroTokenVesting_flattened.sol\":35212:35266  (totalAllocation * (timestamp - start())) / duration() */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"SpageroTokenVesting_flattened.sol\":35205:35266  return (totalAllocation * (timestamp - start())) / duration() */\n      swap1\n      pop\n      jump(tag_86)\n        /* \"SpageroTokenVesting_flattened.sol\":9630:9790  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"SpageroTokenVesting_flattened.sol\":9739:9782  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2572:2604   */\n      dup5\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":9739:9782  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2554:2605   */\n      mstore\n        /* \"#utility.yul\":2621:2639   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2614:2648   */\n      dup5\n      swap1\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":9739:9782  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2527:2545   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":9739:9782  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":9712:9783  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_159\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":9732:9737  token */\n      dup5\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":9712:9731  _callOptionalReturn */\n      tag_162\n        /* \"SpageroTokenVesting_flattened.sol\":9712:9783  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_159:\n        /* \"SpageroTokenVesting_flattened.sol\":9630:9790  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":28142:28304  function _checkOwner() internal view virtual {... */\n    tag_101:\n        /* \"SpageroTokenVesting_flattened.sol\":28030:28037  address */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":26141:26151  msg.sender */\n      caller\n        /* \"SpageroTokenVesting_flattened.sol\":28201:28224  owner() != _msgSender() */\n      eq\n        /* \"SpageroTokenVesting_flattened.sol\":28197:28298  if (owner() != _msgSender()) {... */\n      tag_103\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":28247:28287  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":26141:26151  msg.sender */\n      caller\n        /* \"SpageroTokenVesting_flattened.sol\":28247:28287  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":28247:28287  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_138\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":29258:29445  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_104:\n        /* \"SpageroTokenVesting_flattened.sol\":29331:29347  address oldOwner */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":29350:29356  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":29366:29383  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"SpageroTokenVesting_flattened.sol\":29350:29356  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"SpageroTokenVesting_flattened.sol\":29331:29347  address oldOwner */\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"SpageroTokenVesting_flattened.sol\":29321:29445  {... */\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":29258:29445  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":20678:21043  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_120:\n        /* \"SpageroTokenVesting_flattened.sol\":20787:20793  amount */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":20763:20784  address(this).balance */\n      selfbalance\n        /* \"SpageroTokenVesting_flattened.sol\":20763:20793  address(this).balance < amount */\n      lt\n        /* \"SpageroTokenVesting_flattened.sol\":20759:20884  if (address(this).balance < amount) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":20816:20873  Errors.InsufficientBalance(address(this).balance, amount) */\n      mload(0x40)\n      shl(0xe0, 0xcf479181)\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":20843:20864  address(this).balance */\n      selfbalance\n        /* \"SpageroTokenVesting_flattened.sol\":20816:20873  Errors.InsufficientBalance(address(this).balance, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2833:2858   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2867:2901   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2806:2824   */\n      0x44\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":20816:20873  Errors.InsufficientBalance(address(this).balance, amount) */\n      tag_138\n        /* \"#utility.yul\":2659:2907   */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":20759:20884  if (address(this).balance < amount) {... */\n    tag_172:\n        /* \"SpageroTokenVesting_flattened.sol\":20895:20907  bool success */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":20909:20932  bytes memory returndata */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":20936:20945  recipient */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":20936:20950  recipient.call */\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":20958:20964  amount */\n      dup4\n        /* \"SpageroTokenVesting_flattened.sol\":20936:20969  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_179\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_178)\n    tag_179:\n      0x60\n      swap2\n      pop\n    tag_178:\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":20894:20969  (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":20984:20991  success */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":20979:21037  if (!success) {... */\n      tag_181\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":21007:21026  _revert(returndata) */\n      tag_181\n        /* \"SpageroTokenVesting_flattened.sol\":21015:21025  returndata */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":21007:21014  _revert */\n      tag_182\n        /* \"SpageroTokenVesting_flattened.sol\":21007:21026  _revert(returndata) */\n      jump\t// in\n    tag_181:\n        /* \"SpageroTokenVesting_flattened.sol\":20749:21043  {... */\n      pop\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":20678:21043  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":16781:17501  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_162:\n        /* \"SpageroTokenVesting_flattened.sol\":16861:16879  uint256 returnSize */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":16889:16908  uint256 returnValue */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":17027:17031  0x20 */\n      0x20\n        /* \"SpageroTokenVesting_flattened.sol\":17024:17025  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":17017:17021  data */\n      dup5\n        /* \"SpageroTokenVesting_flattened.sol\":17011:17022  mload(data) */\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":17004:17008  0x20 */\n      0x20\n        /* \"SpageroTokenVesting_flattened.sol\":16998:17002  data */\n      dup7\n        /* \"SpageroTokenVesting_flattened.sol\":16994:17009  add(data, 0x20) */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":16991:16992  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":16984:16989  token */\n      dup9\n        /* \"SpageroTokenVesting_flattened.sol\":16977:16982  gas() */\n      gas\n        /* \"SpageroTokenVesting_flattened.sol\":16972:17032  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"SpageroTokenVesting_flattened.sol\":17084:17091  success */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":17074:17250  if iszero(success) {... */\n      tag_184\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":17128:17132  0x40 */\n      0x40\n        /* \"SpageroTokenVesting_flattened.sol\":17122:17133  mload(0x40) */\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":17173:17189  returndatasize() */\n      returndatasize\n        /* \"SpageroTokenVesting_flattened.sol\":17170:17171  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":17165:17168  ptr */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":17150:17190  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"SpageroTokenVesting_flattened.sol\":17219:17235  returndatasize() */\n      returndatasize\n        /* \"SpageroTokenVesting_flattened.sol\":17214:17217  ptr */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":17207:17236  revert(ptr, returndatasize()) */\n      revert\n        /* \"SpageroTokenVesting_flattened.sol\":17074:17250  if iszero(success) {... */\n    tag_184:\n      pop\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":17327:17328  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":17321:17329  mload(0) */\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":17277:17293  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":17353:17368  returnSize == 0 */\n      dup2\n      iszero\n        /* \"SpageroTokenVesting_flattened.sol\":17353:17421  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_185\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":17405:17416  returnValue */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":17420:17421  1 */\n      0x01\n        /* \"SpageroTokenVesting_flattened.sol\":17405:17421  returnValue != 1 */\n      eq\n      iszero\n        /* \"SpageroTokenVesting_flattened.sol\":17353:17421  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_186)\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":17371:17397  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"SpageroTokenVesting_flattened.sol\":17371:17402  address(token).code.length == 0 */\n      iszero\n        /* \"SpageroTokenVesting_flattened.sol\":17353:17421  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_186:\n        /* \"SpageroTokenVesting_flattened.sol\":17349:17495  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":17444:17484  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1357:1389   */\n      dup6\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":17444:17484  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":17444:17484  SafeERC20FailedOperation(address(token)) */\n      tag_138\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":24947:25381  function _revert(bytes memory returndata) private pure {... */\n    tag_182:\n        /* \"SpageroTokenVesting_flattened.sol\":25078:25095  returndata.length */\n      dup1\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":25078:25099  returndata.length > 0 */\n      iszero\n        /* \"SpageroTokenVesting_flattened.sol\":25074:25375  if (returndata.length > 0) {... */\n      tag_191\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":25282:25292  returndata */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":25276:25293  mload(returndata) */\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":25269:25273  0x20 */\n      0x20\n        /* \"SpageroTokenVesting_flattened.sol\":25257:25267  returndata */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":25253:25274  add(returndata, 0x20) */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":25246:25294  revert(add(returndata, 0x20), mload(returndata)) */\n      revert\n        /* \"SpageroTokenVesting_flattened.sol\":25074:25375  if (returndata.length > 0) {... */\n    tag_191:\n        /* \"SpageroTokenVesting_flattened.sol\":25345:25364  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:185   */\n    tag_193:\n        /* \"#utility.yul\":81:101   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":141:159   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":130:160   */\n      dup2\n      and\n        /* \"#utility.yul\":120:161   */\n      dup2\n      eq\n        /* \"#utility.yul\":110:179   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":175:176   */\n      0x00\n        /* \"#utility.yul\":172:173   */\n      dup1\n        /* \"#utility.yul\":165:177   */\n      revert\n        /* \"#utility.yul\":110:179   */\n    tag_198:\n        /* \"#utility.yul\":14:185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":190:374   */\n    tag_25:\n        /* \"#utility.yul\":248:254   */\n      0x00\n        /* \"#utility.yul\":301:303   */\n      0x20\n        /* \"#utility.yul\":289:298   */\n      dup3\n        /* \"#utility.yul\":280:287   */\n      dup5\n        /* \"#utility.yul\":276:299   */\n      sub\n        /* \"#utility.yul\":272:304   */\n      slt\n        /* \"#utility.yul\":269:321   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":269:321   */\n    tag_200:\n        /* \"#utility.yul\":340:368   */\n      tag_106\n        /* \"#utility.yul\":358:367   */\n      dup3\n        /* \"#utility.yul\":340:368   */\n      tag_193\n      jump\t// in\n        /* \"#utility.yul\":561:734   */\n    tag_194:\n        /* \"#utility.yul\":629:649   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:709   */\n      dup2\n      and\n        /* \"#utility.yul\":668:710   */\n      dup2\n      eq\n        /* \"#utility.yul\":658:728   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":721:722   */\n      dup1\n        /* \"#utility.yul\":714:726   */\n      revert\n        /* \"#utility.yul\":739:925   */\n    tag_36:\n        /* \"#utility.yul\":798:804   */\n      0x00\n        /* \"#utility.yul\":851:853   */\n      0x20\n        /* \"#utility.yul\":839:848   */\n      dup3\n        /* \"#utility.yul\":830:837   */\n      dup5\n        /* \"#utility.yul\":826:849   */\n      sub\n        /* \"#utility.yul\":822:854   */\n      slt\n        /* \"#utility.yul\":819:871   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":867:868   */\n      0x00\n        /* \"#utility.yul\":864:865   */\n      dup1\n        /* \"#utility.yul\":857:869   */\n      revert\n        /* \"#utility.yul\":819:871   */\n    tag_206:\n        /* \"#utility.yul\":890:919   */\n      tag_106\n        /* \"#utility.yul\":909:918   */\n      dup3\n        /* \"#utility.yul\":890:919   */\n      tag_194\n      jump\t// in\n        /* \"#utility.yul\":930:1188   */\n    tag_44:\n        /* \"#utility.yul\":997:1003   */\n      0x00\n        /* \"#utility.yul\":1005:1011   */\n      dup1\n        /* \"#utility.yul\":1058:1060   */\n      0x40\n        /* \"#utility.yul\":1046:1055   */\n      dup4\n        /* \"#utility.yul\":1037:1044   */\n      dup6\n        /* \"#utility.yul\":1033:1056   */\n      sub\n        /* \"#utility.yul\":1029:1061   */\n      slt\n        /* \"#utility.yul\":1026:1078   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1074:1075   */\n      0x00\n        /* \"#utility.yul\":1071:1072   */\n      dup1\n        /* \"#utility.yul\":1064:1076   */\n      revert\n        /* \"#utility.yul\":1026:1078   */\n    tag_209:\n        /* \"#utility.yul\":1097:1126   */\n      tag_210\n        /* \"#utility.yul\":1116:1125   */\n      dup4\n        /* \"#utility.yul\":1097:1126   */\n      tag_194\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1087:1126   */\n      swap2\n      pop\n        /* \"#utility.yul\":1145:1182   */\n      tag_211\n        /* \"#utility.yul\":1178:1180   */\n      0x20\n        /* \"#utility.yul\":1167:1176   */\n      dup5\n        /* \"#utility.yul\":1163:1181   */\n      add\n        /* \"#utility.yul\":1145:1182   */\n      tag_193\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1135:1182   */\n      swap1\n      pop\n        /* \"#utility.yul\":930:1188   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1401:1528   */\n    tag_195:\n        /* \"#utility.yul\":1462:1472   */\n      0x4e487b71\n        /* \"#utility.yul\":1457:1460   */\n      0xe0\n        /* \"#utility.yul\":1453:1473   */\n      shl\n        /* \"#utility.yul\":1450:1451   */\n      0x00\n        /* \"#utility.yul\":1443:1474   */\n      mstore\n        /* \"#utility.yul\":1493:1497   */\n      0x11\n        /* \"#utility.yul\":1490:1491   */\n      0x04\n        /* \"#utility.yul\":1483:1498   */\n      mstore\n        /* \"#utility.yul\":1517:1521   */\n      0x24\n        /* \"#utility.yul\":1514:1515   */\n      0x00\n        /* \"#utility.yul\":1507:1522   */\n      revert\n        /* \"#utility.yul\":1533:1658   */\n    tag_89:\n        /* \"#utility.yul\":1598:1607   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1619:1629   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1616:1652   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1632:1650   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1663:1847   */\n    tag_112:\n        /* \"#utility.yul\":1733:1739   */\n      0x00\n        /* \"#utility.yul\":1786:1788   */\n      0x20\n        /* \"#utility.yul\":1774:1783   */\n      dup3\n        /* \"#utility.yul\":1765:1772   */\n      dup5\n        /* \"#utility.yul\":1761:1784   */\n      sub\n        /* \"#utility.yul\":1757:1789   */\n      slt\n        /* \"#utility.yul\":1754:1806   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":1802:1803   */\n      0x00\n        /* \"#utility.yul\":1799:1800   */\n      dup1\n        /* \"#utility.yul\":1792:1804   */\n      revert\n        /* \"#utility.yul\":1754:1806   */\n    tag_218:\n      pop\n        /* \"#utility.yul\":1825:1841   */\n      mload\n      swap2\n        /* \"#utility.yul\":1663:1847   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:1980   */\n    tag_128:\n        /* \"#utility.yul\":1919:1928   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1940:1951   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1937:1974   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1954:1972   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1985:2153   */\n    tag_155:\n        /* \"#utility.yul\":2058:2067   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2089:2098   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2106:2121   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2100:2122   */\n      dup5\n      eq\n        /* \"#utility.yul\":2086:2123   */\n      or\n        /* \"#utility.yul\":2076:2147   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2127:2145   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":2158:2375   */\n    tag_157:\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2224:2225   */\n      dup3\n        /* \"#utility.yul\":2214:2346   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2268:2278   */\n      0x4e487b71\n        /* \"#utility.yul\":2263:2266   */\n      0xe0\n        /* \"#utility.yul\":2259:2279   */\n      shl\n        /* \"#utility.yul\":2256:2257   */\n      0x00\n        /* \"#utility.yul\":2249:2280   */\n      mstore\n        /* \"#utility.yul\":2303:2307   */\n      0x12\n        /* \"#utility.yul\":2300:2301   */\n      0x04\n        /* \"#utility.yul\":2293:2308   */\n      mstore\n        /* \"#utility.yul\":2331:2335   */\n      0x24\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2321:2336   */\n      revert\n        /* \"#utility.yul\":2214:2346   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":2360:2369   */\n      div\n      swap1\n        /* \"#utility.yul\":2158:2375   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220745ba72e7c4e74d2fae77a5e90dc1f6e40c70b475ee61e114c7b809c8e25bfbc64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1126": {
									"entryPoint": null,
									"id": 1126,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_1396": {
									"entryPoint": null,
									"id": 1396,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1077": {
									"entryPoint": 133,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint64_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:860:1",
										"nodeType": "YulBlock",
										"src": "0:860:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "73:116:1",
													"nodeType": "YulBlock",
													"src": "73:116:1",
													"statements": [
														{
															"nativeSrc": "83:22:1",
															"nodeType": "YulAssignment",
															"src": "83:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "98:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "98:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "92:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:1"
																},
																"nativeSrc": "92:13:1",
																"nodeType": "YulFunctionCall",
																"src": "92:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "83:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "83:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "167:16:1",
																"nodeType": "YulBlock",
																"src": "167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "176:1:1",
																					"nodeType": "YulLiteral",
																					"src": "176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "179:1:1",
																					"nodeType": "YulLiteral",
																					"src": "179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "169:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:1"
																			},
																			"nativeSrc": "169:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:1"
																		},
																		"nativeSrc": "169:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "127:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "127:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "138:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "138:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "153:2:1",
																										"nodeType": "YulLiteral",
																										"src": "153:2:1",
																										"type": "",
																										"value": "64"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "157:1:1",
																										"nodeType": "YulLiteral",
																										"src": "157:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "149:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "149:3:1"
																								},
																								"nativeSrc": "149:10:1",
																								"nodeType": "YulFunctionCall",
																								"src": "149:10:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "161:1:1",
																								"nodeType": "YulLiteral",
																								"src": "161:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "145:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "145:3:1"
																						},
																						"nativeSrc": "145:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "145:18:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "134:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "134:3:1"
																				},
																				"nativeSrc": "134:30:1",
																				"nodeType": "YulFunctionCall",
																				"src": "134:30:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "124:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "124:2:1"
																		},
																		"nativeSrc": "124:41:1",
																		"nodeType": "YulFunctionCall",
																		"src": "124:41:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "117:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "117:6:1"
																},
																"nativeSrc": "117:49:1",
																"nodeType": "YulFunctionCall",
																"src": "117:49:1"
															},
															"nativeSrc": "114:69:1",
															"nodeType": "YulIf",
															"src": "114:69:1"
														}
													]
												},
												"name": "abi_decode_uint64_fromMemory",
												"nativeSrc": "14:175:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "52:6:1",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "63:5:1",
														"nodeType": "YulTypedName",
														"src": "63:5:1",
														"type": ""
													}
												],
												"src": "14:175:1"
											},
											{
												"body": {
													"nativeSrc": "307:343:1",
													"nodeType": "YulBlock",
													"src": "307:343:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "353:16:1",
																"nodeType": "YulBlock",
																"src": "353:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "362:1:1",
																					"nodeType": "YulLiteral",
																					"src": "362:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "365:1:1",
																					"nodeType": "YulLiteral",
																					"src": "365:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "355:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "355:6:1"
																			},
																			"nativeSrc": "355:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "355:12:1"
																		},
																		"nativeSrc": "355:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "355:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "328:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "328:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "337:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "337:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "324:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "324:3:1"
																		},
																		"nativeSrc": "324:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "324:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "349:2:1",
																		"nodeType": "YulLiteral",
																		"src": "349:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "320:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "320:3:1"
																},
																"nativeSrc": "320:32:1",
																"nodeType": "YulFunctionCall",
																"src": "320:32:1"
															},
															"nativeSrc": "317:52:1",
															"nodeType": "YulIf",
															"src": "317:52:1"
														},
														{
															"nativeSrc": "378:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "378:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "397:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "397:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "391:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "391:5:1"
																},
																"nativeSrc": "391:16:1",
																"nodeType": "YulFunctionCall",
																"src": "391:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "382:5:1",
																	"nodeType": "YulTypedName",
																	"src": "382:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "470:16:1",
																"nodeType": "YulBlock",
																"src": "470:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "479:1:1",
																					"nodeType": "YulLiteral",
																					"src": "479:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "482:1:1",
																					"nodeType": "YulLiteral",
																					"src": "482:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "472:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "472:6:1"
																			},
																			"nativeSrc": "472:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "472:12:1"
																		},
																		"nativeSrc": "472:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "472:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "429:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "429:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "440:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "440:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "455:3:1",
																										"nodeType": "YulLiteral",
																										"src": "455:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "460:1:1",
																										"nodeType": "YulLiteral",
																										"src": "460:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "451:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "451:3:1"
																								},
																								"nativeSrc": "451:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "451:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "464:1:1",
																								"nodeType": "YulLiteral",
																								"src": "464:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "447:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "447:3:1"
																						},
																						"nativeSrc": "447:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "447:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "436:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "436:3:1"
																				},
																				"nativeSrc": "436:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "436:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "426:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "426:2:1"
																		},
																		"nativeSrc": "426:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "426:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:1"
																},
																"nativeSrc": "419:50:1",
																"nodeType": "YulFunctionCall",
																"src": "419:50:1"
															},
															"nativeSrc": "416:70:1",
															"nodeType": "YulIf",
															"src": "416:70:1"
														},
														{
															"nativeSrc": "495:15:1",
															"nodeType": "YulAssignment",
															"src": "495:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "505:5:1",
																"nodeType": "YulIdentifier",
																"src": "505:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "495:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:1"
																}
															]
														},
														{
															"nativeSrc": "519:58:1",
															"nodeType": "YulAssignment",
															"src": "519:58:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "573:2:1",
																				"nodeType": "YulLiteral",
																				"src": "573:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:1"
																		},
																		"nativeSrc": "558:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "558:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nativeSrc": "529:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "529:28:1"
																},
																"nativeSrc": "529:48:1",
																"nodeType": "YulFunctionCall",
																"src": "529:48:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "519:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:1"
																}
															]
														},
														{
															"nativeSrc": "586:58:1",
															"nodeType": "YulAssignment",
															"src": "586:58:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "629:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "629:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "640:2:1",
																				"nodeType": "YulLiteral",
																				"src": "640:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "625:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "625:3:1"
																		},
																		"nativeSrc": "625:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "625:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nativeSrc": "596:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "596:28:1"
																},
																"nativeSrc": "596:48:1",
																"nodeType": "YulFunctionCall",
																"src": "596:48:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "586:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory",
												"nativeSrc": "194:456:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "257:9:1",
														"nodeType": "YulTypedName",
														"src": "257:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "268:7:1",
														"nodeType": "YulTypedName",
														"src": "268:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "288:6:1",
														"nodeType": "YulTypedName",
														"src": "288:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"src": "194:456:1"
											},
											{
												"body": {
													"nativeSrc": "756:102:1",
													"nodeType": "YulBlock",
													"src": "756:102:1",
													"statements": [
														{
															"nativeSrc": "766:26:1",
															"nodeType": "YulAssignment",
															"src": "766:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "778:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "778:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "789:2:1",
																		"nodeType": "YulLiteral",
																		"src": "789:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "774:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "774:3:1"
																},
																"nativeSrc": "774:18:1",
																"nodeType": "YulFunctionCall",
																"src": "774:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "766:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "766:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "808:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "808:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "823:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "839:3:1",
																								"nodeType": "YulLiteral",
																								"src": "839:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "844:1:1",
																								"nodeType": "YulLiteral",
																								"src": "844:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "835:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "835:3:1"
																						},
																						"nativeSrc": "835:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "835:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "848:1:1",
																						"nodeType": "YulLiteral",
																						"src": "848:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "831:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "831:3:1"
																				},
																				"nativeSrc": "831:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "831:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "819:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:1"
																		},
																		"nativeSrc": "819:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "819:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "801:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "801:6:1"
																},
																"nativeSrc": "801:51:1",
																"nodeType": "YulFunctionCall",
																"src": "801:51:1"
															},
															"nativeSrc": "801:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "801:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "655:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "725:9:1",
														"nodeType": "YulTypedName",
														"src": "725:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "736:6:1",
														"nodeType": "YulTypedName",
														"src": "736:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "747:4:1",
														"nodeType": "YulTypedName",
														"src": "747:4:1",
														"type": ""
													}
												],
												"src": "655:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_uint64_fromMemory(add(headStart, 32))\n        value2 := abi_decode_uint64_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051610ac7380380610ac783398101604081905261002e916100ef565b828282826001600160a01b03811661005f57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006881610085565b506001600160401b039182166080521660a0525061013c92505050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160401b03811681146100ea575f80fd5b919050565b5f805f60608486031215610101575f80fd5b83516001600160a01b0381168114610117575f80fd5b9250610125602085016100d4565b9150610133604085016100d4565b90509250925092565b60805160a05161095c61016b5f395f8181610127015281816104d401526105b201525f6104ae015261095c5ff3fe6080604052600436106100dc575f3560e01c8063961325211161007c578063be9a655511610057578063be9a65551461024a578063efbe1c1c1461025e578063f2fde38b14610272578063fbccedae14610291575f80fd5b806396132521146101e35780639852595c146101f7578063a3f8eace1461022b575f80fd5b8063715018a6116100b7578063715018a614610176578063810ec23b1461018a57806386d1a69f146101a95780638da5cb5b146101bd575f80fd5b80630a17b06b146100e75780630fb5a6b4146101195780631916558714610155575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b50610106610101366004610826565b6102a5565b6040519081526020015b60405180910390f35b348015610124575f80fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610106565b348015610160575f80fd5b5061017461016f366004610855565b6102c8565b005b348015610181575f80fd5b50610174610360565b348015610195575f80fd5b506101066101a436600461086e565b610373565b3480156101b4575f80fd5b50610174610406565b3480156101c8575f80fd5b505f546040516001600160a01b039091168152602001610110565b3480156101ee575f80fd5b50600154610106565b348015610202575f80fd5b50610106610211366004610855565b6001600160a01b03165f9081526002602052604090205490565b348015610236575f80fd5b50610106610245366004610855565b610477565b348015610255575f80fd5b506101066104a3565b348015610269575f80fd5b506101066104d1565b34801561027d575f80fd5b5061017461028c366004610855565b610514565b34801561029c575f80fd5b50610106610553565b5f6102c26102b260015490565b6102bc90476108b3565b83610570565b92915050565b5f6102d282610477565b6001600160a01b0383165f908152600260205260408120805492935083929091906102fe9084906108b3565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a261035c826103565f546001600160a01b031690565b83610612565b5050565b610368610669565b6103715f610695565b565b6001600160a01b0382165f908152600260205260408120546103ff906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103d1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f591906108c6565b6102bc91906108b3565b9392505050565b5f61040f610553565b90508060015f82825461042291906108b3565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161047461046e5f546001600160a01b031690565b826106e4565b50565b6001600160a01b0381165f908152600260205260408120546104998342610373565b6102c291906108dd565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b5f7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105056104a3565b61050f91906108b3565b905090565b61051c610669565b6001600160a01b03811661054a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61047481610695565b5f61055d60015490565b610566426102a5565b61050f91906108dd565b5f6105796104a3565b8267ffffffffffffffff16101561059157505f6102c2565b6105996104d1565b8267ffffffffffffffff16106105b05750816102c2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105e36104a3565b6105f79067ffffffffffffffff85166108dd565b61060190856108f0565b61060b9190610907565b90506102c2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610664908490610776565b505050565b5f546001600160a01b031633146103715760405163118cdaa760e01b8152336004820152602401610541565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8047101561070e5760405163cf47918160e01b815247600482015260248101829052604401610541565b5f80836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610758576040519150601f19603f3d011682016040523d82523d5f602084013e61075d565b606091505b50915091508161077057610770816107e2565b50505050565b5f8060205f8451602086015f885af180610795576040513d5f823e3d81fd5b50505f513d915081156107ac5780600114156107b9565b6001600160a01b0384163b155b1561077057604051635274afe760e01b81526001600160a01b0385166004820152602401610541565b8051156107f157805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b803567ffffffffffffffff81168114610821575f80fd5b919050565b5f60208284031215610836575f80fd5b6103ff8261080a565b80356001600160a01b0381168114610821575f80fd5b5f60208284031215610865575f80fd5b6103ff8261083f565b5f806040838503121561087f575f80fd5b6108888361083f565b91506108966020840161080a565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102c2576102c261089f565b5f602082840312156108d6575f80fd5b5051919050565b818103818111156102c2576102c261089f565b80820281158282048414176102c2576102c261089f565b5f8261092157634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220745ba72e7c4e74d2fae77a5e90dc1f6e40c70b475ee61e114c7b809c8e25bfbc64736f6c63430008180033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAC7 CODESIZE SUB DUP1 PUSH2 0xAC7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEF JUMP JUMPDEST DUP3 DUP3 DUP3 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68 DUP2 PUSH2 0x85 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE POP PUSH2 0x13C SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x117 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x125 PUSH1 0x20 DUP6 ADD PUSH2 0xD4 JUMP JUMPDEST SWAP2 POP PUSH2 0x133 PUSH1 0x40 DUP6 ADD PUSH2 0xD4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x95C PUSH2 0x16B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x127 ADD MSTORE DUP2 DUP2 PUSH2 0x4D4 ADD MSTORE PUSH2 0x5B2 ADD MSTORE PUSH0 PUSH2 0x4AE ADD MSTORE PUSH2 0x95C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xE3 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x360 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x553 JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x2B2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BC SWAP1 SELFBALANCE PUSH2 0x8B3 JUMP JUMPDEST DUP4 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2 DUP3 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x35C DUP3 PUSH2 0x356 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x612 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x371 PUSH0 PUSH2 0x695 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x40F PUSH2 0x553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x474 PUSH2 0x46E PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x499 DUP4 TIMESTAMP PUSH2 0x373 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x505 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x695 JUMP JUMPDEST PUSH0 PUSH2 0x55D PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x566 TIMESTAMP PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH2 0x579 PUSH2 0x4A3 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x591 JUMPI POP PUSH0 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x599 PUSH2 0x4D1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x5B0 JUMPI POP DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5E3 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5F7 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x664 SWAP1 DUP5 SWAP1 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7AC JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x7F1 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x80A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP4 PUSH2 0x83F JUMP JUMPDEST SWAP2 POP PUSH2 0x896 PUSH1 0x20 DUP5 ADD PUSH2 0x80A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x921 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x5BA72E7C4E74D2FAE77A5E90DC1F6E40C70B475EE6 0x1E GT 0x4C PUSH28 0x809C8E25BFBC64736F6C634300081800330000000000000000000000 ",
							"sourceMap": "35349:300:0:-:0;;;35461:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;35592:18;35612:14;35628:15;35592:18;-1:-1:-1;;;;;27619:26:0;;27615:95;;27668:31;;-1:-1:-1;;;27668:31:0;;27696:1;27668:31;;;801:51:1;774:18;;27668:31:0;;;;;;;27615:95;27719:32;27738:12;27719:18;:32::i;:::-;-1:-1:-1;;;;;;31875:23:0;;::::1;;::::0;31908:27:::1;;::::0;-1:-1:-1;35349:300:0;;-1:-1:-1;;;35349:300:0;29258:187;29331:16;29350:6;;-1:-1:-1;;;;;29366:17:0;;;-1:-1:-1;;;;;;29366:17:0;;;;;;29398:40;;29350:6;;;;;;;29398:40;;29331:16;29398:40;29321:124;29258:187;:::o;14:175:1:-;92:13;;-1:-1:-1;;;;;134:30:1;;124:41;;114:69;;179:1;176;169:12;114:69;14:175;;;:::o;194:456::-;280:6;288;296;349:2;337:9;328:7;324:23;320:32;317:52;;;365:1;362;355:12;317:52;391:16;;-1:-1:-1;;;;;436:31:1;;426:42;;416:70;;482:1;479;472:12;416:70;505:5;-1:-1:-1;529:48:1;573:2;558:18;;529:48;:::i;:::-;519:58;;596:48;640:2;629:9;625:18;596:48;:::i;:::-;586:58;;194:456;;;;;:::o;655:203::-;35349:300:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1131": {
									"entryPoint": null,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_584": {
									"entryPoint": 1910,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_1015": {
									"entryPoint": 1641,
									"id": 1015,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_903": {
									"entryPoint": 2018,
									"id": 903,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1077": {
									"entryPoint": 1685,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_vestingSchedule_1377": {
									"entryPoint": 1392,
									"id": 1377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@duration_1149": {
									"entryPoint": null,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@end_1162": {
									"entryPoint": 1233,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_998": {
									"entryPoint": null,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_1202": {
									"entryPoint": 1363,
									"id": 1202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_1224": {
									"entryPoint": 1143,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@release_1253": {
									"entryPoint": 1030,
									"id": 1253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@release_1288": {
									"entryPoint": 712,
									"id": 1288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@released_1171": {
									"entryPoint": null,
									"id": 1171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@released_1184": {
									"entryPoint": null,
									"id": 1184,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_1029": {
									"entryPoint": 864,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_207": {
									"entryPoint": 1554,
									"id": 207,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendValue_702": {
									"entryPoint": 1764,
									"id": 702,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@start_1140": {
									"entryPoint": 1187,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_1057": {
									"entryPoint": 1300,
									"id": 1057,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vestedAmount_1309": {
									"entryPoint": 677,
									"id": 1309,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vestedAmount_1337": {
									"entryPoint": 883,
									"id": 1337,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint64": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3119:1",
										"nodeType": "YulBlock",
										"src": "0:3119:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "62:123:1",
													"nodeType": "YulBlock",
													"src": "62:123:1",
													"statements": [
														{
															"nativeSrc": "72:29:1",
															"nodeType": "YulAssignment",
															"src": "72:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "94:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "94:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "81:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "81:12:1"
																},
																"nativeSrc": "81:20:1",
																"nodeType": "YulFunctionCall",
																"src": "81:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "72:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "72:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "163:16:1",
																"nodeType": "YulBlock",
																"src": "163:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "172:1:1",
																					"nodeType": "YulLiteral",
																					"src": "172:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "175:1:1",
																					"nodeType": "YulLiteral",
																					"src": "175:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "165:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "165:6:1"
																			},
																			"nativeSrc": "165:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "165:12:1"
																		},
																		"nativeSrc": "165:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "165:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "123:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "123:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "134:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "134:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "141:18:1",
																						"nodeType": "YulLiteral",
																						"src": "141:18:1",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "130:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "130:3:1"
																				},
																				"nativeSrc": "130:30:1",
																				"nodeType": "YulFunctionCall",
																				"src": "130:30:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "120:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "120:2:1"
																		},
																		"nativeSrc": "120:41:1",
																		"nodeType": "YulFunctionCall",
																		"src": "120:41:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nativeSrc": "113:49:1",
																"nodeType": "YulFunctionCall",
																"src": "113:49:1"
															},
															"nativeSrc": "110:69:1",
															"nodeType": "YulIf",
															"src": "110:69:1"
														}
													]
												},
												"name": "abi_decode_uint64",
												"nativeSrc": "14:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "41:6:1",
														"nodeType": "YulTypedName",
														"src": "41:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "52:5:1",
														"nodeType": "YulTypedName",
														"src": "52:5:1",
														"type": ""
													}
												],
												"src": "14:171:1"
											},
											{
												"body": {
													"nativeSrc": "259:115:1",
													"nodeType": "YulBlock",
													"src": "259:115:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "305:16:1",
																"nodeType": "YulBlock",
																"src": "305:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "314:1:1",
																					"nodeType": "YulLiteral",
																					"src": "314:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:1",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "307:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:1"
																			},
																			"nativeSrc": "307:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:1"
																		},
																		"nativeSrc": "307:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "280:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "280:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "289:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "289:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "276:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:1"
																		},
																		"nativeSrc": "276:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "276:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "301:2:1",
																		"nodeType": "YulLiteral",
																		"src": "301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "272:3:1"
																},
																"nativeSrc": "272:32:1",
																"nodeType": "YulFunctionCall",
																"src": "272:32:1"
															},
															"nativeSrc": "269:52:1",
															"nodeType": "YulIf",
															"src": "269:52:1"
														},
														{
															"nativeSrc": "330:38:1",
															"nodeType": "YulAssignment",
															"src": "330:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "358:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "358:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "340:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "340:17:1"
																},
																"nativeSrc": "340:28:1",
																"nodeType": "YulFunctionCall",
																"src": "340:28:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "330:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64",
												"nativeSrc": "190:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "225:9:1",
														"nodeType": "YulTypedName",
														"src": "225:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "236:7:1",
														"nodeType": "YulTypedName",
														"src": "236:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "248:6:1",
														"nodeType": "YulTypedName",
														"src": "248:6:1",
														"type": ""
													}
												],
												"src": "190:184:1"
											},
											{
												"body": {
													"nativeSrc": "480:76:1",
													"nodeType": "YulBlock",
													"src": "480:76:1",
													"statements": [
														{
															"nativeSrc": "490:26:1",
															"nodeType": "YulAssignment",
															"src": "490:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "502:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "502:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "513:2:1",
																		"nodeType": "YulLiteral",
																		"src": "513:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "498:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:1"
																},
																"nativeSrc": "498:18:1",
																"nodeType": "YulFunctionCall",
																"src": "498:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "490:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "532:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "532:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "543:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "543:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "525:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:1"
																},
																"nativeSrc": "525:25:1",
																"nodeType": "YulFunctionCall",
																"src": "525:25:1"
															},
															"nativeSrc": "525:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "525:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "379:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "449:9:1",
														"nodeType": "YulTypedName",
														"src": "449:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "460:6:1",
														"nodeType": "YulTypedName",
														"src": "460:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "471:4:1",
														"nodeType": "YulTypedName",
														"src": "471:4:1",
														"type": ""
													}
												],
												"src": "379:177:1"
											},
											{
												"body": {
													"nativeSrc": "610:124:1",
													"nodeType": "YulBlock",
													"src": "610:124:1",
													"statements": [
														{
															"nativeSrc": "620:29:1",
															"nodeType": "YulAssignment",
															"src": "620:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "642:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "629:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:1"
																},
																"nativeSrc": "629:20:1",
																"nodeType": "YulFunctionCall",
																"src": "629:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "620:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "712:16:1",
																"nodeType": "YulBlock",
																"src": "712:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "721:1:1",
																					"nodeType": "YulLiteral",
																					"src": "721:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:1",
																					"nodeType": "YulLiteral",
																					"src": "724:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "714:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "714:6:1"
																			},
																			"nativeSrc": "714:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "714:12:1"
																		},
																		"nativeSrc": "714:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "714:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "671:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "671:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "682:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "682:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "697:3:1",
																										"nodeType": "YulLiteral",
																										"src": "697:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "702:1:1",
																										"nodeType": "YulLiteral",
																										"src": "702:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "693:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "693:3:1"
																								},
																								"nativeSrc": "693:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "693:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "706:1:1",
																								"nodeType": "YulLiteral",
																								"src": "706:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "689:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "689:3:1"
																						},
																						"nativeSrc": "689:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "689:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "678:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "678:3:1"
																				},
																				"nativeSrc": "678:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "678:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "668:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "668:2:1"
																		},
																		"nativeSrc": "668:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "668:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "661:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "661:6:1"
																},
																"nativeSrc": "661:50:1",
																"nodeType": "YulFunctionCall",
																"src": "661:50:1"
															},
															"nativeSrc": "658:70:1",
															"nodeType": "YulIf",
															"src": "658:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "561:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "589:6:1",
														"nodeType": "YulTypedName",
														"src": "589:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "600:5:1",
														"nodeType": "YulTypedName",
														"src": "600:5:1",
														"type": ""
													}
												],
												"src": "561:173:1"
											},
											{
												"body": {
													"nativeSrc": "809:116:1",
													"nodeType": "YulBlock",
													"src": "809:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "855:16:1",
																"nodeType": "YulBlock",
																"src": "855:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "864:1:1",
																					"nodeType": "YulLiteral",
																					"src": "864:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "867:1:1",
																					"nodeType": "YulLiteral",
																					"src": "867:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "857:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "857:6:1"
																			},
																			"nativeSrc": "857:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "857:12:1"
																		},
																		"nativeSrc": "857:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "857:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "830:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "839:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "839:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "851:2:1",
																		"nodeType": "YulLiteral",
																		"src": "851:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "822:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:1"
																},
																"nativeSrc": "822:32:1",
																"nodeType": "YulFunctionCall",
																"src": "822:32:1"
															},
															"nativeSrc": "819:52:1",
															"nodeType": "YulIf",
															"src": "819:52:1"
														},
														{
															"nativeSrc": "880:39:1",
															"nodeType": "YulAssignment",
															"src": "880:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "909:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "890:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "890:18:1"
																},
																"nativeSrc": "890:29:1",
																"nodeType": "YulFunctionCall",
																"src": "890:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "880:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "880:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "739:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "775:9:1",
														"nodeType": "YulTypedName",
														"src": "775:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "786:7:1",
														"nodeType": "YulTypedName",
														"src": "786:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "798:6:1",
														"nodeType": "YulTypedName",
														"src": "798:6:1",
														"type": ""
													}
												],
												"src": "739:186:1"
											},
											{
												"body": {
													"nativeSrc": "1016:172:1",
													"nodeType": "YulBlock",
													"src": "1016:172:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1062:16:1",
																"nodeType": "YulBlock",
																"src": "1062:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1071:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1071:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1074:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1064:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1064:6:1"
																			},
																			"nativeSrc": "1064:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1064:12:1"
																		},
																		"nativeSrc": "1064:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1064:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1046:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1033:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1033:3:1"
																		},
																		"nativeSrc": "1033:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1033:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1058:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1029:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1029:3:1"
																},
																"nativeSrc": "1029:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1029:32:1"
															},
															"nativeSrc": "1026:52:1",
															"nodeType": "YulIf",
															"src": "1026:52:1"
														},
														{
															"nativeSrc": "1087:39:1",
															"nodeType": "YulAssignment",
															"src": "1087:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1116:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1116:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1097:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1097:18:1"
																},
																"nativeSrc": "1097:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1097:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																}
															]
														},
														{
															"nativeSrc": "1135:47:1",
															"nodeType": "YulAssignment",
															"src": "1135:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1167:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1167:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1178:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1178:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:1"
																		},
																		"nativeSrc": "1163:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "1145:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1145:17:1"
																},
																"nativeSrc": "1145:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1145:37:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1135:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64",
												"nativeSrc": "930:258:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "974:9:1",
														"nodeType": "YulTypedName",
														"src": "974:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "985:7:1",
														"nodeType": "YulTypedName",
														"src": "985:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "997:6:1",
														"nodeType": "YulTypedName",
														"src": "997:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1005:6:1",
														"nodeType": "YulTypedName",
														"src": "1005:6:1",
														"type": ""
													}
												],
												"src": "930:258:1"
											},
											{
												"body": {
													"nativeSrc": "1294:102:1",
													"nodeType": "YulBlock",
													"src": "1294:102:1",
													"statements": [
														{
															"nativeSrc": "1304:26:1",
															"nodeType": "YulAssignment",
															"src": "1304:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1316:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1316:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1327:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1312:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:1"
																},
																"nativeSrc": "1312:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1312:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1304:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1304:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1346:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1346:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1361:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1377:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1377:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1382:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1382:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1373:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1373:3:1"
																						},
																						"nativeSrc": "1373:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1373:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1386:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1386:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1369:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1369:3:1"
																				},
																				"nativeSrc": "1369:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1369:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1357:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:1"
																		},
																		"nativeSrc": "1357:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1357:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1339:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:1"
																},
																"nativeSrc": "1339:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1339:51:1"
															},
															"nativeSrc": "1339:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1339:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1193:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1263:9:1",
														"nodeType": "YulTypedName",
														"src": "1263:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1274:6:1",
														"nodeType": "YulTypedName",
														"src": "1274:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1285:4:1",
														"nodeType": "YulTypedName",
														"src": "1285:4:1",
														"type": ""
													}
												],
												"src": "1193:203:1"
											},
											{
												"body": {
													"nativeSrc": "1433:95:1",
													"nodeType": "YulBlock",
													"src": "1433:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1450:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1457:3:1",
																				"nodeType": "YulLiteral",
																				"src": "1457:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1462:10:1",
																				"nodeType": "YulLiteral",
																				"src": "1462:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1453:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1453:3:1"
																		},
																		"nativeSrc": "1453:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1453:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1443:6:1"
																},
																"nativeSrc": "1443:31:1",
																"nodeType": "YulFunctionCall",
																"src": "1443:31:1"
															},
															"nativeSrc": "1443:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "1443:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1490:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1490:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1493:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1493:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1483:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:1"
																},
																"nativeSrc": "1483:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1483:15:1"
															},
															"nativeSrc": "1483:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1483:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1514:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1514:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1517:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1517:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1507:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:1"
																},
																"nativeSrc": "1507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1507:15:1"
															},
															"nativeSrc": "1507:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1507:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1401:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1401:127:1"
											},
											{
												"body": {
													"nativeSrc": "1581:77:1",
													"nodeType": "YulBlock",
													"src": "1581:77:1",
													"statements": [
														{
															"nativeSrc": "1591:16:1",
															"nodeType": "YulAssignment",
															"src": "1591:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1602:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1605:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1605:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:1"
																},
																"nativeSrc": "1598:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1591:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1630:22:1",
																"nodeType": "YulBlock",
																"src": "1630:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1632:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1632:16:1"
																			},
																			"nativeSrc": "1632:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1632:18:1"
																		},
																		"nativeSrc": "1632:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1632:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1622:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1622:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1625:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1625:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1619:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1619:2:1"
																},
																"nativeSrc": "1619:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1619:10:1"
															},
															"nativeSrc": "1616:36:1",
															"nodeType": "YulIf",
															"src": "1616:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1533:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1564:1:1",
														"nodeType": "YulTypedName",
														"src": "1564:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1567:1:1",
														"nodeType": "YulTypedName",
														"src": "1567:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1573:3:1",
														"nodeType": "YulTypedName",
														"src": "1573:3:1",
														"type": ""
													}
												],
												"src": "1533:125:1"
											},
											{
												"body": {
													"nativeSrc": "1744:103:1",
													"nodeType": "YulBlock",
													"src": "1744:103:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1790:16:1",
																"nodeType": "YulBlock",
																"src": "1790:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1799:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1802:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1802:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1792:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nativeSrc": "1792:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1792:12:1"
																		},
																		"nativeSrc": "1792:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1765:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1765:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1774:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1774:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1761:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1761:3:1"
																		},
																		"nativeSrc": "1761:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1761:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1786:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1786:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:1"
																},
																"nativeSrc": "1757:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1757:32:1"
															},
															"nativeSrc": "1754:52:1",
															"nodeType": "YulIf",
															"src": "1754:52:1"
														},
														{
															"nativeSrc": "1815:26:1",
															"nodeType": "YulAssignment",
															"src": "1815:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1831:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1831:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1825:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1825:5:1"
																},
																"nativeSrc": "1825:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1825:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "1663:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1710:9:1",
														"nodeType": "YulTypedName",
														"src": "1710:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1721:7:1",
														"nodeType": "YulTypedName",
														"src": "1721:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1733:6:1",
														"nodeType": "YulTypedName",
														"src": "1733:6:1",
														"type": ""
													}
												],
												"src": "1663:184:1"
											},
											{
												"body": {
													"nativeSrc": "1901:79:1",
													"nodeType": "YulBlock",
													"src": "1901:79:1",
													"statements": [
														{
															"nativeSrc": "1911:17:1",
															"nodeType": "YulAssignment",
															"src": "1911:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1923:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1923:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1926:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1926:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1919:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1919:3:1"
																},
																"nativeSrc": "1919:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1919:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1911:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1911:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1952:22:1",
																"nodeType": "YulBlock",
																"src": "1952:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1954:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1954:16:1"
																			},
																			"nativeSrc": "1954:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1954:18:1"
																		},
																		"nativeSrc": "1954:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1954:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1943:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1943:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1949:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1949:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1940:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1940:2:1"
																},
																"nativeSrc": "1940:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1940:11:1"
															},
															"nativeSrc": "1937:37:1",
															"nodeType": "YulIf",
															"src": "1937:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1852:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1883:1:1",
														"nodeType": "YulTypedName",
														"src": "1883:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1886:1:1",
														"nodeType": "YulTypedName",
														"src": "1886:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1892:4:1",
														"nodeType": "YulTypedName",
														"src": "1892:4:1",
														"type": ""
													}
												],
												"src": "1852:128:1"
											},
											{
												"body": {
													"nativeSrc": "2037:116:1",
													"nodeType": "YulBlock",
													"src": "2037:116:1",
													"statements": [
														{
															"nativeSrc": "2047:20:1",
															"nodeType": "YulAssignment",
															"src": "2047:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2062:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2062:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2065:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2065:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2058:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2058:3:1"
																},
																"nativeSrc": "2058:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2058:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2047:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2047:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2125:22:1",
																"nodeType": "YulBlock",
																"src": "2125:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2127:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2127:16:1"
																			},
																			"nativeSrc": "2127:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2127:18:1"
																		},
																		"nativeSrc": "2127:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2127:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2096:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "2096:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2089:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2089:6:1"
																				},
																				"nativeSrc": "2089:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2089:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2103:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "2103:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2110:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "2110:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2119:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "2119:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2106:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2106:3:1"
																						},
																						"nativeSrc": "2106:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2106:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2100:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2100:2:1"
																				},
																				"nativeSrc": "2100:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2100:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2086:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2086:2:1"
																		},
																		"nativeSrc": "2086:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2086:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2079:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2079:6:1"
																},
																"nativeSrc": "2079:45:1",
																"nodeType": "YulFunctionCall",
																"src": "2079:45:1"
															},
															"nativeSrc": "2076:71:1",
															"nodeType": "YulIf",
															"src": "2076:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1985:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2016:1:1",
														"nodeType": "YulTypedName",
														"src": "2016:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2019:1:1",
														"nodeType": "YulTypedName",
														"src": "2019:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2025:7:1",
														"nodeType": "YulTypedName",
														"src": "2025:7:1",
														"type": ""
													}
												],
												"src": "1985:168:1"
											},
											{
												"body": {
													"nativeSrc": "2204:171:1",
													"nodeType": "YulBlock",
													"src": "2204:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2235:111:1",
																"nodeType": "YulBlock",
																"src": "2235:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2256:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2256:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2263:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2263:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2268:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2268:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2259:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2259:3:1"
																					},
																					"nativeSrc": "2259:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2259:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2249:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2249:6:1"
																			},
																			"nativeSrc": "2249:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2249:31:1"
																		},
																		"nativeSrc": "2249:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2249:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2300:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2300:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2303:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2303:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2293:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:1"
																			},
																			"nativeSrc": "2293:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2293:15:1"
																		},
																		"nativeSrc": "2293:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2293:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2328:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2331:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2331:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2321:6:1"
																			},
																			"nativeSrc": "2321:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2321:15:1"
																		},
																		"nativeSrc": "2321:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2321:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2224:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2224:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:1"
																},
																"nativeSrc": "2217:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2217:9:1"
															},
															"nativeSrc": "2214:132:1",
															"nodeType": "YulIf",
															"src": "2214:132:1"
														},
														{
															"nativeSrc": "2355:14:1",
															"nodeType": "YulAssignment",
															"src": "2355:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2364:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2364:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2367:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2367:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2360:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2360:3:1"
																},
																"nativeSrc": "2360:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2360:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2355:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2355:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2158:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2189:1:1",
														"nodeType": "YulTypedName",
														"src": "2189:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2192:1:1",
														"nodeType": "YulTypedName",
														"src": "2192:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2198:1:1",
														"nodeType": "YulTypedName",
														"src": "2198:1:1",
														"type": ""
													}
												],
												"src": "2158:217:1"
											},
											{
												"body": {
													"nativeSrc": "2509:145:1",
													"nodeType": "YulBlock",
													"src": "2509:145:1",
													"statements": [
														{
															"nativeSrc": "2519:26:1",
															"nodeType": "YulAssignment",
															"src": "2519:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2531:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2531:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2542:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2542:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2527:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nativeSrc": "2527:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2527:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2519:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2519:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2561:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2561:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2576:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2576:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2592:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2592:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2597:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2597:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2588:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2588:3:1"
																						},
																						"nativeSrc": "2588:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2588:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2601:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2601:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2584:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2584:3:1"
																				},
																				"nativeSrc": "2584:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:1"
																		},
																		"nativeSrc": "2572:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2554:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:1"
																},
																"nativeSrc": "2554:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2554:51:1"
															},
															"nativeSrc": "2554:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2554:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2625:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2625:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2636:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2636:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2621:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2621:3:1"
																		},
																		"nativeSrc": "2621:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2621:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2641:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2641:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2614:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:1"
																},
																"nativeSrc": "2614:34:1",
																"nodeType": "YulFunctionCall",
																"src": "2614:34:1"
															},
															"nativeSrc": "2614:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "2614:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2380:274:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2470:9:1",
														"nodeType": "YulTypedName",
														"src": "2470:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2481:6:1",
														"nodeType": "YulTypedName",
														"src": "2481:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2489:6:1",
														"nodeType": "YulTypedName",
														"src": "2489:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2500:4:1",
														"nodeType": "YulTypedName",
														"src": "2500:4:1",
														"type": ""
													}
												],
												"src": "2380:274:1"
											},
											{
												"body": {
													"nativeSrc": "2788:119:1",
													"nodeType": "YulBlock",
													"src": "2788:119:1",
													"statements": [
														{
															"nativeSrc": "2798:26:1",
															"nodeType": "YulAssignment",
															"src": "2798:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2810:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2810:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2821:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2821:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2806:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:1"
																},
																"nativeSrc": "2806:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2806:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2798:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2798:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2840:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2840:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2851:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2851:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2833:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:1"
																},
																"nativeSrc": "2833:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2833:25:1"
															},
															"nativeSrc": "2833:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "2833:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2878:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2889:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2889:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2874:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:1"
																		},
																		"nativeSrc": "2874:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2874:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2894:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2894:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2867:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:1"
																},
																"nativeSrc": "2867:34:1",
																"nodeType": "YulFunctionCall",
																"src": "2867:34:1"
															},
															"nativeSrc": "2867:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "2867:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2659:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2749:9:1",
														"nodeType": "YulTypedName",
														"src": "2749:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2760:6:1",
														"nodeType": "YulTypedName",
														"src": "2760:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2768:6:1",
														"nodeType": "YulTypedName",
														"src": "2768:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2779:4:1",
														"nodeType": "YulTypedName",
														"src": "2779:4:1",
														"type": ""
													}
												],
												"src": "2659:248:1"
											},
											{
												"body": {
													"nativeSrc": "3103:14:1",
													"nodeType": "YulBlock",
													"src": "3103:14:1",
													"statements": [
														{
															"nativeSrc": "3105:10:1",
															"nodeType": "YulAssignment",
															"src": "3105:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3112:3:1",
																"nodeType": "YulIdentifier",
																"src": "3112:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3105:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3105:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2912:205:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3087:3:1",
														"nodeType": "YulTypedName",
														"src": "3087:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3095:3:1",
														"nodeType": "YulTypedName",
														"src": "3095:3:1",
														"type": ""
													}
												],
												"src": "2912:205:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1102": [
									{
										"length": 32,
										"start": 1198
									}
								],
								"1104": [
									{
										"length": 32,
										"start": 295
									},
									{
										"length": 32,
										"start": 1236
									},
									{
										"length": 32,
										"start": 1458
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100dc575f3560e01c8063961325211161007c578063be9a655511610057578063be9a65551461024a578063efbe1c1c1461025e578063f2fde38b14610272578063fbccedae14610291575f80fd5b806396132521146101e35780639852595c146101f7578063a3f8eace1461022b575f80fd5b8063715018a6116100b7578063715018a614610176578063810ec23b1461018a57806386d1a69f146101a95780638da5cb5b146101bd575f80fd5b80630a17b06b146100e75780630fb5a6b4146101195780631916558714610155575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b50610106610101366004610826565b6102a5565b6040519081526020015b60405180910390f35b348015610124575f80fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610106565b348015610160575f80fd5b5061017461016f366004610855565b6102c8565b005b348015610181575f80fd5b50610174610360565b348015610195575f80fd5b506101066101a436600461086e565b610373565b3480156101b4575f80fd5b50610174610406565b3480156101c8575f80fd5b505f546040516001600160a01b039091168152602001610110565b3480156101ee575f80fd5b50600154610106565b348015610202575f80fd5b50610106610211366004610855565b6001600160a01b03165f9081526002602052604090205490565b348015610236575f80fd5b50610106610245366004610855565b610477565b348015610255575f80fd5b506101066104a3565b348015610269575f80fd5b506101066104d1565b34801561027d575f80fd5b5061017461028c366004610855565b610514565b34801561029c575f80fd5b50610106610553565b5f6102c26102b260015490565b6102bc90476108b3565b83610570565b92915050565b5f6102d282610477565b6001600160a01b0383165f908152600260205260408120805492935083929091906102fe9084906108b3565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a261035c826103565f546001600160a01b031690565b83610612565b5050565b610368610669565b6103715f610695565b565b6001600160a01b0382165f908152600260205260408120546103ff906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103d1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f591906108c6565b6102bc91906108b3565b9392505050565b5f61040f610553565b90508060015f82825461042291906108b3565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161047461046e5f546001600160a01b031690565b826106e4565b50565b6001600160a01b0381165f908152600260205260408120546104998342610373565b6102c291906108dd565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b5f7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105056104a3565b61050f91906108b3565b905090565b61051c610669565b6001600160a01b03811661054a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61047481610695565b5f61055d60015490565b610566426102a5565b61050f91906108dd565b5f6105796104a3565b8267ffffffffffffffff16101561059157505f6102c2565b6105996104d1565b8267ffffffffffffffff16106105b05750816102c2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105e36104a3565b6105f79067ffffffffffffffff85166108dd565b61060190856108f0565b61060b9190610907565b90506102c2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610664908490610776565b505050565b5f546001600160a01b031633146103715760405163118cdaa760e01b8152336004820152602401610541565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8047101561070e5760405163cf47918160e01b815247600482015260248101829052604401610541565b5f80836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610758576040519150601f19603f3d011682016040523d82523d5f602084013e61075d565b606091505b50915091508161077057610770816107e2565b50505050565b5f8060205f8451602086015f885af180610795576040513d5f823e3d81fd5b50505f513d915081156107ac5780600114156107b9565b6001600160a01b0384163b155b1561077057604051635274afe760e01b81526001600160a01b0385166004820152602401610541565b8051156107f157805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b803567ffffffffffffffff81168114610821575f80fd5b919050565b5f60208284031215610836575f80fd5b6103ff8261080a565b80356001600160a01b0381168114610821575f80fd5b5f60208284031215610865575f80fd5b6103ff8261083f565b5f806040838503121561087f575f80fd5b6108888361083f565b91506108966020840161080a565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102c2576102c261089f565b5f602082840312156108d6575f80fd5b5051919050565b818103818111156102c2576102c261089f565b80820281158282048414176102c2576102c261089f565b5f8261092157634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220745ba72e7c4e74d2fae77a5e90dc1f6e40c70b475ee61e114c7b809c8e25bfbc64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xE3 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x360 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x553 JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x2B2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BC SWAP1 SELFBALANCE PUSH2 0x8B3 JUMP JUMPDEST DUP4 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2 DUP3 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x35C DUP3 PUSH2 0x356 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x612 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x371 PUSH0 PUSH2 0x695 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x40F PUSH2 0x553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x474 PUSH2 0x46E PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x499 DUP4 TIMESTAMP PUSH2 0x373 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x505 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x695 JUMP JUMPDEST PUSH0 PUSH2 0x55D PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x566 TIMESTAMP PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH2 0x579 PUSH2 0x4A3 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x591 JUMPI POP PUSH0 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x599 PUSH2 0x4D1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x5B0 JUMPI POP DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5E3 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5F7 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x664 SWAP1 DUP5 SWAP1 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7AC JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x7F1 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x80A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP4 PUSH2 0x83F JUMP JUMPDEST SWAP2 POP PUSH2 0x896 PUSH1 0x20 DUP5 ADD PUSH2 0x80A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x921 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x5BA72E7C4E74D2FAE77A5E90DC1F6E40C70B475EE6 0x1E GT 0x4C PUSH28 0x809C8E25BFBC64736F6C634300081800330000000000000000000000 ",
							"sourceMap": "35349:300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34228:165;;;;;;;;;;-1:-1:-1;34228:165:0;;;;;:::i;:::-;;:::i;:::-;;;525:25:1;;;513:2;498:18;34228:165:0;;;;;;;;32275:91;;;;;;;;;;-1:-1:-1;32350:9:0;32343:16;;32275:91;;33842:246;;;;;;;;;;-1:-1:-1;33842:246:0;;;;;:::i;:::-;;:::i;:::-;;28639:101;;;;;;;;;;;;;:::i;34534:202::-;;;;;;;;;;-1:-1:-1;34534:202:0;;;;;:::i;:::-;;:::i;33520:198::-;;;;;;;;;;;;;:::i;27984:85::-;;;;;;;;;;-1:-1:-1;28030:7:0;28056:6;27984:85;;-1:-1:-1;;;;;28056:6:0;;;1339:51:1;;1327:2;1312:18;27984:85:0;1193:203:1;32592:91:0;;;;;;;;;;-1:-1:-1;32667:9:0;;32592:91;;32750:116;;;;;;;;;;-1:-1:-1;32750:116:0;;;;;:::i;:::-;-1:-1:-1;;;;;32838:21:0;32812:7;32838:21;;;:14;:21;;;;;;;32750:116;33223:159;;;;;;;;;;-1:-1:-1;33223:159:0;;;;;:::i;:::-;;:::i;32123:85::-;;;;;;;;;;;;;:::i;32430:97::-;;;;;;;;;;;;;:::i;28889:215::-;;;;;;;;;;-1:-1:-1;28889:215:0;;;;;:::i;:::-;;:::i;32941:134::-;;;;;;;;;;;;;:::i;34228:165::-;34297:7;34323:63;34364:10;32667:9;;;32592:91;34364:10;34340:34;;:21;:34;:::i;:::-;34376:9;34323:16;:63::i;:::-;34316:70;34228:165;-1:-1:-1;;34228:165:0:o;33842:246::-;33899:14;33916:17;33927:5;33916:10;:17::i;:::-;-1:-1:-1;;;;;33943:21:0;;;;;;:14;:21;;;;;:31;;33899:34;;-1:-1:-1;33899:34:0;;33943:21;;;:31;;33899:34;;33943:31;:::i;:::-;;;;-1:-1:-1;;33989:28:0;;525:25:1;;;-1:-1:-1;;;;;33989:28:0;;;;;513:2:1;498:18;33989:28:0;;;;;;;34027:54;34057:5;34065:7;28030;28056:6;-1:-1:-1;;;;;28056:6:0;;27984:85;34065:7;34074:6;34027:22;:54::i;:::-;33889:199;33842:246;:::o;28639:101::-;27877:13;:11;:13::i;:::-;28703:30:::1;28730:1;28703:18;:30::i;:::-;28639:101::o:0;34534:202::-;-1:-1:-1;;;;;32838:21:0;;34618:7;32838:21;;;:14;:21;;;;;;34644:85;;34661:38;;-1:-1:-1;;;34661:38:0;;34693:4;34661:38;;;1339:51:1;-1:-1:-1;;;;;34661:23:0;;;;;1312:18:1;;34661:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;34644:85::-;34637:92;34534:202;-1:-1:-1;;;34534:202:0:o;33520:198::-;33564:14;33581:12;:10;:12::i;:::-;33564:29;;33616:6;33603:9;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;33637:21:0;;525:25:1;;;33637:21:0;;513:2:1;498:18;33637:21:0;;;;;;;33668:43;33694:7;28030;28056:6;-1:-1:-1;;;;;28056:6:0;;27984:85;33694:7;33704:6;33668:17;:43::i;:::-;33554:164;33520:198::o;33223:159::-;-1:-1:-1;;;;;32838:21:0;;33287:7;32838:21;;;:14;:21;;;;;;33313:44;33326:5;33340:15;33313:12;:44::i;:::-;:62;;;;:::i;32123:85::-;32188:13;32195:6;32188:13;;32123:85::o;32430:97::-;32474:7;32350:9;32343:16;;32500:7;:5;:7::i;:::-;:20;;;;:::i;:::-;32493:27;;32430:97;:::o;28889:215::-;27877:13;:11;:13::i;:::-;-1:-1:-1;;;;;28973:22:0;::::1;28969:91;;29018:31;::::0;-1:-1:-1;;;29018:31:0;;29046:1:::1;29018:31;::::0;::::1;1339:51:1::0;1312:18;;29018:31:0::1;;;;;;;;28969:91;29069:28;29088:8;29069:18;:28::i;32941:134::-:0;32992:7;33058:10;32667:9;;;32592:91;33058:10;33018:37;33038:15;33018:12;:37::i;:::-;:50;;;;:::i;34931:352::-;35031:7;35066;:5;:7::i;:::-;35054:9;:19;;;35050:227;;;-1:-1:-1;35096:1:0;35089:8;;35050:227;35131:5;:3;:5::i;:::-;35118:9;:18;;;35114:163;;-1:-1:-1;35159:15:0;35152:22;;35114:163;32350:9;32343:16;;35244:7;:5;:7::i;:::-;35232:19;;;;;;:::i;:::-;35213:39;;:15;:39;:::i;:::-;35212:54;;;;:::i;:::-;35205:61;;;;9630:160;9739:43;;;-1:-1:-1;;;;;2572:32:1;;9739:43:0;;;2554:51:1;2621:18;;;;2614:34;;;9739:43:0;;;;;;;;;;2527:18:1;;;;9739:43:0;;;;;;;;-1:-1:-1;;;;;9739:43:0;-1:-1:-1;;;9739:43:0;;;9712:71;;9732:5;;9712:19;:71::i;:::-;9630:160;;;:::o;28142:162::-;28030:7;28056:6;-1:-1:-1;;;;;28056:6:0;26141:10;28201:23;28197:101;;28247:40;;-1:-1:-1;;;28247:40:0;;26141:10;28247:40;;;1339:51:1;1312:18;;28247:40:0;1193:203:1;29258:187:0;29331:16;29350:6;;-1:-1:-1;;;;;29366:17:0;;;-1:-1:-1;;;;;;29366:17:0;;;;;;29398:40;;29350:6;;;;;;;29398:40;;29331:16;29398:40;29321:124;29258:187;:::o;20678:365::-;20787:6;20763:21;:30;20759:125;;;20816:57;;-1:-1:-1;;;20816:57:0;;20843:21;20816:57;;;2833:25:1;2874:18;;;2867:34;;;2806:18;;20816:57:0;2659:248:1;20759:125:0;20895:12;20909:23;20936:9;-1:-1:-1;;;;;20936:14:0;20958:6;20936:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20894:75;;;;20984:7;20979:58;;21007:19;21015:10;21007:7;:19::i;:::-;20749:294;;20678:365;;:::o;16781:720::-;16861:18;16889:19;17027:4;17024:1;17017:4;17011:11;17004:4;16998;16994:15;16991:1;16984:5;16977;16972:60;17084:7;17074:176;;17128:4;17122:11;17173:16;17170:1;17165:3;17150:40;17219:16;17214:3;17207:29;17074:176;-1:-1:-1;;17327:1:0;17321:8;17277:16;;-1:-1:-1;17353:15:0;;:68;;17405:11;17420:1;17405:16;;17353:68;;;-1:-1:-1;;;;;17371:26:0;;;:31;17353:68;17349:146;;;17444:40;;-1:-1:-1;;;17444:40:0;;-1:-1:-1;;;;;1357:32:1;;17444:40:0;;;1339:51:1;1312:18;;17444:40:0;1193:203:1;24947:434:0;25078:17;;:21;25074:301;;25282:10;25276:17;25269:4;25257:10;25253:21;25246:48;25074:301;25345:19;;-1:-1:-1;;;25345:19:0;;;;;;;;;;;14:171:1;81:20;;141:18;130:30;;120:41;;110:69;;175:1;172;165:12;110:69;14:171;;;:::o;190:184::-;248:6;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;340:28;358:9;340:28;:::i;561:173::-;629:20;;-1:-1:-1;;;;;678:31:1;;668:42;;658:70;;724:1;721;714:12;739:186;798:6;851:2;839:9;830:7;826:23;822:32;819:52;;;867:1;864;857:12;819:52;890:29;909:9;890:29;:::i;930:258::-;997:6;1005;1058:2;1046:9;1037:7;1033:23;1029:32;1026:52;;;1074:1;1071;1064:12;1026:52;1097:29;1116:9;1097:29;:::i;:::-;1087:39;;1145:37;1178:2;1167:9;1163:18;1145:37;:::i;:::-;1135:47;;930:258;;;;;:::o;1401:127::-;1462:10;1457:3;1453:20;1450:1;1443:31;1493:4;1490:1;1483:15;1517:4;1514:1;1507:15;1533:125;1598:9;;;1619:10;;;1616:36;;;1632:18;;:::i;1663:184::-;1733:6;1786:2;1774:9;1765:7;1761:23;1757:32;1754:52;;;1802:1;1799;1792:12;1754:52;-1:-1:-1;1825:16:1;;1663:184;-1:-1:-1;1663:184:1:o;1852:128::-;1919:9;;;1940:11;;;1937:37;;;1954:18;;:::i;1985:168::-;2058:9;;;2089;;2106:15;;;2100:22;;2086:37;2076:71;;2127:18;;:::i;2158:217::-;2198:1;2224;2214:132;;2268:10;2263:3;2259:20;2256:1;2249:31;2303:4;2300:1;2293:15;2331:4;2328:1;2321:15;2214:132;-1:-1:-1;2360:9:1;;2158:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "479200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"duration()": "infinite",
								"end()": "infinite",
								"owner()": "2388",
								"releasable()": "infinite",
								"releasable(address)": "infinite",
								"release()": "infinite",
								"release(address)": "infinite",
								"released()": "2303",
								"released(address)": "2568",
								"renounceOwnership()": "infinite",
								"start()": "infinite",
								"transferOwnership(address)": "28395",
								"vestedAmount(address,uint64)": "infinite",
								"vestedAmount(uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 35461,
									"end": 35647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 35461,
									"end": 35647,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35592,
									"end": 35610,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35612,
									"end": 35626,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35628,
									"end": 35643,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35592,
									"end": 35610,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27619,
									"end": 27645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27619,
									"end": 27645,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27615,
									"end": 27710,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 27615,
									"end": 27710,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27696,
									"end": 27697,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 801,
									"end": 852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 774,
									"end": 792,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27615,
									"end": 27710,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 27615,
									"end": 27710,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27719,
									"end": 27751,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 27738,
									"end": 27750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27719,
									"end": 27737,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 27719,
									"end": 27751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27719,
									"end": 27751,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 27719,
									"end": 27751,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 31875,
									"end": 31898,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31875,
									"end": 31898,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31875,
									"end": 31898,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31875,
									"end": 31898,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 31875,
									"end": 31898,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31908,
									"end": 31935,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31908,
									"end": 31935,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 31908,
									"end": 31935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29258,
									"end": 29445,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 29258,
									"end": 29445,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29331,
									"end": 29347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29331,
									"end": 29347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 29321,
									"end": 29445,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29258,
									"end": 29445,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29258,
									"end": 29445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 189,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 189,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 105,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 105,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 134,
									"end": 164,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 134,
									"end": 164,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 124,
									"end": 165,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 124,
									"end": 165,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 114,
									"end": 183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 179,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 177,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 169,
									"end": 181,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 114,
									"end": 183,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 194,
									"end": 650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 280,
									"end": 286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 294,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 296,
									"end": 302,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 351,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 337,
									"end": 346,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 328,
									"end": 335,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 324,
									"end": 347,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 320,
									"end": 352,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 317,
									"end": 369,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 317,
									"end": 369,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 365,
									"end": 366,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 363,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 367,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 317,
									"end": 369,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 391,
									"end": 407,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 391,
									"end": 407,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 436,
									"end": 467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 436,
									"end": 467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 426,
									"end": 468,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 426,
									"end": 468,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 416,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 480,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 472,
									"end": 484,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 416,
									"end": 486,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 505,
									"end": 510,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 558,
									"end": 576,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 558,
									"end": 576,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 529,
									"end": 577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 529,
									"end": 577,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 529,
									"end": 577,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 519,
									"end": 577,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 577,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 629,
									"end": 638,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 625,
									"end": 643,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 596,
									"end": 644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 596,
									"end": 644,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 596,
									"end": 644,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 586,
									"end": 644,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 644,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 655,
									"end": 858,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 655,
									"end": 858,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1104"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1102"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35349,
									"end": 35649,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220745ba72e7c4e74d2fae77a5e90dc1f6e40c70b475ee61e114c7b809c8e25bfbc64736f6c63430008180033",
									".code": [
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "96132521"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "EFBE1C1C"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "FBCCEDAE"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "96132521"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "9852595C"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "A3F8EACE"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "810EC23B"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "86D1A69F"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "A17B06B"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "FB5A6B4"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "19165587"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35349,
											"end": 35649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34228,
											"end": 34393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 34228,
											"end": 34393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32350,
											"end": 32359,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1104"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 33842,
											"end": 34088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 33842,
											"end": 34088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28639,
											"end": 28740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34534,
											"end": 34736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34534,
											"end": 34736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33520,
											"end": 33718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28030,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 32750,
											"end": 32866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32852,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 33223,
											"end": 33382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33223,
											"end": 33382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32123,
											"end": 32208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32430,
											"end": 32527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28889,
											"end": 29104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28889,
											"end": 29104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 32941,
											"end": 33075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34297,
											"end": 34304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34323,
											"end": 34386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 34364,
											"end": 34374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34364,
											"end": 34374,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34364,
											"end": 34374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34340,
											"end": 34361,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 34340,
											"end": 34374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34376,
											"end": 34385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34323,
											"end": 34339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 34323,
											"end": 34386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34323,
											"end": 34386,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 34323,
											"end": 34386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34386,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34228,
											"end": 34393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33916,
											"end": 33933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 33927,
											"end": 33932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33916,
											"end": 33933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33933,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 33916,
											"end": 33933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33957,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33943,
											"end": 33974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "PUSH",
											"source": 0,
											"value": "C0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 34027,
											"end": 34081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 34057,
											"end": 34062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34065,
											"end": 34072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28030,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34065,
											"end": 34072,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 34065,
											"end": 34072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34074,
											"end": 34080,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34027,
											"end": 34049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 34027,
											"end": 34081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34027,
											"end": 34081,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 34027,
											"end": 34081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33889,
											"end": 34088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27877,
											"end": 27888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 27877,
											"end": 27890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28703,
											"end": 28733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28730,
											"end": 28731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28703,
											"end": 28721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28703,
											"end": 28733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28703,
											"end": 28733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28703,
											"end": 28733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34618,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32852,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34644,
											"end": 34729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 34644,
											"end": 34729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34693,
											"end": 34697,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 34661,
											"end": 34699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34661,
											"end": 34717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 34661,
											"end": 34717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34644,
											"end": 34729,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 34644,
											"end": 34729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34729,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34534,
											"end": 34736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33581,
											"end": 33593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 33581,
											"end": 33591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 33581,
											"end": 33593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33581,
											"end": 33593,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 33581,
											"end": 33593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33616,
											"end": 33622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33603,
											"end": 33612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33603,
											"end": 33622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "PUSH",
											"source": 0,
											"value": "DA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B"
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 33668,
											"end": 33711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 33694,
											"end": 33701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28030,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33701,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 33694,
											"end": 33701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33704,
											"end": 33710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33668,
											"end": 33685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33668,
											"end": 33711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33668,
											"end": 33711,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 33668,
											"end": 33711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33554,
											"end": 33718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33287,
											"end": 33294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32852,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33326,
											"end": 33331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33340,
											"end": 33355,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 33313,
											"end": 33357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33357,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33313,
											"end": 33357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 33313,
											"end": 33375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33313,
											"end": 33375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32188,
											"end": 32201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32195,
											"end": 32201,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1102"
										},
										{
											"begin": 32188,
											"end": 32201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32188,
											"end": 32201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32474,
											"end": 32481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32350,
											"end": 32359,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1104"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32500,
											"end": 32505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32500,
											"end": 32507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32507,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32500,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32500,
											"end": 32520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27877,
											"end": 27888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 27877,
											"end": 27890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28973,
											"end": 28995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28973,
											"end": 28995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28969,
											"end": 29060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28969,
											"end": 29060,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29018,
											"end": 29049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29018,
											"end": 29049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29046,
											"end": 29047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29018,
											"end": 29049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28969,
											"end": 29060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28969,
											"end": 29060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29069,
											"end": 29097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29088,
											"end": 29096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29069,
											"end": 29087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29069,
											"end": 29097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33058,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33058,
											"end": 33068,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 33058,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 33038,
											"end": 33053,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 33018,
											"end": 33055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33055,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 33018,
											"end": 33055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 33018,
											"end": 33068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33018,
											"end": 33068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34931,
											"end": 35283,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 34931,
											"end": 35283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35031,
											"end": 35038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35066,
											"end": 35073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 35066,
											"end": 35071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 35066,
											"end": 35073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35066,
											"end": 35073,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 35066,
											"end": 35073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35054,
											"end": 35073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35073,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35096,
											"end": 35097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35089,
											"end": 35097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35089,
											"end": 35097,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35131,
											"end": 35136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 35131,
											"end": 35134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35131,
											"end": 35136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35131,
											"end": 35136,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 35131,
											"end": 35136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35118,
											"end": 35127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35118,
											"end": 35136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35118,
											"end": 35136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35118,
											"end": 35136,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 35114,
											"end": 35277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35159,
											"end": 35174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35152,
											"end": 35174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35152,
											"end": 35174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35277,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 35114,
											"end": 35277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32359,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1104"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 35244,
											"end": 35249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 35244,
											"end": 35251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35251,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 35244,
											"end": 35251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 35232,
											"end": 35251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35213,
											"end": 35228,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 35213,
											"end": 35252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 35212,
											"end": 35266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35205,
											"end": 35266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35205,
											"end": 35266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35205,
											"end": 35266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35205,
											"end": 35266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2604,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 9712,
											"end": 9783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9732,
											"end": 9737,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9732,
											"end": 9737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 9712,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9783,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 9712,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28142,
											"end": 28304,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28142,
											"end": 28304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26141,
											"end": 26151,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28197,
											"end": 28298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26141,
											"end": 26151,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29258,
											"end": 29445,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29258,
											"end": 29445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29331,
											"end": 29347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29331,
											"end": 29347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29321,
											"end": 29445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29258,
											"end": 29445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29258,
											"end": 29445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20678,
											"end": 21043,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20678,
											"end": 21043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20787,
											"end": 20793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20763,
											"end": 20784,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20763,
											"end": 20793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF479181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20843,
											"end": 20864,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2659,
											"end": 2907,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20895,
											"end": 20907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20909,
											"end": 20932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20936,
											"end": 20950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20958,
											"end": 20964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20984,
											"end": 20991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20979,
											"end": 21037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20979,
											"end": 21037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21015,
											"end": 21025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 21007,
											"end": 21026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21026,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21007,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20749,
											"end": 21043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20749,
											"end": 21043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20678,
											"end": 21043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20678,
											"end": 21043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20678,
											"end": 21043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 17501,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 16781,
											"end": 17501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16889,
											"end": 16908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17024,
											"end": 17025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17017,
											"end": 17021,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17011,
											"end": 17022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 17008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16998,
											"end": 17002,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 17009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16991,
											"end": 16992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 16989,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16977,
											"end": 16982,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16972,
											"end": 17032,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17084,
											"end": 17091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 17074,
											"end": 17250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17122,
											"end": 17133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17173,
											"end": 17189,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17170,
											"end": 17171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17165,
											"end": 17168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17150,
											"end": 17190,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17219,
											"end": 17235,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17250,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 17074,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17327,
											"end": 17328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17321,
											"end": 17329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17277,
											"end": 17293,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17277,
											"end": 17293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17353,
											"end": 17368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17405,
											"end": 17416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17420,
											"end": 17421,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17405,
											"end": 17421,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17405,
											"end": 17421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17371,
											"end": 17397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17397,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17349,
											"end": 17495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17349,
											"end": 17495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 17349,
											"end": 17495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24947,
											"end": 25381,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 24947,
											"end": 25381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25078,
											"end": 25095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25078,
											"end": 25095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25078,
											"end": 25099,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25074,
											"end": 25375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25074,
											"end": 25375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25282,
											"end": 25292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25276,
											"end": 25293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25257,
											"end": 25267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25253,
											"end": 25274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25294,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25074,
											"end": 25375,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25074,
											"end": 25375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 185,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14,
											"end": 185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 81,
											"end": 101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 81,
											"end": 101,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 130,
											"end": 160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 130,
											"end": 160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 120,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 120,
											"end": 161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 110,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 177,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 110,
											"end": 179,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 190,
											"end": 374,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 190,
											"end": 374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 248,
											"end": 254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 280,
											"end": 287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 276,
											"end": 299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 272,
											"end": 304,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 269,
											"end": 321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 269,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 269,
											"end": 321,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 358,
											"end": 367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 340,
											"end": 368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 561,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 678,
											"end": 709,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 668,
											"end": 710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 710,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 658,
											"end": 728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 714,
											"end": 726,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 739,
											"end": 925,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 830,
											"end": 837,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 826,
											"end": 849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 822,
											"end": 854,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 819,
											"end": 871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 819,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 819,
											"end": 871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 867,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 819,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 819,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 890,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 909,
											"end": 918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 890,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1076,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1097,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1176,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1145,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1528,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1401,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1453,
											"end": 1473,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1497,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1483,
											"end": 1498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1514,
											"end": 1515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 1658,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1533,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1632,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1772,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1789,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1663,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1980,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1852,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1954,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1985,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2122,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2127,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2158,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2259,
											"end": 2279,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2307,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2300,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SpageroTokenVesting_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"duration()": "0fb5a6b4",
							"end()": "efbe1c1c",
							"owner()": "8da5cb5b",
							"releasable()": "fbccedae",
							"releasable(address)": "a3f8eace",
							"release()": "86d1a69f",
							"release(address)": "19165587",
							"released()": "96132521",
							"released(address)": "9852595c",
							"renounceOwnership()": "715018a6",
							"start()": "be9a6555",
							"transferOwnership(address)": "f2fde38b",
							"vestedAmount(address,uint64)": "810ec23b",
							"vestedAmount(uint64)": "0a17b06b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiaryAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an {IERC20} contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"SpageroTokenVesting\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 939,
								"contract": "SpageroTokenVesting_flattened.sol:SpageroTokenVesting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1096,
								"contract": "SpageroTokenVesting_flattened.sol:SpageroTokenVesting",
								"label": "_released",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1100,
								"contract": "SpageroTokenVesting_flattened.sol:SpageroTokenVesting",
								"label": "_erc20Released",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VestingWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "startTimestamp",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "durationSeconds",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EtherReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "end",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "A vesting wallet is an ownable contract that can receive native currency and ERC-20 tokens, and release these assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule. Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable. By setting the duration to 0, one can configure this contract to behave like an asset timelock that holds tokens for a beneficiary until a specified time. NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens. Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the near future. NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended. NOTE: Chains with support for native ERC20s may allow the vesting wallet to withdraw the underlying asset as both an ERC20 and as native currency. For example, if chain C supports token A and the wallet gets deposited 100 A, then at 50% of the vesting period, the beneficiary can withdraw 50 A as ERC20 and 25 A as native currency (totaling 75 A). Consider disabling one of the withdrawal methods.",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the beneficiary (owner), the start timestamp and the vesting duration (in seconds) of the vesting wallet."
							},
							"duration()": {
								"details": "Getter for the vesting duration."
							},
							"end()": {
								"details": "Getter for the end timestamp."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"releasable()": {
								"details": "Getter for the amount of releasable eth."
							},
							"releasable(address)": {
								"details": "Getter for the amount of releasable `token` tokens. `token` should be the address of an {IERC20} contract."
							},
							"release()": {
								"details": "Release the native token (ether) that have already vested. Emits a {EtherReleased} event."
							},
							"release(address)": {
								"details": "Release the tokens that have already vested. Emits a {ERC20Released} event."
							},
							"released()": {
								"details": "Amount of eth already released"
							},
							"released(address)": {
								"details": "Amount of token already released"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"start()": {
								"details": "Getter for the start timestamp."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"vestedAmount(address,uint64)": {
								"details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
							},
							"vestedAmount(uint64)": {
								"details": "Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroTokenVesting_flattened.sol\":31284:35285  contract VestingWallet is Context, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"SpageroTokenVesting_flattened.sol\":31756:31942  constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) payable Ownable(beneficiary) {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"SpageroTokenVesting_flattened.sol\":31852:31863  beneficiary */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SpageroTokenVesting_flattened.sol\":27619:27645  initialOwner == address(0) */\n  dup2\n  and\n    /* \"SpageroTokenVesting_flattened.sol\":27615:27710  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"SpageroTokenVesting_flattened.sol\":27668:27699  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"SpageroTokenVesting_flattened.sol\":27696:27697  0 */\n  0x00\n    /* \"SpageroTokenVesting_flattened.sol\":27668:27699  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":801:852   */\n  mstore\n    /* \"#utility.yul\":774:792   */\n  0x24\n  add\n    /* \"SpageroTokenVesting_flattened.sol\":27668:27699  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"SpageroTokenVesting_flattened.sol\":27615:27710  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"SpageroTokenVesting_flattened.sol\":27719:27751  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"SpageroTokenVesting_flattened.sol\":27738:27750  initialOwner */\n  dup2\n    /* \"SpageroTokenVesting_flattened.sol\":27719:27737  _transferOwnership */\n  tag_10\n    /* \"SpageroTokenVesting_flattened.sol\":27719:27751  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_9:\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"SpageroTokenVesting_flattened.sol\":31875:31898  _start = startTimestamp */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"SpageroTokenVesting_flattened.sol\":31908:31935  _duration = durationSeconds */\n  and\n  0xa0\n  mstore\n  pop\n    /* \"SpageroTokenVesting_flattened.sol\":31284:35285  contract VestingWallet is Context, Ownable {... */\n  jump(tag_15)\n    /* \"SpageroTokenVesting_flattened.sol\":29258:29445  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"SpageroTokenVesting_flattened.sol\":29331:29347  address oldOwner */\n  0x00\n    /* \"SpageroTokenVesting_flattened.sol\":29350:29356  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SpageroTokenVesting_flattened.sol\":29366:29383  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"SpageroTokenVesting_flattened.sol\":29350:29356  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"SpageroTokenVesting_flattened.sol\":29331:29347  address oldOwner */\n  swap1\n    /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"SpageroTokenVesting_flattened.sol\":29321:29445  {... */\n  pop\n    /* \"SpageroTokenVesting_flattened.sol\":29258:29445  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:189   */\ntag_14:\n    /* \"#utility.yul\":92:105   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":134:164   */\n  dup2\n  and\n    /* \"#utility.yul\":124:165   */\n  dup2\n  eq\n    /* \"#utility.yul\":114:183   */\n  tag_17\n  jumpi\n    /* \"#utility.yul\":179:180   */\n  0x00\n    /* \"#utility.yul\":176:177   */\n  dup1\n    /* \"#utility.yul\":169:181   */\n  revert\n    /* \"#utility.yul\":114:183   */\ntag_17:\n    /* \"#utility.yul\":14:189   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":194:650   */\ntag_2:\n    /* \"#utility.yul\":280:286   */\n  0x00\n    /* \"#utility.yul\":288:294   */\n  dup1\n    /* \"#utility.yul\":296:302   */\n  0x00\n    /* \"#utility.yul\":349:351   */\n  0x60\n    /* \"#utility.yul\":337:346   */\n  dup5\n    /* \"#utility.yul\":328:335   */\n  dup7\n    /* \"#utility.yul\":324:347   */\n  sub\n    /* \"#utility.yul\":320:352   */\n  slt\n    /* \"#utility.yul\":317:369   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":365:366   */\n  0x00\n    /* \"#utility.yul\":362:363   */\n  dup1\n    /* \"#utility.yul\":355:367   */\n  revert\n    /* \"#utility.yul\":317:369   */\ntag_19:\n    /* \"#utility.yul\":391:407   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":436:467   */\n  dup2\n  and\n    /* \"#utility.yul\":426:468   */\n  dup2\n  eq\n    /* \"#utility.yul\":416:486   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":482:483   */\n  0x00\n    /* \"#utility.yul\":479:480   */\n  dup1\n    /* \"#utility.yul\":472:484   */\n  revert\n    /* \"#utility.yul\":416:486   */\ntag_20:\n    /* \"#utility.yul\":505:510   */\n  swap3\n  pop\n    /* \"#utility.yul\":529:577   */\n  tag_21\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":558:576   */\n  dup6\n  add\n    /* \"#utility.yul\":529:577   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":519:577   */\n  swap2\n  pop\n    /* \"#utility.yul\":596:644   */\n  tag_22\n    /* \"#utility.yul\":640:642   */\n  0x40\n    /* \"#utility.yul\":629:638   */\n  dup6\n    /* \"#utility.yul\":625:643   */\n  add\n    /* \"#utility.yul\":596:644   */\n  tag_14\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":586:644   */\n  swap1\n  pop\n    /* \"#utility.yul\":194:650   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":655:858   */\ntag_15:\n    /* \"SpageroTokenVesting_flattened.sol\":31284:35285  contract VestingWallet is Context, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n  0x00\n  assignImmutable(\"0x7e61868c26ad9542219295e4248d06589934ece56761f625f341eef80a4788c7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"SpageroTokenVesting_flattened.sol\":31284:35285  contract VestingWallet is Context, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x96132521\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbe9a6555\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xefbe1c1c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfbccedae\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x96132521\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa3f8eace\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x810ec23b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x86d1a69f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x0a17b06b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SpageroTokenVesting_flattened.sol\":34228:34393  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":34228:34393  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SpageroTokenVesting_flattened.sol\":32275:32366  function duration() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":32350:32359  _duration */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"SpageroTokenVesting_flattened.sol\":32343:32359  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":32275:32366  function duration() public view virtual returns (uint256) {... */\n      jump(tag_23)\n        /* \"SpageroTokenVesting_flattened.sol\":33842:34088  function release(address token) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"SpageroTokenVesting_flattened.sol\":28639:28740  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_34\n      tag_40\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":34534:34736  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_23\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":33520:33718  function release() public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_34\n      tag_49\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":28030:28037  address */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      sload\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1339:1390   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1327:1329   */\n      0x20\n        /* \"#utility.yul\":1312:1330   */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":32592:32683  function released() public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":32667:32676  _released */\n      sload(0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":32592:32683  function released() public view virtual returns (uint256) {... */\n      jump(tag_23)\n        /* \"SpageroTokenVesting_flattened.sol\":32750:32866  function released(address token) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_23\n      tag_61\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":32812:32819  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32852  _erc20Released */\n      0x02\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":32750:32866  function released(address token) public view virtual returns (uint256) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":33223:33382  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_23\n      tag_66\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32123:32208  function start() public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_23\n      tag_71\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32430:32527  function end() public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_23\n      tag_75\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":28889:29104  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_34\n      tag_79\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32941:33075  function releasable() public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_23\n      tag_83\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":34228:34393  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"SpageroTokenVesting_flattened.sol\":34297:34304  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":34323:34386  _vestingSchedule(address(this).balance + released(), timestamp) */\n      tag_86\n        /* \"SpageroTokenVesting_flattened.sol\":34364:34374  released() */\n      tag_87\n        /* \"SpageroTokenVesting_flattened.sol\":32667:32676  _released */\n      sload(0x01)\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":32592:32683  function released() public view virtual returns (uint256) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":34364:34374  released() */\n    tag_87:\n        /* \"SpageroTokenVesting_flattened.sol\":34340:34374  address(this).balance + released() */\n      tag_88\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":34340:34361  address(this).balance */\n      selfbalance\n        /* \"SpageroTokenVesting_flattened.sol\":34340:34374  address(this).balance + released() */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"SpageroTokenVesting_flattened.sol\":34376:34385  timestamp */\n      dup4\n        /* \"SpageroTokenVesting_flattened.sol\":34323:34339  _vestingSchedule */\n      tag_90\n        /* \"SpageroTokenVesting_flattened.sol\":34323:34386  _vestingSchedule(address(this).balance + released(), timestamp) */\n      jump\t// in\n    tag_86:\n        /* \"SpageroTokenVesting_flattened.sol\":34316:34386  return _vestingSchedule(address(this).balance + released(), timestamp) */\n      swap3\n        /* \"SpageroTokenVesting_flattened.sol\":34228:34393  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":33842:34088  function release(address token) public virtual {... */\n    tag_37:\n        /* \"SpageroTokenVesting_flattened.sol\":33899:33913  uint256 amount */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":33916:33933  releasable(token) */\n      tag_93\n        /* \"SpageroTokenVesting_flattened.sol\":33927:33932  token */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":33916:33926  releasable */\n      tag_67\n        /* \"SpageroTokenVesting_flattened.sol\":33916:33933  releasable(token) */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33964  _erc20Released[token] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33957  _erc20Released */\n      0x02\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33964  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33974  _erc20Released[token] += amount */\n      dup1\n      sload\n        /* \"SpageroTokenVesting_flattened.sol\":33899:33933  uint256 amount = releasable(token) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33964  _erc20Released[token] */\n      swap1\n      swap2\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33974  _erc20Released[token] += amount */\n      tag_94\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":33899:33933  uint256 amount = releasable(token) */\n      dup5\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":33943:33974  _erc20Released[token] += amount */\n      tag_89\n      jump\t// in\n    tag_94:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33989:34017  ERC20Released(token, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":33989:34017  ERC20Released(token, amount) */\n      dup4\n      and\n      swap1\n      0xc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":33989:34017  ERC20Released(token, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SpageroTokenVesting_flattened.sol\":34027:34081  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      tag_96\n        /* \"SpageroTokenVesting_flattened.sol\":34057:34062  token */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":34065:34072  owner() */\n      tag_97\n        /* \"SpageroTokenVesting_flattened.sol\":28030:28037  address */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":34065:34072  owner() */\n    tag_97:\n        /* \"SpageroTokenVesting_flattened.sol\":34074:34080  amount */\n      dup4\n        /* \"SpageroTokenVesting_flattened.sol\":34027:34049  SafeERC20.safeTransfer */\n      tag_98\n        /* \"SpageroTokenVesting_flattened.sol\":34027:34081  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      jump\t// in\n    tag_96:\n        /* \"SpageroTokenVesting_flattened.sol\":33889:34088  {... */\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33842:34088  function release(address token) public virtual {... */\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":28639:28740  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27890  _checkOwner() */\n      tag_100\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27888  _checkOwner */\n      tag_101\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27890  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"SpageroTokenVesting_flattened.sol\":28703:28733  _transferOwnership(address(0)) */\n      tag_103\n        /* \"SpageroTokenVesting_flattened.sol\":28730:28731  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28703:28721  _transferOwnership */\n      tag_104\n        /* \"SpageroTokenVesting_flattened.sol\":28703:28733  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_103:\n        /* \"SpageroTokenVesting_flattened.sol\":28639:28740  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":34534:34736  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      dup3\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":34618:34625  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32852  _erc20Released */\n      0x02\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"SpageroTokenVesting_flattened.sol\":34644:34729  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      tag_106\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34699  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":34693:34697  this */\n      address\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34699  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34684  IERC20(token).balanceOf */\n      dup7\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34699  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"SpageroTokenVesting_flattened.sol\":34661:34717  IERC20(token).balanceOf(address(this)) + released(token) */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":34644:34729  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n    tag_106:\n        /* \"SpageroTokenVesting_flattened.sol\":34637:34729  return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      swap4\n        /* \"SpageroTokenVesting_flattened.sol\":34534:34736  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":33520:33718  function release() public virtual {... */\n    tag_49:\n        /* \"SpageroTokenVesting_flattened.sol\":33564:33578  uint256 amount */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":33581:33593  releasable() */\n      tag_115\n        /* \"SpageroTokenVesting_flattened.sol\":33581:33591  releasable */\n      tag_83\n        /* \"SpageroTokenVesting_flattened.sol\":33581:33593  releasable() */\n      jump\t// in\n    tag_115:\n        /* \"SpageroTokenVesting_flattened.sol\":33564:33593  uint256 amount = releasable() */\n      swap1\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33616:33622  amount */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":33603:33612  _released */\n      0x01\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":33603:33622  _released += amount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_116:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33637:33658  EtherReleased(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":33637:33658  EtherReleased(amount) */\n      0xda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":33637:33658  EtherReleased(amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SpageroTokenVesting_flattened.sol\":33668:33711  Address.sendValue(payable(owner()), amount) */\n      tag_118\n        /* \"SpageroTokenVesting_flattened.sol\":33694:33701  owner() */\n      tag_119\n        /* \"SpageroTokenVesting_flattened.sol\":28030:28037  address */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":27984:28069  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":33694:33701  owner() */\n    tag_119:\n        /* \"SpageroTokenVesting_flattened.sol\":33704:33710  amount */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":33668:33685  Address.sendValue */\n      tag_120\n        /* \"SpageroTokenVesting_flattened.sol\":33668:33711  Address.sendValue(payable(owner()), amount) */\n      jump\t// in\n    tag_118:\n        /* \"SpageroTokenVesting_flattened.sol\":33554:33718  {... */\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":33520:33718  function release() public virtual {... */\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":33223:33382  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      dup2\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":33287:33294  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32852  _erc20Released */\n      0x02\n        /* \"SpageroTokenVesting_flattened.sol\":32838:32859  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"SpageroTokenVesting_flattened.sol\":33313:33357  vestedAmount(token, uint64(block.timestamp)) */\n      tag_126\n        /* \"SpageroTokenVesting_flattened.sol\":33326:33331  token */\n      dup4\n        /* \"SpageroTokenVesting_flattened.sol\":33340:33355  block.timestamp */\n      timestamp\n        /* \"SpageroTokenVesting_flattened.sol\":33313:33325  vestedAmount */\n      tag_45\n        /* \"SpageroTokenVesting_flattened.sol\":33313:33357  vestedAmount(token, uint64(block.timestamp)) */\n      jump\t// in\n    tag_126:\n        /* \"SpageroTokenVesting_flattened.sol\":33313:33375  vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      tag_86\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32123:32208  function start() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"SpageroTokenVesting_flattened.sol\":32188:32201  return _start */\n      0xffffffffffffffff\n        /* \"SpageroTokenVesting_flattened.sol\":32195:32201  _start */\n      immutable(\"0x7e61868c26ad9542219295e4248d06589934ece56761f625f341eef80a4788c7\")\n        /* \"SpageroTokenVesting_flattened.sol\":32188:32201  return _start */\n      and\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":32123:32208  function start() public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":32430:32527  function end() public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"SpageroTokenVesting_flattened.sol\":32474:32481  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":32350:32359  _duration */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"SpageroTokenVesting_flattened.sol\":32343:32359  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":32500:32507  start() */\n      tag_132\n        /* \"SpageroTokenVesting_flattened.sol\":32500:32505  start */\n      tag_71\n        /* \"SpageroTokenVesting_flattened.sol\":32500:32507  start() */\n      jump\t// in\n    tag_132:\n        /* \"SpageroTokenVesting_flattened.sol\":32500:32520  start() + duration() */\n      tag_133\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_133:\n        /* \"SpageroTokenVesting_flattened.sol\":32493:32520  return start() + duration() */\n      swap1\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":32430:32527  function end() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":28889:29104  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_80:\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27890  _checkOwner() */\n      tag_135\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27888  _checkOwner */\n      tag_101\n        /* \"SpageroTokenVesting_flattened.sol\":27877:27890  _checkOwner() */\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":28973:28995  newOwner == address(0) */\n      dup2\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":28969:29060  if (newOwner == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":29018:29049  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":29046:29047  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":29018:29049  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":29018:29049  OwnableInvalidOwner(address(0)) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SpageroTokenVesting_flattened.sol\":28969:29060  if (newOwner == address(0)) {... */\n    tag_137:\n        /* \"SpageroTokenVesting_flattened.sol\":29069:29097  _transferOwnership(newOwner) */\n      tag_118\n        /* \"SpageroTokenVesting_flattened.sol\":29088:29096  newOwner */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":29069:29087  _transferOwnership */\n      tag_104\n        /* \"SpageroTokenVesting_flattened.sol\":29069:29097  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":32941:33075  function releasable() public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"SpageroTokenVesting_flattened.sol\":32992:32999  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":33058:33068  released() */\n      tag_141\n        /* \"SpageroTokenVesting_flattened.sol\":32667:32676  _released */\n      sload(0x01)\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":32592:32683  function released() public view virtual returns (uint256) {... */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":33058:33068  released() */\n    tag_141:\n        /* \"SpageroTokenVesting_flattened.sol\":33018:33055  vestedAmount(uint64(block.timestamp)) */\n      tag_142\n        /* \"SpageroTokenVesting_flattened.sol\":33038:33053  block.timestamp */\n      timestamp\n        /* \"SpageroTokenVesting_flattened.sol\":33018:33030  vestedAmount */\n      tag_26\n        /* \"SpageroTokenVesting_flattened.sol\":33018:33055  vestedAmount(uint64(block.timestamp)) */\n      jump\t// in\n    tag_142:\n        /* \"SpageroTokenVesting_flattened.sol\":33018:33068  vestedAmount(uint64(block.timestamp)) - released() */\n      tag_133\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"SpageroTokenVesting_flattened.sol\":34931:35283  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_90:\n        /* \"SpageroTokenVesting_flattened.sol\":35031:35038  uint256 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":35066:35073  start() */\n      tag_145\n        /* \"SpageroTokenVesting_flattened.sol\":35066:35071  start */\n      tag_71\n        /* \"SpageroTokenVesting_flattened.sol\":35066:35073  start() */\n      jump\t// in\n    tag_145:\n        /* \"SpageroTokenVesting_flattened.sol\":35054:35063  timestamp */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":35054:35073  timestamp < start() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"SpageroTokenVesting_flattened.sol\":35050:35277  if (timestamp < start()) {... */\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":35096:35097  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":35089:35097  return 0 */\n      jump(tag_86)\n        /* \"SpageroTokenVesting_flattened.sol\":35050:35277  if (timestamp < start()) {... */\n    tag_146:\n        /* \"SpageroTokenVesting_flattened.sol\":35131:35136  end() */\n      tag_148\n        /* \"SpageroTokenVesting_flattened.sol\":35131:35134  end */\n      tag_75\n        /* \"SpageroTokenVesting_flattened.sol\":35131:35136  end() */\n      jump\t// in\n    tag_148:\n        /* \"SpageroTokenVesting_flattened.sol\":35118:35127  timestamp */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":35118:35136  timestamp >= end() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"SpageroTokenVesting_flattened.sol\":35114:35277  if (timestamp >= end()) {... */\n      tag_149\n      jumpi\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":35159:35174  totalAllocation */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":35152:35174  return totalAllocation */\n      jump(tag_86)\n        /* \"SpageroTokenVesting_flattened.sol\":35114:35277  if (timestamp >= end()) {... */\n    tag_149:\n        /* \"SpageroTokenVesting_flattened.sol\":32350:32359  _duration */\n      immutable(\"0x208ad8d9d4ca969ed7f17809392789f61ed5b8bb6f6790375ce7d972071a1fbe\")\n        /* \"SpageroTokenVesting_flattened.sol\":32343:32359  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":35244:35251  start() */\n      tag_152\n        /* \"SpageroTokenVesting_flattened.sol\":35244:35249  start */\n      tag_71\n        /* \"SpageroTokenVesting_flattened.sol\":35244:35251  start() */\n      jump\t// in\n    tag_152:\n        /* \"SpageroTokenVesting_flattened.sol\":35232:35251  timestamp - start() */\n      tag_153\n      swap1\n      0xffffffffffffffff\n      dup6\n      and\n      tag_128\n      jump\t// in\n    tag_153:\n        /* \"SpageroTokenVesting_flattened.sol\":35213:35252  totalAllocation * (timestamp - start()) */\n      tag_154\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":35213:35228  totalAllocation */\n      dup6\n        /* \"SpageroTokenVesting_flattened.sol\":35213:35252  totalAllocation * (timestamp - start()) */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"SpageroTokenVesting_flattened.sol\":35212:35266  (totalAllocation * (timestamp - start())) / duration() */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"SpageroTokenVesting_flattened.sol\":35205:35266  return (totalAllocation * (timestamp - start())) / duration() */\n      swap1\n      pop\n      jump(tag_86)\n        /* \"SpageroTokenVesting_flattened.sol\":9630:9790  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"SpageroTokenVesting_flattened.sol\":9739:9782  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2572:2604   */\n      dup5\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":9739:9782  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2554:2605   */\n      mstore\n        /* \"#utility.yul\":2621:2639   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2614:2648   */\n      dup5\n      swap1\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":9739:9782  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2527:2545   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":9739:9782  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":9712:9783  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_159\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":9732:9737  token */\n      dup5\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":9712:9731  _callOptionalReturn */\n      tag_162\n        /* \"SpageroTokenVesting_flattened.sol\":9712:9783  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_159:\n        /* \"SpageroTokenVesting_flattened.sol\":9630:9790  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":28142:28304  function _checkOwner() internal view virtual {... */\n    tag_101:\n        /* \"SpageroTokenVesting_flattened.sol\":28030:28037  address */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":28056:28062  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":26141:26151  msg.sender */\n      caller\n        /* \"SpageroTokenVesting_flattened.sol\":28201:28224  owner() != _msgSender() */\n      eq\n        /* \"SpageroTokenVesting_flattened.sol\":28197:28298  if (owner() != _msgSender()) {... */\n      tag_103\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":28247:28287  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":26141:26151  msg.sender */\n      caller\n        /* \"SpageroTokenVesting_flattened.sol\":28247:28287  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":28247:28287  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_138\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":29258:29445  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_104:\n        /* \"SpageroTokenVesting_flattened.sol\":29331:29347  address oldOwner */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":29350:29356  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":29366:29383  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"SpageroTokenVesting_flattened.sol\":29350:29356  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"SpageroTokenVesting_flattened.sol\":29331:29347  address oldOwner */\n      swap1\n        /* \"SpageroTokenVesting_flattened.sol\":29398:29438  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"SpageroTokenVesting_flattened.sol\":29321:29445  {... */\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":29258:29445  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":20678:21043  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_120:\n        /* \"SpageroTokenVesting_flattened.sol\":20787:20793  amount */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":20763:20784  address(this).balance */\n      selfbalance\n        /* \"SpageroTokenVesting_flattened.sol\":20763:20793  address(this).balance < amount */\n      lt\n        /* \"SpageroTokenVesting_flattened.sol\":20759:20884  if (address(this).balance < amount) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":20816:20873  Errors.InsufficientBalance(address(this).balance, amount) */\n      mload(0x40)\n      shl(0xe0, 0xcf479181)\n      dup2\n      mstore\n        /* \"SpageroTokenVesting_flattened.sol\":20843:20864  address(this).balance */\n      selfbalance\n        /* \"SpageroTokenVesting_flattened.sol\":20816:20873  Errors.InsufficientBalance(address(this).balance, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2833:2858   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2867:2901   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2806:2824   */\n      0x44\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":20816:20873  Errors.InsufficientBalance(address(this).balance, amount) */\n      tag_138\n        /* \"#utility.yul\":2659:2907   */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":20759:20884  if (address(this).balance < amount) {... */\n    tag_172:\n        /* \"SpageroTokenVesting_flattened.sol\":20895:20907  bool success */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":20909:20932  bytes memory returndata */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":20936:20945  recipient */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":20936:20950  recipient.call */\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":20958:20964  amount */\n      dup4\n        /* \"SpageroTokenVesting_flattened.sol\":20936:20969  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_179\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_178)\n    tag_179:\n      0x60\n      swap2\n      pop\n    tag_178:\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":20894:20969  (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":20984:20991  success */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":20979:21037  if (!success) {... */\n      tag_181\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":21007:21026  _revert(returndata) */\n      tag_181\n        /* \"SpageroTokenVesting_flattened.sol\":21015:21025  returndata */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":21007:21014  _revert */\n      tag_182\n        /* \"SpageroTokenVesting_flattened.sol\":21007:21026  _revert(returndata) */\n      jump\t// in\n    tag_181:\n        /* \"SpageroTokenVesting_flattened.sol\":20749:21043  {... */\n      pop\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":20678:21043  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroTokenVesting_flattened.sol\":16781:17501  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_162:\n        /* \"SpageroTokenVesting_flattened.sol\":16861:16879  uint256 returnSize */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":16889:16908  uint256 returnValue */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":17027:17031  0x20 */\n      0x20\n        /* \"SpageroTokenVesting_flattened.sol\":17024:17025  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":17017:17021  data */\n      dup5\n        /* \"SpageroTokenVesting_flattened.sol\":17011:17022  mload(data) */\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":17004:17008  0x20 */\n      0x20\n        /* \"SpageroTokenVesting_flattened.sol\":16998:17002  data */\n      dup7\n        /* \"SpageroTokenVesting_flattened.sol\":16994:17009  add(data, 0x20) */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":16991:16992  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":16984:16989  token */\n      dup9\n        /* \"SpageroTokenVesting_flattened.sol\":16977:16982  gas() */\n      gas\n        /* \"SpageroTokenVesting_flattened.sol\":16972:17032  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"SpageroTokenVesting_flattened.sol\":17084:17091  success */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":17074:17250  if iszero(success) {... */\n      tag_184\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":17128:17132  0x40 */\n      0x40\n        /* \"SpageroTokenVesting_flattened.sol\":17122:17133  mload(0x40) */\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":17173:17189  returndatasize() */\n      returndatasize\n        /* \"SpageroTokenVesting_flattened.sol\":17170:17171  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":17165:17168  ptr */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":17150:17190  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"SpageroTokenVesting_flattened.sol\":17219:17235  returndatasize() */\n      returndatasize\n        /* \"SpageroTokenVesting_flattened.sol\":17214:17217  ptr */\n      dup2\n        /* \"SpageroTokenVesting_flattened.sol\":17207:17236  revert(ptr, returndatasize()) */\n      revert\n        /* \"SpageroTokenVesting_flattened.sol\":17074:17250  if iszero(success) {... */\n    tag_184:\n      pop\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":17327:17328  0 */\n      0x00\n        /* \"SpageroTokenVesting_flattened.sol\":17321:17329  mload(0) */\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":17277:17293  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"SpageroTokenVesting_flattened.sol\":17353:17368  returnSize == 0 */\n      dup2\n      iszero\n        /* \"SpageroTokenVesting_flattened.sol\":17353:17421  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_185\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":17405:17416  returnValue */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":17420:17421  1 */\n      0x01\n        /* \"SpageroTokenVesting_flattened.sol\":17405:17421  returnValue != 1 */\n      eq\n      iszero\n        /* \"SpageroTokenVesting_flattened.sol\":17353:17421  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_186)\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroTokenVesting_flattened.sol\":17371:17397  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"SpageroTokenVesting_flattened.sol\":17371:17402  address(token).code.length == 0 */\n      iszero\n        /* \"SpageroTokenVesting_flattened.sol\":17353:17421  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_186:\n        /* \"SpageroTokenVesting_flattened.sol\":17349:17495  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":17444:17484  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1357:1389   */\n      dup6\n      and\n        /* \"SpageroTokenVesting_flattened.sol\":17444:17484  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":17444:17484  SafeERC20FailedOperation(address(token)) */\n      tag_138\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"SpageroTokenVesting_flattened.sol\":24947:25381  function _revert(bytes memory returndata) private pure {... */\n    tag_182:\n        /* \"SpageroTokenVesting_flattened.sol\":25078:25095  returndata.length */\n      dup1\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":25078:25099  returndata.length > 0 */\n      iszero\n        /* \"SpageroTokenVesting_flattened.sol\":25074:25375  if (returndata.length > 0) {... */\n      tag_191\n      jumpi\n        /* \"SpageroTokenVesting_flattened.sol\":25282:25292  returndata */\n      dup1\n        /* \"SpageroTokenVesting_flattened.sol\":25276:25293  mload(returndata) */\n      mload\n        /* \"SpageroTokenVesting_flattened.sol\":25269:25273  0x20 */\n      0x20\n        /* \"SpageroTokenVesting_flattened.sol\":25257:25267  returndata */\n      dup3\n        /* \"SpageroTokenVesting_flattened.sol\":25253:25274  add(returndata, 0x20) */\n      add\n        /* \"SpageroTokenVesting_flattened.sol\":25246:25294  revert(add(returndata, 0x20), mload(returndata)) */\n      revert\n        /* \"SpageroTokenVesting_flattened.sol\":25074:25375  if (returndata.length > 0) {... */\n    tag_191:\n        /* \"SpageroTokenVesting_flattened.sol\":25345:25364  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:185   */\n    tag_193:\n        /* \"#utility.yul\":81:101   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":141:159   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":130:160   */\n      dup2\n      and\n        /* \"#utility.yul\":120:161   */\n      dup2\n      eq\n        /* \"#utility.yul\":110:179   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":175:176   */\n      0x00\n        /* \"#utility.yul\":172:173   */\n      dup1\n        /* \"#utility.yul\":165:177   */\n      revert\n        /* \"#utility.yul\":110:179   */\n    tag_198:\n        /* \"#utility.yul\":14:185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":190:374   */\n    tag_25:\n        /* \"#utility.yul\":248:254   */\n      0x00\n        /* \"#utility.yul\":301:303   */\n      0x20\n        /* \"#utility.yul\":289:298   */\n      dup3\n        /* \"#utility.yul\":280:287   */\n      dup5\n        /* \"#utility.yul\":276:299   */\n      sub\n        /* \"#utility.yul\":272:304   */\n      slt\n        /* \"#utility.yul\":269:321   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":269:321   */\n    tag_200:\n        /* \"#utility.yul\":340:368   */\n      tag_106\n        /* \"#utility.yul\":358:367   */\n      dup3\n        /* \"#utility.yul\":340:368   */\n      tag_193\n      jump\t// in\n        /* \"#utility.yul\":561:734   */\n    tag_194:\n        /* \"#utility.yul\":629:649   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:709   */\n      dup2\n      and\n        /* \"#utility.yul\":668:710   */\n      dup2\n      eq\n        /* \"#utility.yul\":658:728   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":721:722   */\n      dup1\n        /* \"#utility.yul\":714:726   */\n      revert\n        /* \"#utility.yul\":739:925   */\n    tag_36:\n        /* \"#utility.yul\":798:804   */\n      0x00\n        /* \"#utility.yul\":851:853   */\n      0x20\n        /* \"#utility.yul\":839:848   */\n      dup3\n        /* \"#utility.yul\":830:837   */\n      dup5\n        /* \"#utility.yul\":826:849   */\n      sub\n        /* \"#utility.yul\":822:854   */\n      slt\n        /* \"#utility.yul\":819:871   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":867:868   */\n      0x00\n        /* \"#utility.yul\":864:865   */\n      dup1\n        /* \"#utility.yul\":857:869   */\n      revert\n        /* \"#utility.yul\":819:871   */\n    tag_206:\n        /* \"#utility.yul\":890:919   */\n      tag_106\n        /* \"#utility.yul\":909:918   */\n      dup3\n        /* \"#utility.yul\":890:919   */\n      tag_194\n      jump\t// in\n        /* \"#utility.yul\":930:1188   */\n    tag_44:\n        /* \"#utility.yul\":997:1003   */\n      0x00\n        /* \"#utility.yul\":1005:1011   */\n      dup1\n        /* \"#utility.yul\":1058:1060   */\n      0x40\n        /* \"#utility.yul\":1046:1055   */\n      dup4\n        /* \"#utility.yul\":1037:1044   */\n      dup6\n        /* \"#utility.yul\":1033:1056   */\n      sub\n        /* \"#utility.yul\":1029:1061   */\n      slt\n        /* \"#utility.yul\":1026:1078   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1074:1075   */\n      0x00\n        /* \"#utility.yul\":1071:1072   */\n      dup1\n        /* \"#utility.yul\":1064:1076   */\n      revert\n        /* \"#utility.yul\":1026:1078   */\n    tag_209:\n        /* \"#utility.yul\":1097:1126   */\n      tag_210\n        /* \"#utility.yul\":1116:1125   */\n      dup4\n        /* \"#utility.yul\":1097:1126   */\n      tag_194\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1087:1126   */\n      swap2\n      pop\n        /* \"#utility.yul\":1145:1182   */\n      tag_211\n        /* \"#utility.yul\":1178:1180   */\n      0x20\n        /* \"#utility.yul\":1167:1176   */\n      dup5\n        /* \"#utility.yul\":1163:1181   */\n      add\n        /* \"#utility.yul\":1145:1182   */\n      tag_193\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1135:1182   */\n      swap1\n      pop\n        /* \"#utility.yul\":930:1188   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1401:1528   */\n    tag_195:\n        /* \"#utility.yul\":1462:1472   */\n      0x4e487b71\n        /* \"#utility.yul\":1457:1460   */\n      0xe0\n        /* \"#utility.yul\":1453:1473   */\n      shl\n        /* \"#utility.yul\":1450:1451   */\n      0x00\n        /* \"#utility.yul\":1443:1474   */\n      mstore\n        /* \"#utility.yul\":1493:1497   */\n      0x11\n        /* \"#utility.yul\":1490:1491   */\n      0x04\n        /* \"#utility.yul\":1483:1498   */\n      mstore\n        /* \"#utility.yul\":1517:1521   */\n      0x24\n        /* \"#utility.yul\":1514:1515   */\n      0x00\n        /* \"#utility.yul\":1507:1522   */\n      revert\n        /* \"#utility.yul\":1533:1658   */\n    tag_89:\n        /* \"#utility.yul\":1598:1607   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1619:1629   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1616:1652   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1632:1650   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1663:1847   */\n    tag_112:\n        /* \"#utility.yul\":1733:1739   */\n      0x00\n        /* \"#utility.yul\":1786:1788   */\n      0x20\n        /* \"#utility.yul\":1774:1783   */\n      dup3\n        /* \"#utility.yul\":1765:1772   */\n      dup5\n        /* \"#utility.yul\":1761:1784   */\n      sub\n        /* \"#utility.yul\":1757:1789   */\n      slt\n        /* \"#utility.yul\":1754:1806   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":1802:1803   */\n      0x00\n        /* \"#utility.yul\":1799:1800   */\n      dup1\n        /* \"#utility.yul\":1792:1804   */\n      revert\n        /* \"#utility.yul\":1754:1806   */\n    tag_218:\n      pop\n        /* \"#utility.yul\":1825:1841   */\n      mload\n      swap2\n        /* \"#utility.yul\":1663:1847   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:1980   */\n    tag_128:\n        /* \"#utility.yul\":1919:1928   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1940:1951   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1937:1974   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1954:1972   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1985:2153   */\n    tag_155:\n        /* \"#utility.yul\":2058:2067   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2089:2098   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2106:2121   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2100:2122   */\n      dup5\n      eq\n        /* \"#utility.yul\":2086:2123   */\n      or\n        /* \"#utility.yul\":2076:2147   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2127:2145   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":2158:2375   */\n    tag_157:\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2224:2225   */\n      dup3\n        /* \"#utility.yul\":2214:2346   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2268:2278   */\n      0x4e487b71\n        /* \"#utility.yul\":2263:2266   */\n      0xe0\n        /* \"#utility.yul\":2259:2279   */\n      shl\n        /* \"#utility.yul\":2256:2257   */\n      0x00\n        /* \"#utility.yul\":2249:2280   */\n      mstore\n        /* \"#utility.yul\":2303:2307   */\n      0x12\n        /* \"#utility.yul\":2300:2301   */\n      0x04\n        /* \"#utility.yul\":2293:2308   */\n      mstore\n        /* \"#utility.yul\":2331:2335   */\n      0x24\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2321:2336   */\n      revert\n        /* \"#utility.yul\":2214:2346   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":2360:2369   */\n      div\n      swap1\n        /* \"#utility.yul\":2158:2375   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201ae47f49ce7d9e5b3c526304a294f595e66db3648f5ffd040bba355ae604fa1364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1126": {
									"entryPoint": null,
									"id": 1126,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1077": {
									"entryPoint": 114,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint64_fromMemory": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:860:1",
										"nodeType": "YulBlock",
										"src": "0:860:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "73:116:1",
													"nodeType": "YulBlock",
													"src": "73:116:1",
													"statements": [
														{
															"nativeSrc": "83:22:1",
															"nodeType": "YulAssignment",
															"src": "83:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "98:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "98:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "92:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:1"
																},
																"nativeSrc": "92:13:1",
																"nodeType": "YulFunctionCall",
																"src": "92:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "83:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "83:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "167:16:1",
																"nodeType": "YulBlock",
																"src": "167:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "176:1:1",
																					"nodeType": "YulLiteral",
																					"src": "176:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "179:1:1",
																					"nodeType": "YulLiteral",
																					"src": "179:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "169:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:1"
																			},
																			"nativeSrc": "169:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:1"
																		},
																		"nativeSrc": "169:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "127:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "127:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "138:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "138:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "153:2:1",
																										"nodeType": "YulLiteral",
																										"src": "153:2:1",
																										"type": "",
																										"value": "64"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "157:1:1",
																										"nodeType": "YulLiteral",
																										"src": "157:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "149:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "149:3:1"
																								},
																								"nativeSrc": "149:10:1",
																								"nodeType": "YulFunctionCall",
																								"src": "149:10:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "161:1:1",
																								"nodeType": "YulLiteral",
																								"src": "161:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "145:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "145:3:1"
																						},
																						"nativeSrc": "145:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "145:18:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "134:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "134:3:1"
																				},
																				"nativeSrc": "134:30:1",
																				"nodeType": "YulFunctionCall",
																				"src": "134:30:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "124:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "124:2:1"
																		},
																		"nativeSrc": "124:41:1",
																		"nodeType": "YulFunctionCall",
																		"src": "124:41:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "117:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "117:6:1"
																},
																"nativeSrc": "117:49:1",
																"nodeType": "YulFunctionCall",
																"src": "117:49:1"
															},
															"nativeSrc": "114:69:1",
															"nodeType": "YulIf",
															"src": "114:69:1"
														}
													]
												},
												"name": "abi_decode_uint64_fromMemory",
												"nativeSrc": "14:175:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "52:6:1",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "63:5:1",
														"nodeType": "YulTypedName",
														"src": "63:5:1",
														"type": ""
													}
												],
												"src": "14:175:1"
											},
											{
												"body": {
													"nativeSrc": "307:343:1",
													"nodeType": "YulBlock",
													"src": "307:343:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "353:16:1",
																"nodeType": "YulBlock",
																"src": "353:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "362:1:1",
																					"nodeType": "YulLiteral",
																					"src": "362:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "365:1:1",
																					"nodeType": "YulLiteral",
																					"src": "365:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "355:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "355:6:1"
																			},
																			"nativeSrc": "355:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "355:12:1"
																		},
																		"nativeSrc": "355:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "355:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "328:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "328:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "337:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "337:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "324:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "324:3:1"
																		},
																		"nativeSrc": "324:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "324:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "349:2:1",
																		"nodeType": "YulLiteral",
																		"src": "349:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "320:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "320:3:1"
																},
																"nativeSrc": "320:32:1",
																"nodeType": "YulFunctionCall",
																"src": "320:32:1"
															},
															"nativeSrc": "317:52:1",
															"nodeType": "YulIf",
															"src": "317:52:1"
														},
														{
															"nativeSrc": "378:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "378:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "397:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "397:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "391:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "391:5:1"
																},
																"nativeSrc": "391:16:1",
																"nodeType": "YulFunctionCall",
																"src": "391:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "382:5:1",
																	"nodeType": "YulTypedName",
																	"src": "382:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "470:16:1",
																"nodeType": "YulBlock",
																"src": "470:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "479:1:1",
																					"nodeType": "YulLiteral",
																					"src": "479:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "482:1:1",
																					"nodeType": "YulLiteral",
																					"src": "482:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "472:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "472:6:1"
																			},
																			"nativeSrc": "472:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "472:12:1"
																		},
																		"nativeSrc": "472:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "472:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "429:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "429:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "440:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "440:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "455:3:1",
																										"nodeType": "YulLiteral",
																										"src": "455:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "460:1:1",
																										"nodeType": "YulLiteral",
																										"src": "460:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "451:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "451:3:1"
																								},
																								"nativeSrc": "451:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "451:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "464:1:1",
																								"nodeType": "YulLiteral",
																								"src": "464:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "447:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "447:3:1"
																						},
																						"nativeSrc": "447:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "447:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "436:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "436:3:1"
																				},
																				"nativeSrc": "436:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "436:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "426:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "426:2:1"
																		},
																		"nativeSrc": "426:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "426:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:1"
																},
																"nativeSrc": "419:50:1",
																"nodeType": "YulFunctionCall",
																"src": "419:50:1"
															},
															"nativeSrc": "416:70:1",
															"nodeType": "YulIf",
															"src": "416:70:1"
														},
														{
															"nativeSrc": "495:15:1",
															"nodeType": "YulAssignment",
															"src": "495:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "505:5:1",
																"nodeType": "YulIdentifier",
																"src": "505:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "495:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:1"
																}
															]
														},
														{
															"nativeSrc": "519:58:1",
															"nodeType": "YulAssignment",
															"src": "519:58:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "573:2:1",
																				"nodeType": "YulLiteral",
																				"src": "573:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:1"
																		},
																		"nativeSrc": "558:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "558:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nativeSrc": "529:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "529:28:1"
																},
																"nativeSrc": "529:48:1",
																"nodeType": "YulFunctionCall",
																"src": "529:48:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "519:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:1"
																}
															]
														},
														{
															"nativeSrc": "586:58:1",
															"nodeType": "YulAssignment",
															"src": "586:58:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "629:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "629:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "640:2:1",
																				"nodeType": "YulLiteral",
																				"src": "640:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "625:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "625:3:1"
																		},
																		"nativeSrc": "625:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "625:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nativeSrc": "596:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "596:28:1"
																},
																"nativeSrc": "596:48:1",
																"nodeType": "YulFunctionCall",
																"src": "596:48:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "586:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory",
												"nativeSrc": "194:456:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "257:9:1",
														"nodeType": "YulTypedName",
														"src": "257:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "268:7:1",
														"nodeType": "YulTypedName",
														"src": "268:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "288:6:1",
														"nodeType": "YulTypedName",
														"src": "288:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"src": "194:456:1"
											},
											{
												"body": {
													"nativeSrc": "756:102:1",
													"nodeType": "YulBlock",
													"src": "756:102:1",
													"statements": [
														{
															"nativeSrc": "766:26:1",
															"nodeType": "YulAssignment",
															"src": "766:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "778:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "778:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "789:2:1",
																		"nodeType": "YulLiteral",
																		"src": "789:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "774:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "774:3:1"
																},
																"nativeSrc": "774:18:1",
																"nodeType": "YulFunctionCall",
																"src": "774:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "766:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "766:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "808:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "808:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "823:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "839:3:1",
																								"nodeType": "YulLiteral",
																								"src": "839:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "844:1:1",
																								"nodeType": "YulLiteral",
																								"src": "844:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "835:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "835:3:1"
																						},
																						"nativeSrc": "835:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "835:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "848:1:1",
																						"nodeType": "YulLiteral",
																						"src": "848:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "831:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "831:3:1"
																				},
																				"nativeSrc": "831:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "831:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "819:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:1"
																		},
																		"nativeSrc": "819:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "819:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "801:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "801:6:1"
																},
																"nativeSrc": "801:51:1",
																"nodeType": "YulFunctionCall",
																"src": "801:51:1"
															},
															"nativeSrc": "801:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "801:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "655:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "725:9:1",
														"nodeType": "YulTypedName",
														"src": "725:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "736:6:1",
														"nodeType": "YulTypedName",
														"src": "736:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "747:4:1",
														"nodeType": "YulTypedName",
														"src": "747:4:1",
														"type": ""
													}
												],
												"src": "655:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_uint64_fromMemory(add(headStart, 32))\n        value2 := abi_decode_uint64_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c0604052604051610ab4380380610ab4833981016040819052610022916100dc565b826001600160a01b03811661005057604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005981610072565b506001600160401b039182166080521660a05250610129565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160401b03811681146100d7575f80fd5b919050565b5f805f606084860312156100ee575f80fd5b83516001600160a01b0381168114610104575f80fd5b9250610112602085016100c1565b9150610120604085016100c1565b90509250925092565b60805160a05161095c6101585f395f8181610127015281816104d401526105b201525f6104ae015261095c5ff3fe6080604052600436106100dc575f3560e01c8063961325211161007c578063be9a655511610057578063be9a65551461024a578063efbe1c1c1461025e578063f2fde38b14610272578063fbccedae14610291575f80fd5b806396132521146101e35780639852595c146101f7578063a3f8eace1461022b575f80fd5b8063715018a6116100b7578063715018a614610176578063810ec23b1461018a57806386d1a69f146101a95780638da5cb5b146101bd575f80fd5b80630a17b06b146100e75780630fb5a6b4146101195780631916558714610155575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b50610106610101366004610826565b6102a5565b6040519081526020015b60405180910390f35b348015610124575f80fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610106565b348015610160575f80fd5b5061017461016f366004610855565b6102c8565b005b348015610181575f80fd5b50610174610360565b348015610195575f80fd5b506101066101a436600461086e565b610373565b3480156101b4575f80fd5b50610174610406565b3480156101c8575f80fd5b505f546040516001600160a01b039091168152602001610110565b3480156101ee575f80fd5b50600154610106565b348015610202575f80fd5b50610106610211366004610855565b6001600160a01b03165f9081526002602052604090205490565b348015610236575f80fd5b50610106610245366004610855565b610477565b348015610255575f80fd5b506101066104a3565b348015610269575f80fd5b506101066104d1565b34801561027d575f80fd5b5061017461028c366004610855565b610514565b34801561029c575f80fd5b50610106610553565b5f6102c26102b260015490565b6102bc90476108b3565b83610570565b92915050565b5f6102d282610477565b6001600160a01b0383165f908152600260205260408120805492935083929091906102fe9084906108b3565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a261035c826103565f546001600160a01b031690565b83610612565b5050565b610368610669565b6103715f610695565b565b6001600160a01b0382165f908152600260205260408120546103ff906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103d1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f591906108c6565b6102bc91906108b3565b9392505050565b5f61040f610553565b90508060015f82825461042291906108b3565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161047461046e5f546001600160a01b031690565b826106e4565b50565b6001600160a01b0381165f908152600260205260408120546104998342610373565b6102c291906108dd565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b5f7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105056104a3565b61050f91906108b3565b905090565b61051c610669565b6001600160a01b03811661054a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61047481610695565b5f61055d60015490565b610566426102a5565b61050f91906108dd565b5f6105796104a3565b8267ffffffffffffffff16101561059157505f6102c2565b6105996104d1565b8267ffffffffffffffff16106105b05750816102c2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105e36104a3565b6105f79067ffffffffffffffff85166108dd565b61060190856108f0565b61060b9190610907565b90506102c2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610664908490610776565b505050565b5f546001600160a01b031633146103715760405163118cdaa760e01b8152336004820152602401610541565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8047101561070e5760405163cf47918160e01b815247600482015260248101829052604401610541565b5f80836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610758576040519150601f19603f3d011682016040523d82523d5f602084013e61075d565b606091505b50915091508161077057610770816107e2565b50505050565b5f8060205f8451602086015f885af180610795576040513d5f823e3d81fd5b50505f513d915081156107ac5780600114156107b9565b6001600160a01b0384163b155b1561077057604051635274afe760e01b81526001600160a01b0385166004820152602401610541565b8051156107f157805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b803567ffffffffffffffff81168114610821575f80fd5b919050565b5f60208284031215610836575f80fd5b6103ff8261080a565b80356001600160a01b0381168114610821575f80fd5b5f60208284031215610865575f80fd5b6103ff8261083f565b5f806040838503121561087f575f80fd5b6108888361083f565b91506108966020840161080a565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102c2576102c261089f565b5f602082840312156108d6575f80fd5b5051919050565b818103818111156102c2576102c261089f565b80820281158282048414176102c2576102c261089f565b5f8261092157634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212201ae47f49ce7d9e5b3c526304a294f595e66db3648f5ffd040bba355ae604fa1364736f6c63430008180033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xAB4 CODESIZE SUB DUP1 PUSH2 0xAB4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59 DUP2 PUSH2 0x72 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE POP PUSH2 0x129 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x104 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x112 PUSH1 0x20 DUP6 ADD PUSH2 0xC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x120 PUSH1 0x40 DUP6 ADD PUSH2 0xC1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x95C PUSH2 0x158 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x127 ADD MSTORE DUP2 DUP2 PUSH2 0x4D4 ADD MSTORE PUSH2 0x5B2 ADD MSTORE PUSH0 PUSH2 0x4AE ADD MSTORE PUSH2 0x95C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xE3 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x360 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x553 JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x2B2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BC SWAP1 SELFBALANCE PUSH2 0x8B3 JUMP JUMPDEST DUP4 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2 DUP3 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x35C DUP3 PUSH2 0x356 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x612 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x371 PUSH0 PUSH2 0x695 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x40F PUSH2 0x553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x474 PUSH2 0x46E PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x499 DUP4 TIMESTAMP PUSH2 0x373 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x505 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x695 JUMP JUMPDEST PUSH0 PUSH2 0x55D PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x566 TIMESTAMP PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH2 0x579 PUSH2 0x4A3 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x591 JUMPI POP PUSH0 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x599 PUSH2 0x4D1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x5B0 JUMPI POP DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5E3 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5F7 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x664 SWAP1 DUP5 SWAP1 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7AC JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x7F1 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x80A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP4 PUSH2 0x83F JUMP JUMPDEST SWAP2 POP PUSH2 0x896 PUSH1 0x20 DUP5 ADD PUSH2 0x80A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x921 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE4 PUSH32 0x49CE7D9E5B3C526304A294F595E66DB3648F5FFD040BBA355AE604FA1364736F PUSH13 0x63430008180033000000000000 ",
							"sourceMap": "31284:4001:0:-:0;;;31756:186;;;;;;;;;;;;;;;;;;:::i;:::-;31852:11;-1:-1:-1;;;;;27619:26:0;;27615:95;;27668:31;;-1:-1:-1;;;27668:31:0;;27696:1;27668:31;;;801:51:1;774:18;;27668:31:0;;;;;;;27615:95;27719:32;27738:12;27719:18;:32::i;:::-;-1:-1:-1;;;;;;31875:23:0;;::::1;;::::0;31908:27:::1;;::::0;-1:-1:-1;31284:4001:0;;29258:187;29331:16;29350:6;;-1:-1:-1;;;;;29366:17:0;;;-1:-1:-1;;;;;;29366:17:0;;;;;;29398:40;;29350:6;;;;;;;29398:40;;29331:16;29398:40;29321:124;29258:187;:::o;14:175:1:-;92:13;;-1:-1:-1;;;;;134:30:1;;124:41;;114:69;;179:1;176;169:12;114:69;14:175;;;:::o;194:456::-;280:6;288;296;349:2;337:9;328:7;324:23;320:32;317:52;;;365:1;362;355:12;317:52;391:16;;-1:-1:-1;;;;;436:31:1;;426:42;;416:70;;482:1;479;472:12;416:70;505:5;-1:-1:-1;529:48:1;573:2;558:18;;529:48;:::i;:::-;519:58;;596:48;640:2;629:9;625:18;596:48;:::i;:::-;586:58;;194:456;;;;;:::o;655:203::-;31284:4001:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1131": {
									"entryPoint": null,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_584": {
									"entryPoint": 1910,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_1015": {
									"entryPoint": 1641,
									"id": 1015,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_903": {
									"entryPoint": 2018,
									"id": 903,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1077": {
									"entryPoint": 1685,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_vestingSchedule_1377": {
									"entryPoint": 1392,
									"id": 1377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@duration_1149": {
									"entryPoint": null,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@end_1162": {
									"entryPoint": 1233,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_998": {
									"entryPoint": null,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_1202": {
									"entryPoint": 1363,
									"id": 1202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_1224": {
									"entryPoint": 1143,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@release_1253": {
									"entryPoint": 1030,
									"id": 1253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@release_1288": {
									"entryPoint": 712,
									"id": 1288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@released_1171": {
									"entryPoint": null,
									"id": 1171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@released_1184": {
									"entryPoint": null,
									"id": 1184,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_1029": {
									"entryPoint": 864,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_207": {
									"entryPoint": 1554,
									"id": 207,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendValue_702": {
									"entryPoint": 1764,
									"id": 702,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@start_1140": {
									"entryPoint": 1187,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_1057": {
									"entryPoint": 1300,
									"id": 1057,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vestedAmount_1309": {
									"entryPoint": 677,
									"id": 1309,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vestedAmount_1337": {
									"entryPoint": 883,
									"id": 1337,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint64": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3119:1",
										"nodeType": "YulBlock",
										"src": "0:3119:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "62:123:1",
													"nodeType": "YulBlock",
													"src": "62:123:1",
													"statements": [
														{
															"nativeSrc": "72:29:1",
															"nodeType": "YulAssignment",
															"src": "72:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "94:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "94:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "81:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "81:12:1"
																},
																"nativeSrc": "81:20:1",
																"nodeType": "YulFunctionCall",
																"src": "81:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "72:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "72:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "163:16:1",
																"nodeType": "YulBlock",
																"src": "163:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "172:1:1",
																					"nodeType": "YulLiteral",
																					"src": "172:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "175:1:1",
																					"nodeType": "YulLiteral",
																					"src": "175:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "165:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "165:6:1"
																			},
																			"nativeSrc": "165:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "165:12:1"
																		},
																		"nativeSrc": "165:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "165:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "123:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "123:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "134:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "134:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "141:18:1",
																						"nodeType": "YulLiteral",
																						"src": "141:18:1",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "130:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "130:3:1"
																				},
																				"nativeSrc": "130:30:1",
																				"nodeType": "YulFunctionCall",
																				"src": "130:30:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "120:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "120:2:1"
																		},
																		"nativeSrc": "120:41:1",
																		"nodeType": "YulFunctionCall",
																		"src": "120:41:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nativeSrc": "113:49:1",
																"nodeType": "YulFunctionCall",
																"src": "113:49:1"
															},
															"nativeSrc": "110:69:1",
															"nodeType": "YulIf",
															"src": "110:69:1"
														}
													]
												},
												"name": "abi_decode_uint64",
												"nativeSrc": "14:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "41:6:1",
														"nodeType": "YulTypedName",
														"src": "41:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "52:5:1",
														"nodeType": "YulTypedName",
														"src": "52:5:1",
														"type": ""
													}
												],
												"src": "14:171:1"
											},
											{
												"body": {
													"nativeSrc": "259:115:1",
													"nodeType": "YulBlock",
													"src": "259:115:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "305:16:1",
																"nodeType": "YulBlock",
																"src": "305:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "314:1:1",
																					"nodeType": "YulLiteral",
																					"src": "314:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:1",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "307:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:1"
																			},
																			"nativeSrc": "307:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:1"
																		},
																		"nativeSrc": "307:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "280:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "280:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "289:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "289:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "276:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:1"
																		},
																		"nativeSrc": "276:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "276:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "301:2:1",
																		"nodeType": "YulLiteral",
																		"src": "301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "272:3:1"
																},
																"nativeSrc": "272:32:1",
																"nodeType": "YulFunctionCall",
																"src": "272:32:1"
															},
															"nativeSrc": "269:52:1",
															"nodeType": "YulIf",
															"src": "269:52:1"
														},
														{
															"nativeSrc": "330:38:1",
															"nodeType": "YulAssignment",
															"src": "330:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "358:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "358:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "340:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "340:17:1"
																},
																"nativeSrc": "340:28:1",
																"nodeType": "YulFunctionCall",
																"src": "340:28:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "330:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64",
												"nativeSrc": "190:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "225:9:1",
														"nodeType": "YulTypedName",
														"src": "225:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "236:7:1",
														"nodeType": "YulTypedName",
														"src": "236:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "248:6:1",
														"nodeType": "YulTypedName",
														"src": "248:6:1",
														"type": ""
													}
												],
												"src": "190:184:1"
											},
											{
												"body": {
													"nativeSrc": "480:76:1",
													"nodeType": "YulBlock",
													"src": "480:76:1",
													"statements": [
														{
															"nativeSrc": "490:26:1",
															"nodeType": "YulAssignment",
															"src": "490:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "502:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "502:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "513:2:1",
																		"nodeType": "YulLiteral",
																		"src": "513:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "498:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:1"
																},
																"nativeSrc": "498:18:1",
																"nodeType": "YulFunctionCall",
																"src": "498:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "490:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "532:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "532:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "543:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "543:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "525:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:1"
																},
																"nativeSrc": "525:25:1",
																"nodeType": "YulFunctionCall",
																"src": "525:25:1"
															},
															"nativeSrc": "525:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "525:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "379:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "449:9:1",
														"nodeType": "YulTypedName",
														"src": "449:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "460:6:1",
														"nodeType": "YulTypedName",
														"src": "460:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "471:4:1",
														"nodeType": "YulTypedName",
														"src": "471:4:1",
														"type": ""
													}
												],
												"src": "379:177:1"
											},
											{
												"body": {
													"nativeSrc": "610:124:1",
													"nodeType": "YulBlock",
													"src": "610:124:1",
													"statements": [
														{
															"nativeSrc": "620:29:1",
															"nodeType": "YulAssignment",
															"src": "620:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "642:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "629:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:1"
																},
																"nativeSrc": "629:20:1",
																"nodeType": "YulFunctionCall",
																"src": "629:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "620:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "712:16:1",
																"nodeType": "YulBlock",
																"src": "712:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "721:1:1",
																					"nodeType": "YulLiteral",
																					"src": "721:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:1",
																					"nodeType": "YulLiteral",
																					"src": "724:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "714:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "714:6:1"
																			},
																			"nativeSrc": "714:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "714:12:1"
																		},
																		"nativeSrc": "714:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "714:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "671:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "671:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "682:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "682:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "697:3:1",
																										"nodeType": "YulLiteral",
																										"src": "697:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "702:1:1",
																										"nodeType": "YulLiteral",
																										"src": "702:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "693:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "693:3:1"
																								},
																								"nativeSrc": "693:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "693:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "706:1:1",
																								"nodeType": "YulLiteral",
																								"src": "706:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "689:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "689:3:1"
																						},
																						"nativeSrc": "689:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "689:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "678:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "678:3:1"
																				},
																				"nativeSrc": "678:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "678:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "668:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "668:2:1"
																		},
																		"nativeSrc": "668:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "668:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "661:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "661:6:1"
																},
																"nativeSrc": "661:50:1",
																"nodeType": "YulFunctionCall",
																"src": "661:50:1"
															},
															"nativeSrc": "658:70:1",
															"nodeType": "YulIf",
															"src": "658:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "561:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "589:6:1",
														"nodeType": "YulTypedName",
														"src": "589:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "600:5:1",
														"nodeType": "YulTypedName",
														"src": "600:5:1",
														"type": ""
													}
												],
												"src": "561:173:1"
											},
											{
												"body": {
													"nativeSrc": "809:116:1",
													"nodeType": "YulBlock",
													"src": "809:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "855:16:1",
																"nodeType": "YulBlock",
																"src": "855:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "864:1:1",
																					"nodeType": "YulLiteral",
																					"src": "864:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "867:1:1",
																					"nodeType": "YulLiteral",
																					"src": "867:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "857:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "857:6:1"
																			},
																			"nativeSrc": "857:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "857:12:1"
																		},
																		"nativeSrc": "857:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "857:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "830:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "839:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "839:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "851:2:1",
																		"nodeType": "YulLiteral",
																		"src": "851:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "822:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:1"
																},
																"nativeSrc": "822:32:1",
																"nodeType": "YulFunctionCall",
																"src": "822:32:1"
															},
															"nativeSrc": "819:52:1",
															"nodeType": "YulIf",
															"src": "819:52:1"
														},
														{
															"nativeSrc": "880:39:1",
															"nodeType": "YulAssignment",
															"src": "880:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "909:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "890:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "890:18:1"
																},
																"nativeSrc": "890:29:1",
																"nodeType": "YulFunctionCall",
																"src": "890:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "880:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "880:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "739:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "775:9:1",
														"nodeType": "YulTypedName",
														"src": "775:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "786:7:1",
														"nodeType": "YulTypedName",
														"src": "786:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "798:6:1",
														"nodeType": "YulTypedName",
														"src": "798:6:1",
														"type": ""
													}
												],
												"src": "739:186:1"
											},
											{
												"body": {
													"nativeSrc": "1016:172:1",
													"nodeType": "YulBlock",
													"src": "1016:172:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1062:16:1",
																"nodeType": "YulBlock",
																"src": "1062:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1071:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1071:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1074:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1064:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1064:6:1"
																			},
																			"nativeSrc": "1064:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1064:12:1"
																		},
																		"nativeSrc": "1064:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1064:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1046:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1033:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1033:3:1"
																		},
																		"nativeSrc": "1033:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1033:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1058:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1029:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1029:3:1"
																},
																"nativeSrc": "1029:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1029:32:1"
															},
															"nativeSrc": "1026:52:1",
															"nodeType": "YulIf",
															"src": "1026:52:1"
														},
														{
															"nativeSrc": "1087:39:1",
															"nodeType": "YulAssignment",
															"src": "1087:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1116:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1116:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1097:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1097:18:1"
																},
																"nativeSrc": "1097:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1097:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																}
															]
														},
														{
															"nativeSrc": "1135:47:1",
															"nodeType": "YulAssignment",
															"src": "1135:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1167:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1167:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1178:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1178:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:1"
																		},
																		"nativeSrc": "1163:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "1145:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1145:17:1"
																},
																"nativeSrc": "1145:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1145:37:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1135:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64",
												"nativeSrc": "930:258:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "974:9:1",
														"nodeType": "YulTypedName",
														"src": "974:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "985:7:1",
														"nodeType": "YulTypedName",
														"src": "985:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "997:6:1",
														"nodeType": "YulTypedName",
														"src": "997:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1005:6:1",
														"nodeType": "YulTypedName",
														"src": "1005:6:1",
														"type": ""
													}
												],
												"src": "930:258:1"
											},
											{
												"body": {
													"nativeSrc": "1294:102:1",
													"nodeType": "YulBlock",
													"src": "1294:102:1",
													"statements": [
														{
															"nativeSrc": "1304:26:1",
															"nodeType": "YulAssignment",
															"src": "1304:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1316:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1316:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1327:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1312:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:1"
																},
																"nativeSrc": "1312:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1312:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1304:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1304:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1346:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1346:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1361:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1377:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1377:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1382:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1382:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1373:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1373:3:1"
																						},
																						"nativeSrc": "1373:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1373:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1386:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1386:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1369:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1369:3:1"
																				},
																				"nativeSrc": "1369:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1369:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1357:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:1"
																		},
																		"nativeSrc": "1357:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1357:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1339:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:1"
																},
																"nativeSrc": "1339:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1339:51:1"
															},
															"nativeSrc": "1339:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1339:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1193:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1263:9:1",
														"nodeType": "YulTypedName",
														"src": "1263:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1274:6:1",
														"nodeType": "YulTypedName",
														"src": "1274:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1285:4:1",
														"nodeType": "YulTypedName",
														"src": "1285:4:1",
														"type": ""
													}
												],
												"src": "1193:203:1"
											},
											{
												"body": {
													"nativeSrc": "1433:95:1",
													"nodeType": "YulBlock",
													"src": "1433:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1450:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1457:3:1",
																				"nodeType": "YulLiteral",
																				"src": "1457:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1462:10:1",
																				"nodeType": "YulLiteral",
																				"src": "1462:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1453:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1453:3:1"
																		},
																		"nativeSrc": "1453:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1453:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1443:6:1"
																},
																"nativeSrc": "1443:31:1",
																"nodeType": "YulFunctionCall",
																"src": "1443:31:1"
															},
															"nativeSrc": "1443:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "1443:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1490:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1490:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1493:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1493:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1483:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:1"
																},
																"nativeSrc": "1483:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1483:15:1"
															},
															"nativeSrc": "1483:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1483:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1514:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1514:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1517:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1517:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1507:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:1"
																},
																"nativeSrc": "1507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1507:15:1"
															},
															"nativeSrc": "1507:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1507:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1401:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1401:127:1"
											},
											{
												"body": {
													"nativeSrc": "1581:77:1",
													"nodeType": "YulBlock",
													"src": "1581:77:1",
													"statements": [
														{
															"nativeSrc": "1591:16:1",
															"nodeType": "YulAssignment",
															"src": "1591:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1602:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1605:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1605:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:1"
																},
																"nativeSrc": "1598:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1591:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1630:22:1",
																"nodeType": "YulBlock",
																"src": "1630:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1632:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1632:16:1"
																			},
																			"nativeSrc": "1632:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1632:18:1"
																		},
																		"nativeSrc": "1632:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1632:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1622:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1622:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1625:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1625:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1619:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1619:2:1"
																},
																"nativeSrc": "1619:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1619:10:1"
															},
															"nativeSrc": "1616:36:1",
															"nodeType": "YulIf",
															"src": "1616:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1533:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1564:1:1",
														"nodeType": "YulTypedName",
														"src": "1564:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1567:1:1",
														"nodeType": "YulTypedName",
														"src": "1567:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1573:3:1",
														"nodeType": "YulTypedName",
														"src": "1573:3:1",
														"type": ""
													}
												],
												"src": "1533:125:1"
											},
											{
												"body": {
													"nativeSrc": "1744:103:1",
													"nodeType": "YulBlock",
													"src": "1744:103:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1790:16:1",
																"nodeType": "YulBlock",
																"src": "1790:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1799:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1802:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1802:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1792:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nativeSrc": "1792:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1792:12:1"
																		},
																		"nativeSrc": "1792:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1765:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1765:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1774:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1774:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1761:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1761:3:1"
																		},
																		"nativeSrc": "1761:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1761:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1786:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1786:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:1"
																},
																"nativeSrc": "1757:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1757:32:1"
															},
															"nativeSrc": "1754:52:1",
															"nodeType": "YulIf",
															"src": "1754:52:1"
														},
														{
															"nativeSrc": "1815:26:1",
															"nodeType": "YulAssignment",
															"src": "1815:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1831:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1831:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1825:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1825:5:1"
																},
																"nativeSrc": "1825:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1825:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "1663:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1710:9:1",
														"nodeType": "YulTypedName",
														"src": "1710:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1721:7:1",
														"nodeType": "YulTypedName",
														"src": "1721:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1733:6:1",
														"nodeType": "YulTypedName",
														"src": "1733:6:1",
														"type": ""
													}
												],
												"src": "1663:184:1"
											},
											{
												"body": {
													"nativeSrc": "1901:79:1",
													"nodeType": "YulBlock",
													"src": "1901:79:1",
													"statements": [
														{
															"nativeSrc": "1911:17:1",
															"nodeType": "YulAssignment",
															"src": "1911:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1923:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1923:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1926:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1926:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1919:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1919:3:1"
																},
																"nativeSrc": "1919:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1919:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1911:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1911:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1952:22:1",
																"nodeType": "YulBlock",
																"src": "1952:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1954:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1954:16:1"
																			},
																			"nativeSrc": "1954:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1954:18:1"
																		},
																		"nativeSrc": "1954:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1954:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1943:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1943:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1949:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1949:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1940:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1940:2:1"
																},
																"nativeSrc": "1940:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1940:11:1"
															},
															"nativeSrc": "1937:37:1",
															"nodeType": "YulIf",
															"src": "1937:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1852:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1883:1:1",
														"nodeType": "YulTypedName",
														"src": "1883:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1886:1:1",
														"nodeType": "YulTypedName",
														"src": "1886:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1892:4:1",
														"nodeType": "YulTypedName",
														"src": "1892:4:1",
														"type": ""
													}
												],
												"src": "1852:128:1"
											},
											{
												"body": {
													"nativeSrc": "2037:116:1",
													"nodeType": "YulBlock",
													"src": "2037:116:1",
													"statements": [
														{
															"nativeSrc": "2047:20:1",
															"nodeType": "YulAssignment",
															"src": "2047:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2062:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2062:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2065:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2065:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2058:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2058:3:1"
																},
																"nativeSrc": "2058:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2058:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2047:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2047:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2125:22:1",
																"nodeType": "YulBlock",
																"src": "2125:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2127:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2127:16:1"
																			},
																			"nativeSrc": "2127:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2127:18:1"
																		},
																		"nativeSrc": "2127:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2127:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2096:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "2096:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2089:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2089:6:1"
																				},
																				"nativeSrc": "2089:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2089:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2103:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "2103:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2110:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "2110:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2119:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "2119:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2106:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2106:3:1"
																						},
																						"nativeSrc": "2106:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2106:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2100:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2100:2:1"
																				},
																				"nativeSrc": "2100:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2100:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2086:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2086:2:1"
																		},
																		"nativeSrc": "2086:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2086:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2079:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2079:6:1"
																},
																"nativeSrc": "2079:45:1",
																"nodeType": "YulFunctionCall",
																"src": "2079:45:1"
															},
															"nativeSrc": "2076:71:1",
															"nodeType": "YulIf",
															"src": "2076:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1985:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2016:1:1",
														"nodeType": "YulTypedName",
														"src": "2016:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2019:1:1",
														"nodeType": "YulTypedName",
														"src": "2019:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2025:7:1",
														"nodeType": "YulTypedName",
														"src": "2025:7:1",
														"type": ""
													}
												],
												"src": "1985:168:1"
											},
											{
												"body": {
													"nativeSrc": "2204:171:1",
													"nodeType": "YulBlock",
													"src": "2204:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2235:111:1",
																"nodeType": "YulBlock",
																"src": "2235:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2256:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2256:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2263:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2263:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2268:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2268:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2259:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2259:3:1"
																					},
																					"nativeSrc": "2259:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2259:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2249:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2249:6:1"
																			},
																			"nativeSrc": "2249:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2249:31:1"
																		},
																		"nativeSrc": "2249:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2249:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2300:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2300:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2303:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2303:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2293:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:1"
																			},
																			"nativeSrc": "2293:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2293:15:1"
																		},
																		"nativeSrc": "2293:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2293:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2328:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2331:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2331:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2321:6:1"
																			},
																			"nativeSrc": "2321:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2321:15:1"
																		},
																		"nativeSrc": "2321:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2321:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2224:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2224:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:1"
																},
																"nativeSrc": "2217:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2217:9:1"
															},
															"nativeSrc": "2214:132:1",
															"nodeType": "YulIf",
															"src": "2214:132:1"
														},
														{
															"nativeSrc": "2355:14:1",
															"nodeType": "YulAssignment",
															"src": "2355:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2364:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2364:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2367:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2367:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2360:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2360:3:1"
																},
																"nativeSrc": "2360:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2360:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2355:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2355:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2158:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2189:1:1",
														"nodeType": "YulTypedName",
														"src": "2189:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2192:1:1",
														"nodeType": "YulTypedName",
														"src": "2192:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2198:1:1",
														"nodeType": "YulTypedName",
														"src": "2198:1:1",
														"type": ""
													}
												],
												"src": "2158:217:1"
											},
											{
												"body": {
													"nativeSrc": "2509:145:1",
													"nodeType": "YulBlock",
													"src": "2509:145:1",
													"statements": [
														{
															"nativeSrc": "2519:26:1",
															"nodeType": "YulAssignment",
															"src": "2519:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2531:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2531:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2542:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2542:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2527:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:1"
																},
																"nativeSrc": "2527:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2527:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2519:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2519:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2561:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2561:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2576:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2576:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2592:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2592:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2597:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2597:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2588:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2588:3:1"
																						},
																						"nativeSrc": "2588:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2588:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2601:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2601:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2584:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2584:3:1"
																				},
																				"nativeSrc": "2584:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:1"
																		},
																		"nativeSrc": "2572:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2554:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:1"
																},
																"nativeSrc": "2554:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2554:51:1"
															},
															"nativeSrc": "2554:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2554:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2625:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2625:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2636:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2636:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2621:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2621:3:1"
																		},
																		"nativeSrc": "2621:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2621:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2641:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2641:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2614:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:1"
																},
																"nativeSrc": "2614:34:1",
																"nodeType": "YulFunctionCall",
																"src": "2614:34:1"
															},
															"nativeSrc": "2614:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "2614:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2380:274:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2470:9:1",
														"nodeType": "YulTypedName",
														"src": "2470:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2481:6:1",
														"nodeType": "YulTypedName",
														"src": "2481:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2489:6:1",
														"nodeType": "YulTypedName",
														"src": "2489:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2500:4:1",
														"nodeType": "YulTypedName",
														"src": "2500:4:1",
														"type": ""
													}
												],
												"src": "2380:274:1"
											},
											{
												"body": {
													"nativeSrc": "2788:119:1",
													"nodeType": "YulBlock",
													"src": "2788:119:1",
													"statements": [
														{
															"nativeSrc": "2798:26:1",
															"nodeType": "YulAssignment",
															"src": "2798:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2810:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2810:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2821:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2821:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2806:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:1"
																},
																"nativeSrc": "2806:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2806:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2798:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2798:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2840:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2840:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2851:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2851:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2833:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:1"
																},
																"nativeSrc": "2833:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2833:25:1"
															},
															"nativeSrc": "2833:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "2833:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2878:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2889:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2889:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2874:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:1"
																		},
																		"nativeSrc": "2874:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2874:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2894:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2894:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2867:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:1"
																},
																"nativeSrc": "2867:34:1",
																"nodeType": "YulFunctionCall",
																"src": "2867:34:1"
															},
															"nativeSrc": "2867:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "2867:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2659:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2749:9:1",
														"nodeType": "YulTypedName",
														"src": "2749:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2760:6:1",
														"nodeType": "YulTypedName",
														"src": "2760:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2768:6:1",
														"nodeType": "YulTypedName",
														"src": "2768:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2779:4:1",
														"nodeType": "YulTypedName",
														"src": "2779:4:1",
														"type": ""
													}
												],
												"src": "2659:248:1"
											},
											{
												"body": {
													"nativeSrc": "3103:14:1",
													"nodeType": "YulBlock",
													"src": "3103:14:1",
													"statements": [
														{
															"nativeSrc": "3105:10:1",
															"nodeType": "YulAssignment",
															"src": "3105:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3112:3:1",
																"nodeType": "YulIdentifier",
																"src": "3112:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3105:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3105:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2912:205:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3087:3:1",
														"nodeType": "YulTypedName",
														"src": "3087:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3095:3:1",
														"nodeType": "YulTypedName",
														"src": "3095:3:1",
														"type": ""
													}
												],
												"src": "2912:205:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1102": [
									{
										"length": 32,
										"start": 1198
									}
								],
								"1104": [
									{
										"length": 32,
										"start": 295
									},
									{
										"length": 32,
										"start": 1236
									},
									{
										"length": 32,
										"start": 1458
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100dc575f3560e01c8063961325211161007c578063be9a655511610057578063be9a65551461024a578063efbe1c1c1461025e578063f2fde38b14610272578063fbccedae14610291575f80fd5b806396132521146101e35780639852595c146101f7578063a3f8eace1461022b575f80fd5b8063715018a6116100b7578063715018a614610176578063810ec23b1461018a57806386d1a69f146101a95780638da5cb5b146101bd575f80fd5b80630a17b06b146100e75780630fb5a6b4146101195780631916558714610155575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b50610106610101366004610826565b6102a5565b6040519081526020015b60405180910390f35b348015610124575f80fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610106565b348015610160575f80fd5b5061017461016f366004610855565b6102c8565b005b348015610181575f80fd5b50610174610360565b348015610195575f80fd5b506101066101a436600461086e565b610373565b3480156101b4575f80fd5b50610174610406565b3480156101c8575f80fd5b505f546040516001600160a01b039091168152602001610110565b3480156101ee575f80fd5b50600154610106565b348015610202575f80fd5b50610106610211366004610855565b6001600160a01b03165f9081526002602052604090205490565b348015610236575f80fd5b50610106610245366004610855565b610477565b348015610255575f80fd5b506101066104a3565b348015610269575f80fd5b506101066104d1565b34801561027d575f80fd5b5061017461028c366004610855565b610514565b34801561029c575f80fd5b50610106610553565b5f6102c26102b260015490565b6102bc90476108b3565b83610570565b92915050565b5f6102d282610477565b6001600160a01b0383165f908152600260205260408120805492935083929091906102fe9084906108b3565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a261035c826103565f546001600160a01b031690565b83610612565b5050565b610368610669565b6103715f610695565b565b6001600160a01b0382165f908152600260205260408120546103ff906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103d1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f591906108c6565b6102bc91906108b3565b9392505050565b5f61040f610553565b90508060015f82825461042291906108b3565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161047461046e5f546001600160a01b031690565b826106e4565b50565b6001600160a01b0381165f908152600260205260408120546104998342610373565b6102c291906108dd565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b5f7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105056104a3565b61050f91906108b3565b905090565b61051c610669565b6001600160a01b03811661054a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61047481610695565b5f61055d60015490565b610566426102a5565b61050f91906108dd565b5f6105796104a3565b8267ffffffffffffffff16101561059157505f6102c2565b6105996104d1565b8267ffffffffffffffff16106105b05750816102c2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105e36104a3565b6105f79067ffffffffffffffff85166108dd565b61060190856108f0565b61060b9190610907565b90506102c2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610664908490610776565b505050565b5f546001600160a01b031633146103715760405163118cdaa760e01b8152336004820152602401610541565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8047101561070e5760405163cf47918160e01b815247600482015260248101829052604401610541565b5f80836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610758576040519150601f19603f3d011682016040523d82523d5f602084013e61075d565b606091505b50915091508161077057610770816107e2565b50505050565b5f8060205f8451602086015f885af180610795576040513d5f823e3d81fd5b50505f513d915081156107ac5780600114156107b9565b6001600160a01b0384163b155b1561077057604051635274afe760e01b81526001600160a01b0385166004820152602401610541565b8051156107f157805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b803567ffffffffffffffff81168114610821575f80fd5b919050565b5f60208284031215610836575f80fd5b6103ff8261080a565b80356001600160a01b0381168114610821575f80fd5b5f60208284031215610865575f80fd5b6103ff8261083f565b5f806040838503121561087f575f80fd5b6108888361083f565b91506108966020840161080a565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102c2576102c261089f565b5f602082840312156108d6575f80fd5b5051919050565b818103818111156102c2576102c261089f565b80820281158282048414176102c2576102c261089f565b5f8261092157634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212201ae47f49ce7d9e5b3c526304a294f595e66db3648f5ffd040bba355ae604fa1364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xE3 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x360 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x553 JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x2B2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BC SWAP1 SELFBALANCE PUSH2 0x8B3 JUMP JUMPDEST DUP4 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2 DUP3 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x35C DUP3 PUSH2 0x356 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x612 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x371 PUSH0 PUSH2 0x695 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x40F PUSH2 0x553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x474 PUSH2 0x46E PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x499 DUP4 TIMESTAMP PUSH2 0x373 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x505 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x695 JUMP JUMPDEST PUSH0 PUSH2 0x55D PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x566 TIMESTAMP PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH2 0x579 PUSH2 0x4A3 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x591 JUMPI POP PUSH0 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x599 PUSH2 0x4D1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x5B0 JUMPI POP DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5E3 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5F7 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x664 SWAP1 DUP5 SWAP1 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7AC JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x7F1 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x80A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP4 PUSH2 0x83F JUMP JUMPDEST SWAP2 POP PUSH2 0x896 PUSH1 0x20 DUP5 ADD PUSH2 0x80A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x921 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE4 PUSH32 0x49CE7D9E5B3C526304A294F595E66DB3648F5FFD040BBA355AE604FA1364736F PUSH13 0x63430008180033000000000000 ",
							"sourceMap": "31284:4001:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34228:165;;;;;;;;;;-1:-1:-1;34228:165:0;;;;;:::i;:::-;;:::i;:::-;;;525:25:1;;;513:2;498:18;34228:165:0;;;;;;;;32275:91;;;;;;;;;;-1:-1:-1;32350:9:0;32343:16;;32275:91;;33842:246;;;;;;;;;;-1:-1:-1;33842:246:0;;;;;:::i;:::-;;:::i;:::-;;28639:101;;;;;;;;;;;;;:::i;34534:202::-;;;;;;;;;;-1:-1:-1;34534:202:0;;;;;:::i;:::-;;:::i;33520:198::-;;;;;;;;;;;;;:::i;27984:85::-;;;;;;;;;;-1:-1:-1;28030:7:0;28056:6;27984:85;;-1:-1:-1;;;;;28056:6:0;;;1339:51:1;;1327:2;1312:18;27984:85:0;1193:203:1;32592:91:0;;;;;;;;;;-1:-1:-1;32667:9:0;;32592:91;;32750:116;;;;;;;;;;-1:-1:-1;32750:116:0;;;;;:::i;:::-;-1:-1:-1;;;;;32838:21:0;32812:7;32838:21;;;:14;:21;;;;;;;32750:116;33223:159;;;;;;;;;;-1:-1:-1;33223:159:0;;;;;:::i;:::-;;:::i;32123:85::-;;;;;;;;;;;;;:::i;32430:97::-;;;;;;;;;;;;;:::i;28889:215::-;;;;;;;;;;-1:-1:-1;28889:215:0;;;;;:::i;:::-;;:::i;32941:134::-;;;;;;;;;;;;;:::i;34228:165::-;34297:7;34323:63;34364:10;32667:9;;;32592:91;34364:10;34340:34;;:21;:34;:::i;:::-;34376:9;34323:16;:63::i;:::-;34316:70;34228:165;-1:-1:-1;;34228:165:0:o;33842:246::-;33899:14;33916:17;33927:5;33916:10;:17::i;:::-;-1:-1:-1;;;;;33943:21:0;;;;;;:14;:21;;;;;:31;;33899:34;;-1:-1:-1;33899:34:0;;33943:21;;;:31;;33899:34;;33943:31;:::i;:::-;;;;-1:-1:-1;;33989:28:0;;525:25:1;;;-1:-1:-1;;;;;33989:28:0;;;;;513:2:1;498:18;33989:28:0;;;;;;;34027:54;34057:5;34065:7;28030;28056:6;-1:-1:-1;;;;;28056:6:0;;27984:85;34065:7;34074:6;34027:22;:54::i;:::-;33889:199;33842:246;:::o;28639:101::-;27877:13;:11;:13::i;:::-;28703:30:::1;28730:1;28703:18;:30::i;:::-;28639:101::o:0;34534:202::-;-1:-1:-1;;;;;32838:21:0;;34618:7;32838:21;;;:14;:21;;;;;;34644:85;;34661:38;;-1:-1:-1;;;34661:38:0;;34693:4;34661:38;;;1339:51:1;-1:-1:-1;;;;;34661:23:0;;;;;1312:18:1;;34661:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;34644:85::-;34637:92;34534:202;-1:-1:-1;;;34534:202:0:o;33520:198::-;33564:14;33581:12;:10;:12::i;:::-;33564:29;;33616:6;33603:9;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;33637:21:0;;525:25:1;;;33637:21:0;;513:2:1;498:18;33637:21:0;;;;;;;33668:43;33694:7;28030;28056:6;-1:-1:-1;;;;;28056:6:0;;27984:85;33694:7;33704:6;33668:17;:43::i;:::-;33554:164;33520:198::o;33223:159::-;-1:-1:-1;;;;;32838:21:0;;33287:7;32838:21;;;:14;:21;;;;;;33313:44;33326:5;33340:15;33313:12;:44::i;:::-;:62;;;;:::i;32123:85::-;32188:13;32195:6;32188:13;;32123:85::o;32430:97::-;32474:7;32350:9;32343:16;;32500:7;:5;:7::i;:::-;:20;;;;:::i;:::-;32493:27;;32430:97;:::o;28889:215::-;27877:13;:11;:13::i;:::-;-1:-1:-1;;;;;28973:22:0;::::1;28969:91;;29018:31;::::0;-1:-1:-1;;;29018:31:0;;29046:1:::1;29018:31;::::0;::::1;1339:51:1::0;1312:18;;29018:31:0::1;;;;;;;;28969:91;29069:28;29088:8;29069:18;:28::i;32941:134::-:0;32992:7;33058:10;32667:9;;;32592:91;33058:10;33018:37;33038:15;33018:12;:37::i;:::-;:50;;;;:::i;34931:352::-;35031:7;35066;:5;:7::i;:::-;35054:9;:19;;;35050:227;;;-1:-1:-1;35096:1:0;35089:8;;35050:227;35131:5;:3;:5::i;:::-;35118:9;:18;;;35114:163;;-1:-1:-1;35159:15:0;35152:22;;35114:163;32350:9;32343:16;;35244:7;:5;:7::i;:::-;35232:19;;;;;;:::i;:::-;35213:39;;:15;:39;:::i;:::-;35212:54;;;;:::i;:::-;35205:61;;;;9630:160;9739:43;;;-1:-1:-1;;;;;2572:32:1;;9739:43:0;;;2554:51:1;2621:18;;;;2614:34;;;9739:43:0;;;;;;;;;;2527:18:1;;;;9739:43:0;;;;;;;;-1:-1:-1;;;;;9739:43:0;-1:-1:-1;;;9739:43:0;;;9712:71;;9732:5;;9712:19;:71::i;:::-;9630:160;;;:::o;28142:162::-;28030:7;28056:6;-1:-1:-1;;;;;28056:6:0;26141:10;28201:23;28197:101;;28247:40;;-1:-1:-1;;;28247:40:0;;26141:10;28247:40;;;1339:51:1;1312:18;;28247:40:0;1193:203:1;29258:187:0;29331:16;29350:6;;-1:-1:-1;;;;;29366:17:0;;;-1:-1:-1;;;;;;29366:17:0;;;;;;29398:40;;29350:6;;;;;;;29398:40;;29331:16;29398:40;29321:124;29258:187;:::o;20678:365::-;20787:6;20763:21;:30;20759:125;;;20816:57;;-1:-1:-1;;;20816:57:0;;20843:21;20816:57;;;2833:25:1;2874:18;;;2867:34;;;2806:18;;20816:57:0;2659:248:1;20759:125:0;20895:12;20909:23;20936:9;-1:-1:-1;;;;;20936:14:0;20958:6;20936:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20894:75;;;;20984:7;20979:58;;21007:19;21015:10;21007:7;:19::i;:::-;20749:294;;20678:365;;:::o;16781:720::-;16861:18;16889:19;17027:4;17024:1;17017:4;17011:11;17004:4;16998;16994:15;16991:1;16984:5;16977;16972:60;17084:7;17074:176;;17128:4;17122:11;17173:16;17170:1;17165:3;17150:40;17219:16;17214:3;17207:29;17074:176;-1:-1:-1;;17327:1:0;17321:8;17277:16;;-1:-1:-1;17353:15:0;;:68;;17405:11;17420:1;17405:16;;17353:68;;;-1:-1:-1;;;;;17371:26:0;;;:31;17353:68;17349:146;;;17444:40;;-1:-1:-1;;;17444:40:0;;-1:-1:-1;;;;;1357:32:1;;17444:40:0;;;1339:51:1;1312:18;;17444:40:0;1193:203:1;24947:434:0;25078:17;;:21;25074:301;;25282:10;25276:17;25269:4;25257:10;25253:21;25246:48;25074:301;25345:19;;-1:-1:-1;;;25345:19:0;;;;;;;;;;;14:171:1;81:20;;141:18;130:30;;120:41;;110:69;;175:1;172;165:12;110:69;14:171;;;:::o;190:184::-;248:6;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;340:28;358:9;340:28;:::i;561:173::-;629:20;;-1:-1:-1;;;;;678:31:1;;668:42;;658:70;;724:1;721;714:12;739:186;798:6;851:2;839:9;830:7;826:23;822:32;819:52;;;867:1;864;857:12;819:52;890:29;909:9;890:29;:::i;930:258::-;997:6;1005;1058:2;1046:9;1037:7;1033:23;1029:32;1026:52;;;1074:1;1071;1064:12;1026:52;1097:29;1116:9;1097:29;:::i;:::-;1087:39;;1145:37;1178:2;1167:9;1163:18;1145:37;:::i;:::-;1135:47;;930:258;;;;;:::o;1401:127::-;1462:10;1457:3;1453:20;1450:1;1443:31;1493:4;1490:1;1483:15;1517:4;1514:1;1507:15;1533:125;1598:9;;;1619:10;;;1616:36;;;1632:18;;:::i;1663:184::-;1733:6;1786:2;1774:9;1765:7;1761:23;1757:32;1754:52;;;1802:1;1799;1792:12;1754:52;-1:-1:-1;1825:16:1;;1663:184;-1:-1:-1;1663:184:1:o;1852:128::-;1919:9;;;1940:11;;;1937:37;;;1954:18;;:::i;1985:168::-;2058:9;;;2089;;2106:15;;;2100:22;;2086:37;2076:71;;2127:18;;:::i;2158:217::-;2198:1;2224;2214:132;;2268:10;2263:3;2259:20;2256:1;2249:31;2303:4;2300:1;2293:15;2331:4;2328:1;2321:15;2214:132;-1:-1:-1;2360:9:1;;2158:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "479200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"duration()": "infinite",
								"end()": "infinite",
								"owner()": "2388",
								"releasable()": "infinite",
								"releasable(address)": "infinite",
								"release()": "infinite",
								"release(address)": "infinite",
								"released()": "2303",
								"released(address)": "2568",
								"renounceOwnership()": "infinite",
								"start()": "infinite",
								"transferOwnership(address)": "28395",
								"vestedAmount(address,uint64)": "infinite",
								"vestedAmount(uint64)": "infinite"
							},
							"internal": {
								"_vestingSchedule(uint256,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31756,
									"end": 31942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31756,
									"end": 31942,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31852,
									"end": 31863,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27619,
									"end": 27645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27619,
									"end": 27645,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27615,
									"end": 27710,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 27615,
									"end": 27710,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27696,
									"end": 27697,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 801,
									"end": 852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 774,
									"end": 792,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27668,
									"end": 27699,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27615,
									"end": 27710,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 27615,
									"end": 27710,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27719,
									"end": 27751,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 27738,
									"end": 27750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27719,
									"end": 27737,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 27719,
									"end": 27751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27719,
									"end": 27751,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 27719,
									"end": 27751,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 31875,
									"end": 31898,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31875,
									"end": 31898,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31875,
									"end": 31898,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31875,
									"end": 31898,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 31875,
									"end": 31898,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31908,
									"end": 31935,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31908,
									"end": 31935,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 31908,
									"end": 31935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29258,
									"end": 29445,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 29258,
									"end": 29445,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29331,
									"end": 29347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 29366,
									"end": 29383,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29350,
									"end": 29356,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29331,
									"end": 29347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29398,
									"end": 29438,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 29321,
									"end": 29445,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29258,
									"end": 29445,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29258,
									"end": 29445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 189,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 14,
									"end": 189,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 105,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 105,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 134,
									"end": 164,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 134,
									"end": 164,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 124,
									"end": 165,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 124,
									"end": 165,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 114,
									"end": 183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 179,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 177,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 169,
									"end": 181,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 114,
									"end": 183,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 194,
									"end": 650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 280,
									"end": 286,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 294,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 296,
									"end": 302,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 351,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 337,
									"end": 346,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 328,
									"end": 335,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 324,
									"end": 347,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 320,
									"end": 352,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 317,
									"end": 369,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 317,
									"end": 369,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 365,
									"end": 366,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 363,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 355,
									"end": 367,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 317,
									"end": 369,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 391,
									"end": 407,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 391,
									"end": 407,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 436,
									"end": 467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 436,
									"end": 467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 426,
									"end": 468,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 426,
									"end": 468,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 416,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 480,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 472,
									"end": 484,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 416,
									"end": 486,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 505,
									"end": 510,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 558,
									"end": 576,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 558,
									"end": 576,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 529,
									"end": 577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 529,
									"end": 577,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 529,
									"end": 577,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 519,
									"end": 577,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 577,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 629,
									"end": 638,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 625,
									"end": 643,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 596,
									"end": 644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 596,
									"end": 644,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 596,
									"end": 644,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 586,
									"end": 644,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 644,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 655,
									"end": 858,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 655,
									"end": 858,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1104"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1102"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31284,
									"end": 35285,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ae47f49ce7d9e5b3c526304a294f595e66db3648f5ffd040bba355ae604fa1364736f6c63430008180033",
									".code": [
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "96132521"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "EFBE1C1C"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "FBCCEDAE"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "96132521"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "9852595C"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "A3F8EACE"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "810EC23B"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "86D1A69F"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "A17B06B"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "FB5A6B4"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "19165587"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 35285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34228,
											"end": 34393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 34228,
											"end": 34393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32350,
											"end": 32359,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1104"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32275,
											"end": 32366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 33842,
											"end": 34088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 33842,
											"end": 34088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28639,
											"end": 28740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34534,
											"end": 34736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34534,
											"end": 34736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33520,
											"end": 33718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28030,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 32750,
											"end": 32866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32812,
											"end": 32819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32852,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32866,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 33223,
											"end": 33382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33223,
											"end": 33382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32123,
											"end": 32208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32430,
											"end": 32527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28889,
											"end": 29104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28889,
											"end": 29104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 32941,
											"end": 33075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34297,
											"end": 34304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34323,
											"end": 34386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 34364,
											"end": 34374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34364,
											"end": 34374,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34364,
											"end": 34374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34340,
											"end": 34361,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 34340,
											"end": 34374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34340,
											"end": 34374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34376,
											"end": 34385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34323,
											"end": 34339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 34323,
											"end": 34386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34323,
											"end": 34386,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 34323,
											"end": 34386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34386,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34228,
											"end": 34393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34228,
											"end": 34393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33916,
											"end": 33933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 33927,
											"end": 33932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33916,
											"end": 33933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33933,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 33916,
											"end": 33933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33957,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33899,
											"end": 33933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33943,
											"end": 33974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33943,
											"end": 33974,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "PUSH",
											"source": 0,
											"value": "C0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34017,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 34027,
											"end": 34081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 34057,
											"end": 34062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34065,
											"end": 34072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28030,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34065,
											"end": 34072,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 34065,
											"end": 34072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34074,
											"end": 34080,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34027,
											"end": 34049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 34027,
											"end": 34081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34027,
											"end": 34081,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 34027,
											"end": 34081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33889,
											"end": 34088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33842,
											"end": 34088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28639,
											"end": 28740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27877,
											"end": 27888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 27877,
											"end": 27890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28703,
											"end": 28733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28730,
											"end": 28731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28703,
											"end": 28721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28703,
											"end": 28733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28703,
											"end": 28733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28703,
											"end": 28733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34618,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32852,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34644,
											"end": 34729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 34644,
											"end": 34729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34693,
											"end": 34697,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 34661,
											"end": 34684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 34661,
											"end": 34699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 34661,
											"end": 34699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34661,
											"end": 34717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 34661,
											"end": 34717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34644,
											"end": 34729,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 34644,
											"end": 34729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34729,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34534,
											"end": 34736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34534,
											"end": 34736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33520,
											"end": 33718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33581,
											"end": 33593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 33581,
											"end": 33591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 33581,
											"end": 33593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33581,
											"end": 33593,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 33581,
											"end": 33593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33616,
											"end": 33622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33603,
											"end": 33612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33603,
											"end": 33622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33603,
											"end": 33622,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "PUSH",
											"source": 0,
											"value": "DA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B"
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33637,
											"end": 33658,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 33668,
											"end": 33711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 33694,
											"end": 33701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28030,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27984,
											"end": 28069,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33694,
											"end": 33701,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 33694,
											"end": 33701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33704,
											"end": 33710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33668,
											"end": 33685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33668,
											"end": 33711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33668,
											"end": 33711,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 33668,
											"end": 33711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33554,
											"end": 33718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33520,
											"end": 33718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33223,
											"end": 33382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33287,
											"end": 33294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32852,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32838,
											"end": 32859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33326,
											"end": 33331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33340,
											"end": 33355,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 33313,
											"end": 33357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33357,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33313,
											"end": 33357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 33313,
											"end": 33375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33313,
											"end": 33375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33313,
											"end": 33375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32123,
											"end": 32208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32188,
											"end": 32201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32195,
											"end": 32201,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1102"
										},
										{
											"begin": 32188,
											"end": 32201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32188,
											"end": 32201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32123,
											"end": 32208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32474,
											"end": 32481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32350,
											"end": 32359,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1104"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32500,
											"end": 32505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32500,
											"end": 32507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32507,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32500,
											"end": 32507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32500,
											"end": 32520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32500,
											"end": 32520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32493,
											"end": 32520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32430,
											"end": 32527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28889,
											"end": 29104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27877,
											"end": 27888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 27877,
											"end": 27890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27877,
											"end": 27890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28973,
											"end": 28995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28973,
											"end": 28995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28969,
											"end": 29060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28969,
											"end": 29060,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29018,
											"end": 29049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29018,
											"end": 29049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29046,
											"end": 29047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29018,
											"end": 29049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29018,
											"end": 29049,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28969,
											"end": 29060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28969,
											"end": 29060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29069,
											"end": 29097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29088,
											"end": 29096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29069,
											"end": 29087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29069,
											"end": 29097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 32941,
											"end": 33075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33058,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32667,
											"end": 32676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32592,
											"end": 32683,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33058,
											"end": 33068,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 33058,
											"end": 33068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 33038,
											"end": 33053,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 33018,
											"end": 33055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33055,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 33018,
											"end": 33055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 33018,
											"end": 33068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33018,
											"end": 33068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34931,
											"end": 35283,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 34931,
											"end": 35283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35031,
											"end": 35038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35066,
											"end": 35073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 35066,
											"end": 35071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 35066,
											"end": 35073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35066,
											"end": 35073,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 35066,
											"end": 35073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35054,
											"end": 35073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35073,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35096,
											"end": 35097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35089,
											"end": 35097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35089,
											"end": 35097,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 35050,
											"end": 35277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35131,
											"end": 35136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 35131,
											"end": 35134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35131,
											"end": 35136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35131,
											"end": 35136,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 35131,
											"end": 35136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35118,
											"end": 35127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35118,
											"end": 35136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35118,
											"end": 35136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35118,
											"end": 35136,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 35114,
											"end": 35277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35159,
											"end": 35174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35152,
											"end": 35174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35152,
											"end": 35174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35277,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 35114,
											"end": 35277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32359,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1104"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 35244,
											"end": 35249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 35244,
											"end": 35251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35244,
											"end": 35251,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 35244,
											"end": 35251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 35232,
											"end": 35251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 35232,
											"end": 35251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35213,
											"end": 35228,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 35213,
											"end": 35252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 35213,
											"end": 35252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 35212,
											"end": 35266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 35212,
											"end": 35266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35205,
											"end": 35266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35205,
											"end": 35266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35205,
											"end": 35266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35205,
											"end": 35266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2604,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 9712,
											"end": 9783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9732,
											"end": 9737,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9732,
											"end": 9737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 9712,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9783,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 9712,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9630,
											"end": 9790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28142,
											"end": 28304,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28142,
											"end": 28304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26141,
											"end": 26151,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28197,
											"end": 28298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26141,
											"end": 26151,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28247,
											"end": 28287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29258,
											"end": 29445,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29258,
											"end": 29445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29331,
											"end": 29347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29366,
											"end": 29383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29331,
											"end": 29347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29438,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29321,
											"end": 29445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29258,
											"end": 29445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29258,
											"end": 29445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20678,
											"end": 21043,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20678,
											"end": 21043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20787,
											"end": 20793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20763,
											"end": 20784,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20763,
											"end": 20793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF479181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20843,
											"end": 20864,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20816,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2659,
											"end": 2907,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 20759,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20895,
											"end": 20907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20909,
											"end": 20932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20936,
											"end": 20950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20958,
											"end": 20964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20894,
											"end": 20969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20984,
											"end": 20991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20979,
											"end": 21037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20979,
											"end": 21037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21015,
											"end": 21025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 21007,
											"end": 21026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21007,
											"end": 21026,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 21007,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20749,
											"end": 21043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20749,
											"end": 21043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20678,
											"end": 21043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20678,
											"end": 21043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20678,
											"end": 21043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 17501,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 16781,
											"end": 17501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16889,
											"end": 16908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17024,
											"end": 17025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17017,
											"end": 17021,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17011,
											"end": 17022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 17008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16998,
											"end": 17002,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16994,
											"end": 17009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16991,
											"end": 16992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 16989,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16977,
											"end": 16982,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16972,
											"end": 17032,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17084,
											"end": 17091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 17074,
											"end": 17250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17122,
											"end": 17133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17173,
											"end": 17189,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17170,
											"end": 17171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17165,
											"end": 17168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17150,
											"end": 17190,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17219,
											"end": 17235,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17250,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 17074,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17327,
											"end": 17328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17321,
											"end": 17329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17277,
											"end": 17293,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17277,
											"end": 17293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17353,
											"end": 17368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17405,
											"end": 17416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17420,
											"end": 17421,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17405,
											"end": 17421,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17405,
											"end": 17421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17371,
											"end": 17397,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17397,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 17353,
											"end": 17421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17349,
											"end": 17495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17349,
											"end": 17495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 17349,
											"end": 17495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24947,
											"end": 25381,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 24947,
											"end": 25381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25078,
											"end": 25095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25078,
											"end": 25095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25078,
											"end": 25099,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25074,
											"end": 25375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25074,
											"end": 25375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25282,
											"end": 25292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25276,
											"end": 25293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25269,
											"end": 25273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25257,
											"end": 25267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25253,
											"end": 25274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25294,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25074,
											"end": 25375,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25074,
											"end": 25375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 185,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14,
											"end": 185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 81,
											"end": 101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 81,
											"end": 101,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 130,
											"end": 160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 130,
											"end": 160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 120,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 120,
											"end": 161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 110,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 175,
											"end": 176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 177,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 110,
											"end": 179,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 190,
											"end": 374,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 190,
											"end": 374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 248,
											"end": 254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 280,
											"end": 287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 276,
											"end": 299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 272,
											"end": 304,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 269,
											"end": 321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 269,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 269,
											"end": 321,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 358,
											"end": 367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 340,
											"end": 368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 561,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 678,
											"end": 709,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 668,
											"end": 710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 710,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 658,
											"end": 728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 714,
											"end": 726,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 739,
											"end": 925,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 830,
											"end": 837,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 826,
											"end": 849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 822,
											"end": 854,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 819,
											"end": 871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 819,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 819,
											"end": 871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 867,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 819,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 819,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 890,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 909,
											"end": 918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 890,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1076,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1097,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1176,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1145,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1528,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1401,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1453,
											"end": 1473,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1497,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1483,
											"end": 1498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1514,
											"end": 1515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 1658,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1533,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1632,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1772,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1789,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1663,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1980,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1852,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1954,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1985,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2122,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2127,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2158,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2259,
											"end": 2279,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2307,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2300,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SpageroTokenVesting_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"duration()": "0fb5a6b4",
							"end()": "efbe1c1c",
							"owner()": "8da5cb5b",
							"releasable()": "fbccedae",
							"releasable(address)": "a3f8eace",
							"release()": "86d1a69f",
							"release(address)": "19165587",
							"released()": "96132521",
							"released(address)": "9852595c",
							"renounceOwnership()": "715018a6",
							"start()": "be9a6555",
							"transferOwnership(address)": "f2fde38b",
							"vestedAmount(address,uint64)": "810ec23b",
							"vestedAmount(uint64)": "0a17b06b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A vesting wallet is an ownable contract that can receive native currency and ERC-20 tokens, and release these assets to the wallet owner, also referred to as \\\"beneficiary\\\", according to a vesting schedule. Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable. By setting the duration to 0, one can configure this contract to behave like an asset timelock that holds tokens for a beneficiary until a specified time. NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens. Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the near future. NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended. NOTE: Chains with support for native ERC20s may allow the vesting wallet to withdraw the underlying asset as both an ERC20 and as native currency. For example, if chain C supports token A and the wallet gets deposited 100 A, then at 50% of the vesting period, the beneficiary can withdraw 50 A as ERC20 and 25 A as native currency (totaling 75 A). Consider disabling one of the withdrawal methods.\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the beneficiary (owner), the start timestamp and the vesting duration (in seconds) of the vesting wallet.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an {IERC20} contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting_flattened.sol\":\"VestingWallet\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroTokenVesting_flattened.sol\":{\"keccak256\":\"0xe8731d59ef94208f5fd5f205ac90a136ae3899cbd79bb66f218554a0129402b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eae95dc933baa584138135c118c31dc357c23fa618df06a76794cf027a2aa1d\",\"dweb:/ipfs/QmSNcGcX6kVjSrLUA1aKioNd82LYZkM3LwFtxMzHyCtKPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 939,
								"contract": "SpageroTokenVesting_flattened.sol:VestingWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1096,
								"contract": "SpageroTokenVesting_flattened.sol:VestingWallet",
								"label": "_released",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1100,
								"contract": "SpageroTokenVesting_flattened.sol:VestingWallet",
								"label": "_erc20Released",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SpageroTokenVesting_flattened.sol": {
				"ast": {
					"absolutePath": "SpageroTokenVesting_flattened.sol",
					"exportedSymbols": {
						"Address": [
							904
						],
						"Context": [
							933
						],
						"Errors": [
							647
						],
						"IERC1363": [
							167
						],
						"IERC165": [
							89
						],
						"IERC20": [
							77
						],
						"Ownable": [
							1078
						],
						"SafeERC20": [
							626
						],
						"SpageroTokenVesting": [
							1397
						],
						"VestingWallet": [
							1378
						]
					},
					"id": 1398,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "164:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "191:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "273:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "286:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "455:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "464:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "502:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "486:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "514:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "506:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:57:0"
									},
									"src": "449:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "527:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "686:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "695:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "734:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "718:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "751:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "743:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:63:0"
									},
									"src": "680:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "764:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "843:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:9:0"
									},
									"scope": 77,
									"src": "834:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "895:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "998:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1030:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:9:0"
									},
									"scope": 77,
									"src": "971:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1045:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1272:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1289:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1281:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1326:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1326:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:6:0"
									},
									"scope": 77,
									"src": "1263:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1338:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1616:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1649:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1641:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:0"
									},
									"scope": 77,
									"src": "1607:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1696:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2377:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2410:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2402:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:6:0"
									},
									"scope": 77,
									"src": "2368:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2447:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2758:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2785:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2805:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2797:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:0"
									},
									"scope": 77,
									"src": "2749:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "263:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2970:25:0"
						},
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "3148:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "3175:280:0",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC165",
							"nameLocation": "3466:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3480:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3834:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3859:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3852:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 82,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3852:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3851:20:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3895:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3895:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:6:0"
									},
									"scope": 89,
									"src": "3825:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "3456:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 90,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "4037:25:0"
						},
						{
							"id": 91,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "4199:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 93,
										"name": "IERC20",
										"nameLocations": [
											"4607:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "4607:6:0"
									},
									"id": 94,
									"nodeType": "InheritanceSpecifier",
									"src": "4607:6:0"
								},
								{
									"baseName": {
										"id": 95,
										"name": "IERC165",
										"nameLocations": [
											"4615:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "4615:7:0"
									},
									"id": 96,
									"nodeType": "InheritanceSpecifier",
									"src": "4615:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "4227:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167,
								89,
								77
							],
							"name": "IERC1363",
							"nameLocation": "4595:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "5165:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "5549:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5573:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5565:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5585:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5577:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5564:27:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5610:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5610:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5609:6:0"
									},
									"scope": 167,
									"src": "5540:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5622:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "6089:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6113:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "6105:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6125:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "6117:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6147:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "6132:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6132:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6104:48:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "6171:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6171:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6170:6:0"
									},
									"scope": 167,
									"src": "6080:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "6183:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "6650:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "6670:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6692:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "6684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6704:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "6696:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6669:41:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "6729:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6729:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:6:0"
									},
									"scope": 167,
									"src": "6641:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "6741:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "7291:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7319:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7311:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7333:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7325:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7345:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7337:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7367:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7352:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7352:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7310:62:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7390:6:0"
									},
									"scope": 167,
									"src": "7282:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "7403:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "7807:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "7822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7847:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "7839:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7821:32:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "7872:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7871:6:0"
									},
									"scope": 167,
									"src": "7798:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "7884:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "8376:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "8391:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8416:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "8408:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "8423:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8423:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8390:53:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "8462:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8462:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8461:6:0"
									},
									"scope": 167,
									"src": "8367:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "4585:3885:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "8622:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "8650:458:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 626,
							"linearizedBaseContracts": [
								626
							],
							"name": "SafeERC20",
							"nameLocation": "9117:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "9133:65:0",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 174,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "9209:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "9234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9233:15:0"
									},
									"src": "9203:46:0"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "9255:71:0",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 183,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "9337:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9378:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "9370:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "9395:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "9387:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "9421:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "9413:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9369:70:0"
									},
									"src": "9331:109:0"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "9702:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 195,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "9732:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 198,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "9754:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9760:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "9754:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 200,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "9771:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 201,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "9775:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 202,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9770:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 196,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9739:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9743:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "9739:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9739:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 194,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9712:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9712:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "9712:71:0"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "9446:179:0",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "9639:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9659:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "9652:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 185,
														"name": "IERC20",
														"nameLocations": [
															"9652:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "9652:6:0"
													},
													"referencedDeclaration": 77,
													"src": "9652:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9674:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "9666:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9686:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "9678:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9651:41:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9702:0:0"
									},
									"scope": 626,
									"src": "9630:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "10119:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "10149:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 224,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "10171:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10177:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "10171:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 226,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "10192:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 227,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "10198:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 228,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "10202:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 229,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10191:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 222,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10156:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10160:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "10156:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10156:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 220,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "10129:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10129:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "10129:81:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "9796:228:0",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "10038:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "10055:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "IERC20",
														"nameLocations": [
															"10055:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "10055:6:0"
													},
													"referencedDeclaration": 77,
													"src": "10055:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "10069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10091:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "10083:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10103:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "10095:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10054:55:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10119:0:0"
									},
									"scope": 626,
									"src": "10029:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "10444:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 248,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "10485:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 251,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "10507:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10513:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "10507:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 253,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 240,
																			"src": "10524:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 254,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "10528:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 255,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10523:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 249,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10492:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10496:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "10492:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10492:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 247,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "10461:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10461:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 246,
												"id": 258,
												"nodeType": "Return",
												"src": "10454:82:0"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "10223:126:0",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "10363:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10386:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "10379:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 236,
														"name": "IERC20",
														"nameLocations": [
															"10379:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "10379:6:0"
													},
													"referencedDeclaration": 77,
													"src": "10379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10401:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "10393:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10413:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "10405:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10378:41:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "10438:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10438:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10437:6:0"
									},
									"scope": 626,
									"src": "10354:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "10792:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "10833:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 279,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "10855:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10861:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "10855:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 281,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "10876:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 282,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "10882:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 283,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 270,
																			"src": "10886:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 284,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10875:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 277,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10840:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10844:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "10840:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10840:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 275,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "10809:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10809:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 274,
												"id": 287,
												"nodeType": "Return",
												"src": "10802:92:0"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "10549:130:0",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "10693:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10713:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 263,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 262,
														"name": "IERC20",
														"nameLocations": [
															"10713:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "10713:6:0"
													},
													"referencedDeclaration": 77,
													"src": "10713:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10735:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10727:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10749:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10741:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10761:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10753:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:55:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:6:0"
									},
									"scope": 626,
									"src": "10684:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "11643:139:0",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "11661:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "11653:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 306,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11700:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$626",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$626",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11692:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 304,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11692:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11692:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "11707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 302,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "11676:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11682:9:0",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "11676:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11676:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11653:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "11738:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "11745:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "11754:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 315,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "11769:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11754:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 311,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "11725:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11725:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "11725:50:0"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "10907:645:0",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "11566:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11595:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "11588:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 291,
														"name": "IERC20",
														"nameLocations": [
															"11588:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "11588:6:0"
													},
													"referencedDeclaration": 77,
													"src": "11588:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "11602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "11619:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11587:46:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11643:0:0"
									},
									"scope": 626,
									"src": "11557:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "12548:370:0",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "12558:354:0",
												"statements": [
													{
														"assignments": [
															332
														],
														"declarations": [
															{
																"constant": false,
																"id": 332,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "12590:16:0",
																"nodeType": "VariableDeclaration",
																"scope": 361,
																"src": "12582:24:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12582:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 341,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 337,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12633:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$626",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$626",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12625:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 335,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12625:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12625:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 339,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "12640:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 333,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "12609:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12615:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "12609:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12609:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12582:66:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "12666:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 343,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "12685:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12666:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 352,
														"nodeType": "IfStatement",
														"src": "12662:160:0",
														"trueBody": {
															"id": 351,
															"nodeType": "Block",
															"src": "12704:118:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 346,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "12762:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 347,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "12771:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 348,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 328,
																				"src": "12789:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 345,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "12729:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12729:78:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 350,
																	"nodeType": "RevertStatement",
																	"src": "12722:85:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 354,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "12848:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 355,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "12855:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 356,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "12864:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 357,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "12883:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12864:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 353,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "12835:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12835:66:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 360,
														"nodeType": "ExpressionStatement",
														"src": "12835:66:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "11788:657:0",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "12459:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "12488:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "12481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 322,
														"name": "IERC20",
														"nameLocations": [
															"12481:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "12481:6:0"
													},
													"referencedDeclaration": 77,
													"src": "12481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "12495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "12520:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "12512:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12480:58:0"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12548:0:0"
									},
									"scope": 626,
									"src": "12450:468:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "13572:303:0",
										"statements": [
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "13595:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 409,
														"src": "13582:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 374,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13582:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 384,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 378,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "13625:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13631:7:0",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "13625:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 380,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "13641:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 381,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "13650:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 382,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13640:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 376,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "13610:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13614:10:0",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "13610:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13610:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13582:75:0"
											},
											{
												"condition": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13672:45:0",
													"subExpression": {
														"arguments": [
															{
																"id": 386,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "13697:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 387,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "13704:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 385,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "13673:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13673:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 408,
												"nodeType": "IfStatement",
												"src": "13668:201:0",
												"trueBody": {
													"id": 407,
													"nodeType": "Block",
													"src": "13719:150:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 391,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "13753:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 394,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "13775:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13781:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "13775:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 396,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 369,
																						"src": "13791:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 397,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13800:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 398,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "13790:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 392,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "13760:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "13764:10:0",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "13760:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13760:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 390,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "13733:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13733:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "13733:71:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 403,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "13838:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 404,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "13845:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 402,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "13818:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13818:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "13818:40:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "12924:566:0",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "13504:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13524:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "13517:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 365,
														"name": "IERC20",
														"nameLocations": [
															"13517:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "13517:6:0"
													},
													"referencedDeclaration": 77,
													"src": "13517:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13539:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "13531:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13556:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "13548:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13516:46:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13572:0:0"
									},
									"scope": 626,
									"src": "13495:380:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "14322:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 423,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "14336:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14339:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "14336:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14344:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14336:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14354:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14336:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14422:39:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 437,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "14445:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 438,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "14449:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 439,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "14456:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 435,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "14423:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$167",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14429:15:0",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "14423:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14423:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 450,
													"nodeType": "IfStatement",
													"src": "14418:117:0",
													"trueBody": {
														"id": 449,
														"nodeType": "Block",
														"src": "14463:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 445,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 414,
																					"src": "14517:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14509:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 443,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "14509:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14509:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 442,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "14484:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14484:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 448,
																"nodeType": "RevertStatement",
																"src": "14477:47:0"
															}
														]
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "14332:203:0",
												"trueBody": {
													"id": 434,
													"nodeType": "Block",
													"src": "14357:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 429,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "14384:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 430,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "14391:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 431,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "14395:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 428,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "14371:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14371:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 433,
															"nodeType": "ExpressionStatement",
															"src": "14371:30:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "13881:333:0",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "14228:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14260:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14251:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$167",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 413,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 412,
														"name": "IERC1363",
														"nameLocations": [
															"14251:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "14251:8:0"
													},
													"referencedDeclaration": 167,
													"src": "14251:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$167",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14275:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14267:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14287:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14279:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14307:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14294:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14294:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14250:62:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14322:0:0"
									},
									"scope": 626,
									"src": "14219:322:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "15060:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 468,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "15074:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15077:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15074:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15082:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15074:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15092:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15074:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15170:49:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 483,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "15197:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 484,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "15203:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 485,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "15207:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 486,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "15214:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 481,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "15171:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$167",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15177:19:0",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "15171:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15171:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 497,
													"nodeType": "IfStatement",
													"src": "15166:127:0",
													"trueBody": {
														"id": 496,
														"nodeType": "Block",
														"src": "15221:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 492,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 457,
																					"src": "15275:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15267:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 490,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15267:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15267:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 489,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "15242:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15242:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 495,
																"nodeType": "RevertStatement",
																"src": "15235:47:0"
															}
														]
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "15070:223:0",
												"trueBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "15095:65:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 474,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "15126:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 475,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "15133:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 476,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "15139:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 477,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "15143:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 473,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "15109:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15109:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 479,
															"nodeType": "ExpressionStatement",
															"src": "15109:40:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "14547:341:0",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "14902:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14947:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "14938:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$167",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 456,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 455,
														"name": "IERC1363",
														"nameLocations": [
															"14938:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "14938:8:0"
													},
													"referencedDeclaration": 167,
													"src": "14938:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$167",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14970:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "14962:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14992:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "14984:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15012:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "15004:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15040:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "15027:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15027:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14928:122:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15060:0:0"
									},
									"scope": 626,
									"src": "14893:406:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "16066:218:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 513,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "16080:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16083:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "16080:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16088:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16080:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16080:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16166:38:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 527,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "16188:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 528,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "16192:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 529,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "16199:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 525,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "16167:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$167",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16173:14:0",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 166,
																"src": "16167:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16167:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 540,
													"nodeType": "IfStatement",
													"src": "16162:116:0",
													"trueBody": {
														"id": 539,
														"nodeType": "Block",
														"src": "16206:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 535,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "16260:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16252:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 533,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "16252:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16252:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 532,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "16227:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16227:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 538,
																"nodeType": "RevertStatement",
																"src": "16220:47:0"
															}
														]
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "16076:202:0",
												"trueBody": {
													"id": 524,
													"nodeType": "Block",
													"src": "16101:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 519,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "16128:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 520,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "16135:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 521,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "16139:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 518,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "16115:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16115:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 523,
															"nodeType": "ExpressionStatement",
															"src": "16115:30:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "15305:654:0",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "15973:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "15995:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$167",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 502,
														"name": "IERC1363",
														"nameLocations": [
															"15995:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "15995:8:0"
													},
													"referencedDeclaration": 167,
													"src": "15995:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$167",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16019:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "16011:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16031:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "16023:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16051:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "16038:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16038:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15994:62:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16066:0:0"
									},
									"scope": 626,
									"src": "15964:320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "16851:650:0",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "16869:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "16861:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"nodeType": "VariableDeclarationStatement",
												"src": "16861:18:0"
											},
											{
												"assignments": [
													556
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "16897:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "16889:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 555,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"nodeType": "VariableDeclarationStatement",
												"src": "16889:19:0"
											},
											{
												"AST": {
													"nativeSrc": "16943:396:0",
													"nodeType": "YulBlock",
													"src": "16943:396:0",
													"statements": [
														{
															"nativeSrc": "16957:75:0",
															"nodeType": "YulVariableDeclaration",
															"src": "16957:75:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "16977:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16977:3:0"
																		},
																		"nativeSrc": "16977:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16977:5:0"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "16984:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "16984:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16991:1:0",
																		"nodeType": "YulLiteral",
																		"src": "16991:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "16998:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "16998:4:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17004:4:0",
																				"nodeType": "YulLiteral",
																				"src": "17004:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16994:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16994:3:0"
																		},
																		"nativeSrc": "16994:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16994:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "17017:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "17017:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17011:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "17011:5:0"
																		},
																		"nativeSrc": "17011:11:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17011:11:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17024:1:0",
																		"nodeType": "YulLiteral",
																		"src": "17024:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17027:4:0",
																		"nodeType": "YulLiteral",
																		"src": "17027:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "16972:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "16972:4:0"
																},
																"nativeSrc": "16972:60:0",
																"nodeType": "YulFunctionCall",
																"src": "16972:60:0"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "16961:7:0",
																	"nodeType": "YulTypedName",
																	"src": "16961:7:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17093:157:0",
																"nodeType": "YulBlock",
																"src": "17093:157:0",
																"statements": [
																	{
																		"nativeSrc": "17111:22:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17111:22:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17128:4:0",
																					"nodeType": "YulLiteral",
																					"src": "17128:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "17122:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "17122:5:0"
																			},
																			"nativeSrc": "17122:11:0",
																			"nodeType": "YulFunctionCall",
																			"src": "17122:11:0"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "17115:3:0",
																				"nodeType": "YulTypedName",
																				"src": "17115:3:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "17165:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "17165:3:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17170:1:0",
																					"nodeType": "YulLiteral",
																					"src": "17170:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "17173:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "17173:14:0"
																					},
																					"nativeSrc": "17173:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "17173:16:0"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "17150:14:0",
																				"nodeType": "YulIdentifier",
																				"src": "17150:14:0"
																			},
																			"nativeSrc": "17150:40:0",
																			"nodeType": "YulFunctionCall",
																			"src": "17150:40:0"
																		},
																		"nativeSrc": "17150:40:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "17150:40:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "17214:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "17214:3:0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "17219:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "17219:14:0"
																					},
																					"nativeSrc": "17219:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "17219:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17207:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "17207:6:0"
																			},
																			"nativeSrc": "17207:29:0",
																			"nodeType": "YulFunctionCall",
																			"src": "17207:29:0"
																		},
																		"nativeSrc": "17207:29:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "17207:29:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "17084:7:0",
																		"nodeType": "YulIdentifier",
																		"src": "17084:7:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17077:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "17077:6:0"
																},
																"nativeSrc": "17077:15:0",
																"nodeType": "YulFunctionCall",
																"src": "17077:15:0"
															},
															"nativeSrc": "17074:176:0",
															"nodeType": "YulIf",
															"src": "17074:176:0"
														},
														{
															"nativeSrc": "17263:30:0",
															"nodeType": "YulAssignment",
															"src": "17263:30:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "17277:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "17277:14:0"
																},
																"nativeSrc": "17277:16:0",
																"nodeType": "YulFunctionCall",
																"src": "17277:16:0"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "17263:10:0",
																	"nodeType": "YulIdentifier",
																	"src": "17263:10:0"
																}
															]
														},
														{
															"nativeSrc": "17306:23:0",
															"nodeType": "YulAssignment",
															"src": "17306:23:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17327:1:0",
																		"nodeType": "YulLiteral",
																		"src": "17327:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17321:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "17321:5:0"
																},
																"nativeSrc": "17321:8:0",
																"nodeType": "YulFunctionCall",
																"src": "17321:8:0"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "17306:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "17306:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 549,
														"isOffset": false,
														"isSlot": false,
														"src": "16998:4:0",
														"valueSize": 1
													},
													{
														"declaration": 549,
														"isOffset": false,
														"isSlot": false,
														"src": "17017:4:0",
														"valueSize": 1
													},
													{
														"declaration": 553,
														"isOffset": false,
														"isSlot": false,
														"src": "17263:10:0",
														"valueSize": 1
													},
													{
														"declaration": 556,
														"isOffset": false,
														"isSlot": false,
														"src": "17306:11:0",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "16984:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 558,
												"nodeType": "InlineAssembly",
												"src": "16918:421:0"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 559,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "17353:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17367:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17353:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 570,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "17405:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17420:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "17405:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "17353:68:0",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 564,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "17379:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17371:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 562,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17371:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17371:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17386:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "17371:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17391:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "17371:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17401:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17371:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "17349:146:0",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "17423:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 577,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 547,
																				"src": "17477:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17469:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 575,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17469:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17469:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 574,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "17444:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17444:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "RevertStatement",
															"src": "17437:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "16290:486:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "16790:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16817:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "16810:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 546,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 545,
														"name": "IERC20",
														"nameLocations": [
															"16810:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "16810:6:0"
													},
													"referencedDeclaration": 77,
													"src": "16810:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16837:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "16824:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16824:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16809:33:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16851:0:0"
									},
									"scope": 626,
									"src": "16781:720:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "18092:391:0",
										"statements": [
											{
												"assignments": [
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18107:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "18102:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 595,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18102:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"nodeType": "VariableDeclarationStatement",
												"src": "18102:12:0"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "18132:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "18124:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 600,
												"nodeType": "VariableDeclarationStatement",
												"src": "18124:18:0"
											},
											{
												"assignments": [
													602
												],
												"declarations": [
													{
														"constant": false,
														"id": 602,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "18160:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "18152:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 603,
												"nodeType": "VariableDeclarationStatement",
												"src": "18152:19:0"
											},
											{
												"AST": {
													"nativeSrc": "18206:174:0",
													"nodeType": "YulBlock",
													"src": "18206:174:0",
													"statements": [
														{
															"nativeSrc": "18220:71:0",
															"nodeType": "YulAssignment",
															"src": "18220:71:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "18236:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18236:3:0"
																		},
																		"nativeSrc": "18236:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18236:5:0"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "18243:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "18243:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18250:1:0",
																		"nodeType": "YulLiteral",
																		"src": "18250:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "18257:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "18257:4:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18263:4:0",
																				"nodeType": "YulLiteral",
																				"src": "18263:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18253:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18253:3:0"
																		},
																		"nativeSrc": "18253:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18253:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "18276:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "18276:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "18270:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "18270:5:0"
																		},
																		"nativeSrc": "18270:11:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18270:11:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18283:1:0",
																		"nodeType": "YulLiteral",
																		"src": "18283:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18286:4:0",
																		"nodeType": "YulLiteral",
																		"src": "18286:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "18231:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "18231:4:0"
																},
																"nativeSrc": "18231:60:0",
																"nodeType": "YulFunctionCall",
																"src": "18231:60:0"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "18220:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "18220:7:0"
																}
															]
														},
														{
															"nativeSrc": "18304:30:0",
															"nodeType": "YulAssignment",
															"src": "18304:30:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "18318:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "18318:14:0"
																},
																"nativeSrc": "18318:16:0",
																"nodeType": "YulFunctionCall",
																"src": "18318:16:0"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "18304:10:0",
																	"nodeType": "YulIdentifier",
																	"src": "18304:10:0"
																}
															]
														},
														{
															"nativeSrc": "18347:23:0",
															"nodeType": "YulAssignment",
															"src": "18347:23:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18368:1:0",
																		"nodeType": "YulLiteral",
																		"src": "18368:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18362:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "18362:5:0"
																},
																"nativeSrc": "18362:8:0",
																"nodeType": "YulFunctionCall",
																"src": "18362:8:0"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "18347:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "18347:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 590,
														"isOffset": false,
														"isSlot": false,
														"src": "18257:4:0",
														"valueSize": 1
													},
													{
														"declaration": 590,
														"isOffset": false,
														"isSlot": false,
														"src": "18276:4:0",
														"valueSize": 1
													},
													{
														"declaration": 599,
														"isOffset": false,
														"isSlot": false,
														"src": "18304:10:0",
														"valueSize": 1
													},
													{
														"declaration": 602,
														"isOffset": false,
														"isSlot": false,
														"src": "18347:11:0",
														"valueSize": 1
													},
													{
														"declaration": 596,
														"isOffset": false,
														"isSlot": false,
														"src": "18220:7:0",
														"valueSize": 1
													},
													{
														"declaration": 588,
														"isOffset": false,
														"isSlot": false,
														"src": "18243:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 604,
												"nodeType": "InlineAssembly",
												"src": "18181:199:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 605,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "18396:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 606,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "18408:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18422:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "18408:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 617,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "18459:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18474:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "18459:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "18408:67:0",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 611,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 588,
																						"src": "18434:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 610,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "18426:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 609,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "18426:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "18426:14:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "18441:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "18426:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18446:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "18426:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18455:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "18426:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 621,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18407:69:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18396:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 594,
												"id": 623,
												"nodeType": "Return",
												"src": "18389:87:0"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "17507:491:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "18012:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18043:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "18036:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 587,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 586,
														"name": "IERC20",
														"nameLocations": [
															"18036:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "18036:6:0"
													},
													"referencedDeclaration": 77,
													"src": "18036:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18063:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "18050:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18050:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18035:33:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "18086:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18086:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18085:6:0"
									},
									"scope": 626,
									"src": "18003:480:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1398,
							"src": "9109:9376:0",
							"usedErrors": [
								174,
								183
							],
							"usedEvents": []
						},
						{
							"id": 627,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "18607:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 628,
								"nodeType": "StructuredDocumentation",
								"src": "18633:284:0",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 647,
							"linearizedBaseContracts": [
								647
							],
							"name": "Errors",
							"nameLocation": "18926:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "18939:94:0",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 635,
									"name": "InsufficientBalance",
									"nameLocation": "19044:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "19072:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "19064:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "19089:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "19081:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19063:33:0"
									},
									"src": "19038:59:0"
								},
								{
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "19103:89:0",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 638,
									"name": "FailedCall",
									"nameLocation": "19203:10:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19213:2:0"
									},
									"src": "19197:19:0"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "19222:46:0",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 641,
									"name": "FailedDeployment",
									"nameLocation": "19279:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19295:2:0"
									},
									"src": "19273:25:0"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "19304:58:0",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 646,
									"name": "MissingPrecompile",
									"nameLocation": "19373:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "19391:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19390:9:0"
									},
									"src": "19367:33:0"
								}
							],
							"scope": 1398,
							"src": "18918:484:0",
							"usedErrors": [
								635,
								638,
								641,
								646
							],
							"usedEvents": []
						},
						{
							"id": 648,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "19526:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "19553:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 904,
							"linearizedBaseContracts": [
								904
							],
							"name": "Address",
							"nameLocation": "19629:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "19643:75:0",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 654,
									"name": "AddressEmptyCode",
									"nameLocation": "19729:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "19754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "19746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19745:16:0"
									},
									"src": "19723:39:0"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "20749:294:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 664,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "20771:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$904",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$904",
																		"typeString": "library Address"
																	}
																],
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 662,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20763:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20763:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20777:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "20763:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 667,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "20787:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20763:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 681,
												"nodeType": "IfStatement",
												"src": "20759:125:0",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "20795:89:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 674,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "20851:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$904",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$904",
																						"typeString": "library Address"
																					}
																				],
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "20843:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 672,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "20843:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20843:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20857:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "20843:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 677,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "20866:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 669,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "20816:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$647_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20823:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 635,
																	"src": "20816:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20816:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 679,
															"nodeType": "RevertStatement",
															"src": "20809:64:0"
														}
													]
												}
											},
											{
												"assignments": [
													683,
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "20900:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "20895:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 682,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "20895:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "20922:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "20909:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 684,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "20909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20966:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 686,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "20936:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "20946:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "20936:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 688,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "20958:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "20936:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20936:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20894:75:0"
											},
											{
												"condition": {
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20983:8:0",
													"subExpression": {
														"id": 693,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "20984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 700,
												"nodeType": "IfStatement",
												"src": "20979:58:0",
												"trueBody": {
													"id": 699,
													"nodeType": "Block",
													"src": "20993:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 696,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "21015:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 695,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "21007:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21007:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 698,
															"nodeType": "ExpressionStatement",
															"src": "21007:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "19768:905:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "20687:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "20713:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "20697:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20697:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20732:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "20724:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20696:43:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20749:0:0"
									},
									"scope": 904,
									"src": "20678:365:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "21977:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "22016:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "22024:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 712,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "21994:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21994:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 711,
												"id": 717,
												"nodeType": "Return",
												"src": "21987:45:0"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "21049:834:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "21897:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "21918:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "21910:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21939:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "21926:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21926:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21909:35:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "21963:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21962:14:0"
									},
									"scope": 904,
									"src": "21888:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "22476:294:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 733,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22498:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$904",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$904",
																		"typeString": "library Address"
																	}
																],
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22490:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 731,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22490:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22490:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22504:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "22490:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 736,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "22514:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22490:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "22486:123:0",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "22521:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 743,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "22577:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$904",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$904",
																						"typeString": "library Address"
																					}
																				],
																				"id": 742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "22569:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 741,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "22569:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22569:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22583:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "22569:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 746,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "22592:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 738,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "22542:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$647_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22549:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 635,
																	"src": "22542:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22542:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "22535:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													752,
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "22624:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "22619:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 751,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "22619:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "22646:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "22633:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 753,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "22633:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [
														{
															"id": 759,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "22686:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 755,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "22660:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22667:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "22660:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 757,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "22679:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "22660:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22660:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22618:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 763,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "22735:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "22743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 765,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "22752:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 762,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "22708:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22708:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 730,
												"id": 767,
												"nodeType": "Return",
												"src": "22701:62:0"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "22045:313:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "22372:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "22402:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "22394:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "22423:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "22410:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22410:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22437:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "22429:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22393:50:0"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "22462:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22462:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22461:14:0"
									},
									"scope": 904,
									"src": "22363:407:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "23009:154:0",
										"statements": [
											{
												"assignments": [
													780,
													782
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "23025:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "23020:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 779,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "23020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 782,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "23047:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "23034:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 781,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "23034:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [
														{
															"id": 785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "23079:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 783,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "23061:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23068:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "23061:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23061:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23019:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "23128:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "23136:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "23145:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 788,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "23101:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23101:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 778,
												"id": 793,
												"nodeType": "Return",
												"src": "23094:62:0"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "22776:128:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "22918:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "22945:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "22937:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "22966:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "22953:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22953:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22936:35:0"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "22995:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22995:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22994:14:0"
									},
									"scope": 904,
									"src": "22909:254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "23401:156:0",
										"statements": [
											{
												"assignments": [
													806,
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "23417:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "23412:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 805,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "23412:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "23439:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "23426:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 807,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "23426:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"arguments": [
														{
															"id": 811,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "23473:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 809,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "23453:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23460:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "23453:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23453:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23411:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "23522:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "23530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 817,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "23539:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 814,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "23495:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23495:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 804,
												"id": 819,
												"nodeType": "Return",
												"src": "23488:62:0"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "23169:130:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "23313:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "23342:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "23334:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23363:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "23350:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23350:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23333:35:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "23387:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23387:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23386:14:0"
									},
									"scope": 904,
									"src": "23304:253:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "23983:424:0",
										"statements": [
											{
												"condition": {
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "23997:8:0",
													"subExpression": {
														"id": 833,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "23998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "24057:344:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 840,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 828,
																			"src": "24245:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24256:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "24245:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24266:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "24245:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 844,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "24271:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "24278:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "24271:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24283:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "24271:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24293:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "24271:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "24245:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 855,
															"nodeType": "IfStatement",
															"src": "24241:119:0",
															"trueBody": {
																"id": 854,
																"nodeType": "Block",
																"src": "24296:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 851,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 824,
																					"src": "24338:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 850,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "24321:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24321:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 853,
																		"nodeType": "RevertStatement",
																		"src": "24314:31:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 856,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "24380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 832,
															"id": 857,
															"nodeType": "Return",
															"src": "24373:17:0"
														}
													]
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "23993:408:0",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "24007:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 836,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "24029:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 835,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "24021:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24021:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 838,
															"nodeType": "ExpressionStatement",
															"src": "24021:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "23563:257:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "23834:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "23878:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "23870:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "23899:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "23894:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23894:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "23929:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "23916:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23916:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23860:85:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "23969:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23969:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23968:14:0"
									},
									"scope": 904,
									"src": "23825:582:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "24711:122:0",
										"statements": [
											{
												"condition": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "24725:8:0",
													"subExpression": {
														"id": 871,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "24726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "24785:42:0",
													"statements": [
														{
															"expression": {
																"id": 878,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "24806:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 870,
															"id": 879,
															"nodeType": "Return",
															"src": "24799:17:0"
														}
													]
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "24721:106:0",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "24735:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 874,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "24757:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 873,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "24749:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24749:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 876,
															"nodeType": "ExpressionStatement",
															"src": "24749:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "24413:191:0",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "24618:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "24640:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "24635:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "24662:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "24649:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24649:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24634:39:0"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "24697:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 868,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24697:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24696:14:0"
									},
									"scope": 904,
									"src": "24609:224:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "25002:379:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 889,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "25078:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25089:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "25078:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25078:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "25324:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 895,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "25345:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$647_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25352:10:0",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 638,
																	"src": "25345:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25345:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "RevertStatement",
															"src": "25338:26:0"
														}
													]
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "25074:301:0",
												"trueBody": {
													"id": 894,
													"nodeType": "Block",
													"src": "25101:217:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "25228:80:0",
																"nodeType": "YulBlock",
																"src": "25228:80:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "returndata",
																							"nativeSrc": "25257:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "25257:10:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "25269:4:0",
																							"nodeType": "YulLiteral",
																							"src": "25269:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "25253:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "25253:3:0"
																					},
																					"nativeSrc": "25253:21:0",
																					"nodeType": "YulFunctionCall",
																					"src": "25253:21:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "returndata",
																							"nativeSrc": "25282:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "25282:10:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "25276:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "25276:5:0"
																					},
																					"nativeSrc": "25276:17:0",
																					"nodeType": "YulFunctionCall",
																					"src": "25276:17:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "25246:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "25246:6:0"
																			},
																			"nativeSrc": "25246:48:0",
																			"nodeType": "YulFunctionCall",
																			"src": "25246:48:0"
																		},
																		"nativeSrc": "25246:48:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "25246:48:0"
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 886,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "25257:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 886,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "25282:10:0",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 893,
															"nodeType": "InlineAssembly",
															"src": "25203:105:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "24839:103:0",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "24956:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "24977:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "24964:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 885,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24964:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24963:25:0"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25002:0:0"
									},
									"scope": 904,
									"src": "24947:434:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1398,
							"src": "19621:5762:0",
							"usedErrors": [
								654
							],
							"usedEvents": []
						},
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25507:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "25533:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "26048:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "26124:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "26141:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26145:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "26141:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "26134:17:0"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "26071:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26081:2:0"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "26115:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26114:9:0"
									},
									"scope": 933,
									"src": "26062:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "26231:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "26248:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26252:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "26248:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "26241:15:0"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "26173:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26181:2:0"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "26215:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26215:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26214:16:0"
									},
									"scope": 933,
									"src": "26164:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "26341:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26358:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "26351:8:0"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "26278:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26298:2:0"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "26332:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26331:9:0"
									},
									"scope": 933,
									"src": "26269:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1398,
							"src": "26030:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 934,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26494:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 936,
										"name": "Context",
										"nameLocations": [
											"27038:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "27038:7:0"
									},
									"id": 937,
									"nodeType": "InheritanceSpecifier",
									"src": "27038:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 935,
								"nodeType": "StructuredDocumentation",
								"src": "26521:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1078,
							"linearizedBaseContracts": [
								1078,
								933
							],
							"name": "Ownable",
							"nameLocation": "27027:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 939,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "27068:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "27052:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 938,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27052:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "27081:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 944,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "27177:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "27204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27203:17:0"
									},
									"src": "27171:50:0"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "27227:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 949,
									"name": "OwnableInvalidOwner",
									"nameLocation": "27320:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27348:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "27340:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27339:15:0"
									},
									"src": "27314:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 955,
									"name": "OwnershipTransferred",
									"nameLocation": "27367:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "27404:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "27388:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "27435:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "27419:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27387:57:0"
									},
									"src": "27361:84:0"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "27605:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "27619:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27643:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "27635:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27635:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27619:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"nodeType": "IfStatement",
												"src": "27615:95:0",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "27647:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27696:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "27688:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 968,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "27688:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "27688:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 967,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "27668:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27668:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 973,
															"nodeType": "RevertStatement",
															"src": "27661:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 977,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "27738:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 976,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "27719:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27719:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "27719:32:0"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "27451:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 981,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "27591:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "27583:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27582:22:0"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27605:0:0"
									},
									"scope": 1078,
									"src": "27571:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "27867:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 984,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "27877:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27877:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "27877:13:0"
											},
											{
												"id": 987,
												"nodeType": "PlaceholderStatement",
												"src": "27900:1:0"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "27764:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 989,
									"name": "onlyOwner",
									"nameLocation": "27855:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27864:2:0"
									},
									"src": "27846:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "28039:30:0",
										"statements": [
											{
												"expression": {
													"id": 995,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 939,
													"src": "28056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 994,
												"id": 996,
												"nodeType": "Return",
												"src": "28049:13:0"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "27914:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "27993:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27998:2:0"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "28030:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28029:9:0"
									},
									"scope": 1078,
									"src": "27984:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "28187:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1002,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "28201:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28201:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1004,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "28212:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28212:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28201:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "28197:101:0",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "28226:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1008,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "28274:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28274:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1007,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "28247:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28247:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1011,
															"nodeType": "RevertStatement",
															"src": "28240:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "28075:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "28151:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28162:2:0"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28187:0:0"
									},
									"scope": 1078,
									"src": "28142:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "28693:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28730:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28722:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1022,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28722:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28722:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1021,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "28703:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28703:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "28703:30:0"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "28310:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1019,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1018,
												"name": "onlyOwner",
												"nameLocations": [
													"28683:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 989,
												"src": "28683:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28683:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "28648:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28665:2:0"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28693:0:0"
									},
									"scope": 1078,
									"src": "28639:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "28959:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1037,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "28973:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28993:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1038,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28985:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28985:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28973:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1051,
												"nodeType": "IfStatement",
												"src": "28969:91:0",
												"trueBody": {
													"id": 1050,
													"nodeType": "Block",
													"src": "28997:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29046:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29038:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1044,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29038:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29038:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1043,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "29018:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29018:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1049,
															"nodeType": "RevertStatement",
															"src": "29011:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1053,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "29088:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1052,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "29069:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29069:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "29069:28:0"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "28746:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1035,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1034,
												"name": "onlyOwner",
												"nameLocations": [
													"28949:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 989,
												"src": "28949:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28949:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "28898:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "28924:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "28916:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28915:18:0"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28959:0:0"
									},
									"scope": 1078,
									"src": "28889:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "29321:124:0",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "29339:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "29331:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1063,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29331:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"id": 1065,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 939,
													"src": "29350:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29331:25:0"
											},
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1067,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "29366:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1068,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "29375:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29366:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "29366:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1072,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "29419:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "29429:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1071,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "29398:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29398:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "EmitStatement",
												"src": "29393:45:0"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "29110:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "29267:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29294:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "29286:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29285:18:0"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29321:0:0"
									},
									"scope": 1078,
									"src": "29258:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1398,
							"src": "27009:2438:0",
							"usedErrors": [
								944,
								949
							],
							"usedEvents": [
								955
							]
						},
						{
							"id": 1079,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29586:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1081,
										"name": "Context",
										"nameLocations": [
											"31310:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "31310:7:0"
									},
									"id": 1082,
									"nodeType": "InheritanceSpecifier",
									"src": "31310:7:0"
								},
								{
									"baseName": {
										"id": 1083,
										"name": "Ownable",
										"nameLocations": [
											"31319:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "31319:7:0"
									},
									"id": 1084,
									"nodeType": "InheritanceSpecifier",
									"src": "31319:7:0"
								}
							],
							"canonicalName": "VestingWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1080,
								"nodeType": "StructuredDocumentation",
								"src": "29617:1666:0",
								"text": " @dev A vesting wallet is an ownable contract that can receive native currency and ERC-20 tokens, and release these\n assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n be immediately releasable.\n By setting the duration to 0, one can configure this contract to behave like an asset timelock that holds tokens for\n a beneficiary until a specified time.\n NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n near future.\n NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\n NOTE: Chains with support for native ERC20s may allow the vesting wallet to withdraw the underlying asset as both an\n ERC20 and as native currency. For example, if chain C supports token A and the wallet gets deposited 100 A, then\n at 50% of the vesting period, the beneficiary can withdraw 50 A as ERC20 and 25 A as native currency (totaling 75 A).\n Consider disabling one of the withdrawal methods."
							},
							"fullyImplemented": true,
							"id": 1378,
							"linearizedBaseContracts": [
								1378,
								1078,
								933
							],
							"name": "VestingWallet",
							"nameLocation": "31293:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "da9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b",
									"id": 1088,
									"name": "EtherReleased",
									"nameLocation": "31339:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31361:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "31353:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31352:16:0"
									},
									"src": "31333:36:0"
								},
								{
									"anonymous": false,
									"eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
									"id": 1094,
									"name": "ERC20Released",
									"nameLocation": "31380:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "31410:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "31394:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31425:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "31417:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31393:39:0"
									},
									"src": "31374:59:0"
								},
								{
									"constant": false,
									"id": 1096,
									"mutability": "mutable",
									"name": "_released",
									"nameLocation": "31455:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "31439:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1095,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "31439:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1100,
									"mutability": "mutable",
									"name": "_erc20Released",
									"nameLocation": "31512:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "31470:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1099,
										"keyName": "token",
										"keyNameLocation": "31486:5:0",
										"keyType": {
											"id": 1097,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "31478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "31470:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1098,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "31495:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1102,
									"mutability": "immutable",
									"name": "_start",
									"nameLocation": "31557:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "31532:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1101,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "31532:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1104,
									"mutability": "immutable",
									"name": "_duration",
									"nameLocation": "31594:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "31569:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1103,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "31569:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "31865:77:0",
										"statements": [
											{
												"expression": {
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1117,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "31875:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1118,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "31884:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "31875:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "31875:23:0"
											},
											{
												"expression": {
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1121,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "31908:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1122,
														"name": "durationSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "31920:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "31908:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "31908:27:0"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "31610:141:0",
										"text": " @dev Sets the beneficiary (owner), the start timestamp and the vesting duration (in seconds) of the vesting\n wallet."
									},
									"id": 1126,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1114,
													"name": "beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1107,
													"src": "31852:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1115,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1113,
												"name": "Ownable",
												"nameLocations": [
													"31844:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1078,
												"src": "31844:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31844:20:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "31776:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "31768:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "startTimestamp",
												"nameLocation": "31796:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "31789:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1108,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "31789:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "31819:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "31812:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1110,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "31812:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31767:68:0"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31865:0:0"
									},
									"scope": 1378,
									"src": "31756:186:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "32055:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "31948:67:0",
										"text": " @dev The contract should be able to receive Eth."
									},
									"id": 1131,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32027:2:0"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32055:0:0"
									},
									"scope": 1378,
									"src": "32020:37:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "32178:30:0",
										"statements": [
											{
												"expression": {
													"id": 1137,
													"name": "_start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1102,
													"src": "32195:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1136,
												"id": 1138,
												"nodeType": "Return",
												"src": "32188:13:0"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "32063:55:0",
										"text": " @dev Getter for the start timestamp."
									},
									"functionSelector": "be9a6555",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "32132:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32137:2:0"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "32169:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32168:9:0"
									},
									"scope": 1378,
									"src": "32123:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "32333:33:0",
										"statements": [
											{
												"expression": {
													"id": 1146,
													"name": "_duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1104,
													"src": "32350:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1147,
												"nodeType": "Return",
												"src": "32343:16:0"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "32214:56:0",
										"text": " @dev Getter for the vesting duration."
									},
									"functionSelector": "0fb5a6b4",
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "duration",
									"nameLocation": "32284:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32292:2:0"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "32324:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32323:9:0"
									},
									"scope": 1378,
									"src": "32275:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "32483:44:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1155,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "32500:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32500:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1157,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "32510:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32510:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32500:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1160,
												"nodeType": "Return",
												"src": "32493:27:0"
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "32372:53:0",
										"text": " @dev Getter for the end timestamp."
									},
									"functionSelector": "efbe1c1c",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "end",
									"nameLocation": "32439:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32442:2:0"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "32474:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32473:9:0"
									},
									"scope": 1378,
									"src": "32430:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "32650:33:0",
										"statements": [
											{
												"expression": {
													"id": 1168,
													"name": "_released",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1096,
													"src": "32667:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1169,
												"nodeType": "Return",
												"src": "32660:16:0"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "32533:54:0",
										"text": " @dev Amount of eth already released"
									},
									"functionSelector": "96132521",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "32601:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32609:2:0"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "32641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32640:9:0"
									},
									"scope": 1378,
									"src": "32592:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "32821:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1179,
														"name": "_erc20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "32838:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1181,
													"indexExpression": {
														"id": 1180,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "32853:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32838:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1182,
												"nodeType": "Return",
												"src": "32831:28:0"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "32689:56:0",
										"text": " @dev Amount of token already released"
									},
									"functionSelector": "9852595c",
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "32759:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "32776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "32768:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32767:15:0"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "32812:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32811:9:0"
									},
									"scope": 1378,
									"src": "32750:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "33001:74:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1193,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "33038:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33044:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "33038:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33031:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1191,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "33031:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33031:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 1190,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1309,
																1337
															],
															"referencedDeclaration": 1309,
															"src": "33018:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (uint64) view returns (uint256)"
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33018:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1197,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1171,
																1184
															],
															"referencedDeclaration": 1171,
															"src": "33058:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33058:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33018:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1189,
												"id": 1200,
												"nodeType": "Return",
												"src": "33011:57:0"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "32872:64:0",
										"text": " @dev Getter for the amount of releasable eth."
									},
									"functionSelector": "fbccedae",
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasable",
									"nameLocation": "32950:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32960:2:0"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "32992:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32991:9:0"
									},
									"scope": 1378,
									"src": "32941:134:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "33296:86:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1211,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "33326:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1214,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "33340:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33346:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "33340:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33333:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1212,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "33333:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33333:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 1210,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1309,
																1337
															],
															"referencedDeclaration": 1337,
															"src": "33313:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (address,uint64) view returns (uint256)"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33313:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 1219,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "33369:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1218,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1171,
																1184
															],
															"referencedDeclaration": 1184,
															"src": "33360:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33360:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33313:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1222,
												"nodeType": "Return",
												"src": "33306:69:0"
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "33081:137:0",
										"text": " @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n {IERC20} contract."
									},
									"functionSelector": "a3f8eace",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasable",
									"nameLocation": "33232:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "33251:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "33243:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33242:15:0"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "33287:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33286:9:0"
									},
									"scope": 1378,
									"src": "33223:159:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "33554:164:0",
										"statements": [
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "33572:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "33564:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1230,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1202,
															1224
														],
														"referencedDeclaration": 1202,
														"src": "33581:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33581:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33564:29:0"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "_released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "33603:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1234,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "33616:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33603:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "33603:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1238,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "33651:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1237,
														"name": "EtherReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "33637:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33637:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "EmitStatement",
												"src": "33632:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1246,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "33694:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33694:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33686:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33686:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33686:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1249,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "33704:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1241,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "33668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$904_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33676:9:0",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "33668:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33668:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "33668:43:0"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "33388:127:0",
										"text": " @dev Release the native token (ether) that have already vested.\n Emits a {EtherReleased} event."
									},
									"functionSelector": "86d1a69f",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "33529:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33536:2:0"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33554:0:0"
									},
									"scope": 1378,
									"src": "33520:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "33889:199:0",
										"statements": [
											{
												"assignments": [
													1260
												],
												"declarations": [
													{
														"constant": false,
														"id": 1260,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "33907:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1287,
														"src": "33899:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"arguments": [
														{
															"id": 1262,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "33927:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1261,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1202,
															1224
														],
														"referencedDeclaration": 1224,
														"src": "33916:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33916:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33899:34:0"
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1265,
															"name": "_erc20Released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "33943:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1267,
														"indexExpression": {
															"id": 1266,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "33958:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33943:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1268,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "33968:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33943:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "33943:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1272,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "34003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "34010:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1271,
														"name": "ERC20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "33989:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33989:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "EmitStatement",
												"src": "33984:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1280,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "34057:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1279,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "34050:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34050:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1282,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "34065:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34065:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "34074:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1276,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "34027:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$626_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34037:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 207,
														"src": "34027:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34027:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "34027:54:0"
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "33724:113:0",
										"text": " @dev Release the tokens that have already vested.\n Emits a {ERC20Released} event."
									},
									"functionSelector": "19165587",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "33851:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "33867:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "33859:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33859:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33858:15:0"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33889:0:0"
									},
									"scope": 1378,
									"src": "33842:246:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "34306:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1299,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "34348:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VestingWallet_$1378",
																				"typeString": "contract VestingWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VestingWallet_$1378",
																				"typeString": "contract VestingWallet"
																			}
																		],
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "34340:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1297,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "34340:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34340:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34354:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "34340:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1302,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1171,
																		1184
																	],
																	"referencedDeclaration": 1171,
																	"src": "34364:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34364:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34340:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1305,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "34376:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1296,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "34323:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34323:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1295,
												"id": 1307,
												"nodeType": "Return",
												"src": "34316:70:0"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "34094:129:0",
										"text": " @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "0a17b06b",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "34237:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "34257:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "34250:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1290,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "34250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34249:18:0"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "34297:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34296:9:0"
									},
									"scope": 1378,
									"src": "34228:165:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "34627:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1326,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "34693:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_VestingWallet_$1378",
																					"typeString": "contract VestingWallet"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_VestingWallet_$1378",
																					"typeString": "contract VestingWallet"
																				}
																			],
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34685:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1324,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34685:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34685:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1321,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1312,
																				"src": "34668:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1320,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "34661:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34661:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34675:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "34661:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34661:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1330,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "34711:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1329,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1171,
																		1184
																	],
																	"referencedDeclaration": 1184,
																	"src": "34702:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34702:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34661:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1333,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "34719:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1319,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "34644:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34644:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1335,
												"nodeType": "Return",
												"src": "34637:92:0"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "34399:130:0",
										"text": " @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "810ec23b",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "34543:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "34564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "34556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "34578:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "34571:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1313,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "34571:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34555:33:0"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "34618:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34617:9:0"
									},
									"scope": 1378,
									"src": "34534:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "35040:243:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1347,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "35054:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1348,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "35066:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35066:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35054:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1354,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "35118:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1355,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "35131:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35131:5:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "35118:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1373,
														"nodeType": "Block",
														"src": "35191:86:0",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1361,
																					"name": "totalAllocation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1340,
																					"src": "35213:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1365,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1362,
																								"name": "timestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1342,
																								"src": "35232:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint64",
																									"typeString": "uint64"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1363,
																									"name": "start",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1140,
																									"src": "35244:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																										"typeString": "function () view returns (uint256)"
																									}
																								},
																								"id": 1364,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35244:7:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "35232:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1366,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "35231:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "35213:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1368,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "35212:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1369,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "35256:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35256:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "35212:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1346,
																"id": 1372,
																"nodeType": "Return",
																"src": "35205:61:0"
															}
														]
													},
													"id": 1374,
													"nodeType": "IfStatement",
													"src": "35114:163:0",
													"trueBody": {
														"id": 1360,
														"nodeType": "Block",
														"src": "35138:47:0",
														"statements": [
															{
																"expression": {
																	"id": 1358,
																	"name": "totalAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "35159:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1346,
																"id": 1359,
																"nodeType": "Return",
																"src": "35152:22:0"
															}
														]
													}
												},
												"id": 1375,
												"nodeType": "IfStatement",
												"src": "35050:227:0",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "35075:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1346,
															"id": 1352,
															"nodeType": "Return",
															"src": "35089:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "34742:184:0",
										"text": " @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n an asset given its total historical allocation."
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vestingSchedule",
									"nameLocation": "34940:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "totalAllocation",
												"nameLocation": "34965:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "34957:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "34989:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "34982:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1341,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "34982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34956:43:0"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "35031:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35030:9:0"
									},
									"scope": 1378,
									"src": "34931:352:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1398,
							"src": "31284:4001:0",
							"usedErrors": [
								174,
								635,
								638,
								944,
								949
							],
							"usedEvents": [
								955,
								1088,
								1094
							]
						},
						{
							"id": 1379,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "35322:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1380,
										"name": "VestingWallet",
										"nameLocations": [
											"35381:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1378,
										"src": "35381:13:0"
									},
									"id": 1381,
									"nodeType": "InheritanceSpecifier",
									"src": "35381:13:0"
								}
							],
							"canonicalName": "SpageroTokenVesting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1397,
							"linearizedBaseContracts": [
								1397,
								1378,
								1078,
								933
							],
							"name": "SpageroTokenVesting",
							"nameLocation": "35358:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "35645:2:0",
										"statements": []
									},
									"id": 1396,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1390,
													"name": "beneficiaryAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1383,
													"src": "35592:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1391,
													"name": "startTimestamp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1385,
													"src": "35612:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												{
													"id": 1392,
													"name": "durationSeconds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1387,
													"src": "35628:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												}
											],
											"id": 1393,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1389,
												"name": "VestingWallet",
												"nameLocations": [
													"35578:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1378,
												"src": "35578:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35578:66:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "beneficiaryAddress",
												"nameLocation": "35490:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "35482:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "startTimestamp",
												"nameLocation": "35525:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "35518:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "35518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "35556:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "35549:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1386,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "35549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35472:105:0"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35645:0:0"
									},
									"scope": 1397,
									"src": "35461:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1398,
							"src": "35349:300:0",
							"usedErrors": [
								174,
								635,
								638,
								944,
								949
							],
							"usedEvents": [
								955,
								1088,
								1094
							]
						}
					],
					"src": "164:35486:0"
				},
				"id": 0
			}
		}
	}
}