{
	"id": "c0edb43029eeb0c635d10d9e557faabb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"SpageroNFTMarket.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract SpageroNFTMarket is ReentrancyGuard {\r\n    struct Listing { address seller; address nft; uint256 tokenId; uint256 price; }\r\n    mapping(bytes32 => Listing) public listings;\r\n\r\n    event Listed(address indexed seller, address indexed nft, uint256 indexed tokenId, uint256 price);\r\n    event Cancelled(address indexed seller, address indexed nft, uint256 indexed tokenId);\r\n    event Purchased(address indexed buyer, address indexed nft, uint256 indexed tokenId, uint256 price);\r\n\r\n    function _key(address nft, uint256 tokenId) private pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(nft, tokenId));\r\n    }\r\n\r\n    function list(address nft, uint256 tokenId, uint256 price) external {\r\n        require(price > 0, \"price=0\");\r\n        IERC721 token = IERC721(nft);\r\n        require(token.ownerOf(tokenId) == msg.sender, \"not owner\");\r\n        require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),\r\n            \"market not approved\");\r\n        bytes32 k = _key(nft, tokenId);\r\n        listings[k] = Listing(msg.sender, nft, tokenId, price);\r\n        emit Listed(msg.sender, nft, tokenId, price);\r\n    }\r\n\r\n    function cancel(address nft, uint256 tokenId) external {\r\n        bytes32 k = _key(nft, tokenId);\r\n        Listing memory l = listings[k];\r\n        require(l.seller != address(0), \"not listed\");\r\n        require(l.seller == msg.sender, \"not seller\");\r\n        delete listings[k];\r\n        emit Cancelled(msg.sender, nft, tokenId);\r\n    }\r\n\r\n    function buy(address nft, uint256 tokenId) external payable nonReentrant {\r\n        bytes32 k = _key(nft, tokenId);\r\n        Listing memory l = listings[k];\r\n        require(l.seller != address(0), \"not listed\");\r\n        require(msg.value == l.price, \"bad value\");\r\n        delete listings[k];\r\n        (bool ok, ) = payable(l.seller).call{value: msg.value}(\"\");\r\n        require(ok, \"pay seller failed\");\r\n        IERC721(l.nft).safeTransferFrom(l.seller, msg.sender, l.tokenId);\r\n        emit Purchased(msg.sender, nft, tokenId, msg.value);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SpageroNFTMarket.sol": {
				"SpageroNFTMarket": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Cancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Listed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Purchased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "list",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroNFTMarket.sol\":187:2273  contract SpageroNFTMarket is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"SpageroNFTMarket.sol\":187:2273  contract SpageroNFTMarket is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SpageroNFTMarket.sol\":187:2273  contract SpageroNFTMarket is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98590ef9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xc18b8db4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xcce7ec13\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xdda342bb\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"SpageroNFTMarket.sol\":1375:1712  function cancel(address nft, uint256 tokenId) external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"SpageroNFTMarket.sol\":324:367  mapping(bytes32 => Listing) public listings */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap4\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      dup5\n      jump\n    tag_12:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":942:957   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":924:958   */\n      dup2\n      mstore\n        /* \"#utility.yul\":994:1009   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      dup6\n      add\n        /* \"#utility.yul\":967:1010   */\n      mstore\n        /* \"#utility.yul\":1026:1044   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1019:1053   */\n      mstore\n        /* \"#utility.yul\":1084:1086   */\n      0x60\n        /* \"#utility.yul\":1069:1087   */\n      dup3\n      add\n        /* \"#utility.yul\":1062:1096   */\n      mstore\n        /* \"#utility.yul\":873:876   */\n      0x80\n        /* \"#utility.yul\":858:877   */\n      add\n        /* \"SpageroNFTMarket.sol\":324:367  mapping(bytes32 => Listing) public listings */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SpageroNFTMarket.sol\":1720:2270  function buy(address nft, uint256 tokenId) external payable nonReentrant {... */\n    tag_4:\n      tag_7\n      tag_19\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n        /* \"SpageroNFTMarket.sol\":830:1367  function list(address nft, uint256 tokenId, uint256 price) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_7\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"SpageroNFTMarket.sol\":1375:1712  function cancel(address nft, uint256 tokenId) external {... */\n    tag_10:\n        /* \"SpageroNFTMarket.sol\":1441:1450  bytes32 k */\n      0x00\n        /* \"SpageroNFTMarket.sol\":1453:1471  _key(nft, tokenId) */\n      tag_27\n        /* \"SpageroNFTMarket.sol\":1458:1461  nft */\n      dup4\n        /* \"SpageroNFTMarket.sol\":1463:1470  tokenId */\n      dup4\n        /* \"SpageroNFTMarket.sol\":1453:1457  _key */\n      tag_28\n        /* \"SpageroNFTMarket.sol\":1453:1471  _key(nft, tokenId) */\n      jump\t// in\n    tag_27:\n        /* \"SpageroNFTMarket.sol\":1482:1498  Listing memory l */\n      0x00\n        /* \"SpageroNFTMarket.sol\":1501:1512  listings[k] */\n      dup2\n      dup2\n      mstore\n        /* \"SpageroNFTMarket.sol\":1501:1509  listings */\n      0x01\n        /* \"SpageroNFTMarket.sol\":1501:1512  listings[k] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"SpageroNFTMarket.sol\":1482:1512  Listing memory l = listings[k] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      swap5\n      dup4\n      add\n      sload\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n        /* \"SpageroNFTMarket.sol\":1441:1471  bytes32 k = _key(nft, tokenId) */\n      swap2\n      swap3\n      pop\n        /* \"SpageroNFTMarket.sol\":1482:1512  Listing memory l = listings[k] */\n      swap1\n        /* \"SpageroNFTMarket.sol\":1523:1568  require(l.seller != address(0), \"not listed\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1697:1699   */\n      0x20\n        /* \"SpageroNFTMarket.sol\":1523:1568  require(l.seller != address(0), \"not listed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1700   */\n      mstore\n        /* \"#utility.yul\":1736:1738   */\n      0x0a\n        /* \"#utility.yul\":1716:1734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1709:1739   */\n      mstore\n      shl(0xb2, 0x1b9bdd081b1a5cdd1959)\n        /* \"#utility.yul\":1755:1773   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1748:1788   */\n      mstore\n        /* \"#utility.yul\":1805:1823   */\n      0x64\n      add\n        /* \"SpageroNFTMarket.sol\":1523:1568  require(l.seller != address(0), \"not listed\") */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"SpageroNFTMarket.sol\":1587:1595  l.seller */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":1587:1609  l.seller == msg.sender */\n      and\n        /* \"SpageroNFTMarket.sol\":1599:1609  msg.sender */\n      caller\n        /* \"SpageroNFTMarket.sol\":1587:1609  l.seller == msg.sender */\n      eq\n        /* \"SpageroNFTMarket.sol\":1579:1624  require(l.seller == msg.sender, \"not seller\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2036:2038   */\n      0x20\n        /* \"SpageroNFTMarket.sol\":1579:1624  require(l.seller == msg.sender, \"not seller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2018:2039   */\n      mstore\n        /* \"#utility.yul\":2075:2077   */\n      0x0a\n        /* \"#utility.yul\":2055:2073   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2048:2078   */\n      mstore\n      shl(0xb1, 0x3737ba1039b2b63632b9)\n        /* \"#utility.yul\":2094:2112   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2087:2127   */\n      mstore\n        /* \"#utility.yul\":2144:2162   */\n      0x64\n      add\n        /* \"SpageroNFTMarket.sol\":1579:1624  require(l.seller == msg.sender, \"not seller\") */\n      tag_30\n        /* \"#utility.yul\":1834:2168   */\n      jump\n        /* \"SpageroNFTMarket.sol\":1579:1624  require(l.seller == msg.sender, \"not seller\") */\n    tag_32:\n        /* \"SpageroNFTMarket.sol\":1642:1653  listings[k] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"SpageroNFTMarket.sol\":1642:1650  listings */\n      0x01\n        /* \"SpageroNFTMarket.sol\":1642:1653  listings[k] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SpageroNFTMarket.sol\":1635:1653  delete listings[k] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      swap3\n      dup2\n      add\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap1\n      swap3\n      sstore\n      0x02\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x03\n      swap1\n      swap2\n      add\n      dup3\n      swap1\n      sstore\n        /* \"SpageroNFTMarket.sol\":1669:1704  Cancelled(msg.sender, nft, tokenId) */\n      mload\n        /* \"SpageroNFTMarket.sol\":1696:1703  tokenId */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":1669:1704  Cancelled(msg.sender, nft, tokenId) */\n      dup8\n      and\n      swap2\n        /* \"SpageroNFTMarket.sol\":1679:1689  msg.sender */\n      caller\n      swap2\n        /* \"SpageroNFTMarket.sol\":1669:1704  Cancelled(msg.sender, nft, tokenId) */\n      0x915fb8c652d6245752cc491b71bd8e87ab6761417f8d2ca353c8055103294c03\n      swap2\n      log4\n        /* \"SpageroNFTMarket.sol\":1430:1712  {... */\n      pop\n      pop\n        /* \"SpageroNFTMarket.sol\":1375:1712  function cancel(address nft, uint256 tokenId) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroNFTMarket.sol\":1720:2270  function buy(address nft, uint256 tokenId) external payable nonReentrant {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_36\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_37\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_36:\n        /* \"SpageroNFTMarket.sol\":1804:1813  bytes32 k */\n      0x00\n        /* \"SpageroNFTMarket.sol\":1816:1834  _key(nft, tokenId) */\n      tag_39\n        /* \"SpageroNFTMarket.sol\":1821:1824  nft */\n      dup4\n        /* \"SpageroNFTMarket.sol\":1826:1833  tokenId */\n      dup4\n        /* \"SpageroNFTMarket.sol\":1816:1820  _key */\n      tag_28\n        /* \"SpageroNFTMarket.sol\":1816:1834  _key(nft, tokenId) */\n      jump\t// in\n    tag_39:\n        /* \"SpageroNFTMarket.sol\":1845:1861  Listing memory l */\n      0x00\n        /* \"SpageroNFTMarket.sol\":1864:1875  listings[k] */\n      dup2\n      dup2\n      mstore\n        /* \"SpageroNFTMarket.sol\":1864:1872  listings */\n      0x01\n        /* \"SpageroNFTMarket.sol\":1864:1875  listings[k] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"SpageroNFTMarket.sol\":1845:1875  Listing memory l = listings[k] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      swap5\n      dup4\n      add\n      sload\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n        /* \"SpageroNFTMarket.sol\":1804:1834  bytes32 k = _key(nft, tokenId) */\n      swap2\n      swap3\n      pop\n        /* \"SpageroNFTMarket.sol\":1845:1875  Listing memory l = listings[k] */\n      swap1\n        /* \"SpageroNFTMarket.sol\":1886:1931  require(l.seller != address(0), \"not listed\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1697:1699   */\n      0x20\n        /* \"SpageroNFTMarket.sol\":1886:1931  require(l.seller != address(0), \"not listed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1700   */\n      mstore\n        /* \"#utility.yul\":1736:1738   */\n      0x0a\n        /* \"#utility.yul\":1716:1734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1709:1739   */\n      mstore\n      shl(0xb2, 0x1b9bdd081b1a5cdd1959)\n        /* \"#utility.yul\":1755:1773   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1748:1788   */\n      mstore\n        /* \"#utility.yul\":1805:1823   */\n      0x64\n      add\n        /* \"SpageroNFTMarket.sol\":1886:1931  require(l.seller != address(0), \"not listed\") */\n      tag_30\n        /* \"#utility.yul\":1495:1829   */\n      jump\n        /* \"SpageroNFTMarket.sol\":1886:1931  require(l.seller != address(0), \"not listed\") */\n    tag_40:\n        /* \"SpageroNFTMarket.sol\":1963:1964  l */\n      dup1\n        /* \"SpageroNFTMarket.sol\":1963:1970  l.price */\n      0x60\n      add\n      mload\n        /* \"SpageroNFTMarket.sol\":1950:1959  msg.value */\n      callvalue\n        /* \"SpageroNFTMarket.sol\":1950:1970  msg.value == l.price */\n      eq\n        /* \"SpageroNFTMarket.sol\":1942:1984  require(msg.value == l.price, \"bad value\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2375:2377   */\n      0x20\n        /* \"SpageroNFTMarket.sol\":1942:1984  require(msg.value == l.price, \"bad value\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2357:2378   */\n      mstore\n        /* \"#utility.yul\":2414:2415   */\n      0x09\n        /* \"#utility.yul\":2394:2412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2387:2416   */\n      mstore\n      shl(0xb8, 0x6261642076616c7565)\n        /* \"#utility.yul\":2432:2450   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2425:2464   */\n      mstore\n        /* \"#utility.yul\":2481:2499   */\n      0x64\n      add\n        /* \"SpageroNFTMarket.sol\":1942:1984  require(msg.value == l.price, \"bad value\") */\n      tag_30\n        /* \"#utility.yul\":2173:2505   */\n      jump\n        /* \"SpageroNFTMarket.sol\":1942:1984  require(msg.value == l.price, \"bad value\") */\n    tag_42:\n        /* \"SpageroNFTMarket.sol\":2002:2013  listings[k] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"SpageroNFTMarket.sol\":2002:2010  listings */\n      0x01\n        /* \"SpageroNFTMarket.sol\":2002:2013  listings[k] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SpageroNFTMarket.sol\":1995:2013  delete listings[k] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      swap3\n      dup2\n      add\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap1\n      swap3\n      sstore\n      0x02\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x03\n      swap1\n      swap2\n      add\n      dup3\n      swap1\n      sstore\n        /* \"SpageroNFTMarket.sol\":2046:2054  l.seller */\n      dup3\n      mload\n        /* \"SpageroNFTMarket.sol\":2038:2082  payable(l.seller).call{value: msg.value}(\"\") */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":2038:2060  payable(l.seller).call */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"SpageroNFTMarket.sol\":2068:2077  msg.value */\n      callvalue\n      swap1\n        /* \"SpageroNFTMarket.sol\":2002:2013  listings[k] */\n      dup4\n        /* \"SpageroNFTMarket.sol\":2038:2082  payable(l.seller).call{value: msg.value}(\"\") */\n      dup2\n        /* \"SpageroNFTMarket.sol\":2002:2013  listings[k] */\n      dup2\n        /* \"SpageroNFTMarket.sol\":2038:2082  payable(l.seller).call{value: msg.value}(\"\") */\n      dup2\n        /* \"SpageroNFTMarket.sol\":2068:2077  msg.value */\n      dup6\n        /* \"SpageroNFTMarket.sol\":2038:2060  payable(l.seller).call */\n      dup8\n        /* \"SpageroNFTMarket.sol\":2038:2082  payable(l.seller).call{value: msg.value}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_49\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_48)\n    tag_49:\n      0x60\n      swap2\n      pop\n    tag_48:\n      pop\n        /* \"SpageroNFTMarket.sol\":2024:2082  (bool ok, ) = payable(l.seller).call{value: msg.value}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"SpageroNFTMarket.sol\":2101:2103  ok */\n      dup1\n        /* \"SpageroNFTMarket.sol\":2093:2125  require(ok, \"pay seller failed\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2922:2924   */\n      0x20\n        /* \"SpageroNFTMarket.sol\":2093:2125  require(ok, \"pay seller failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2904:2925   */\n      mstore\n        /* \"#utility.yul\":2961:2963   */\n      0x11\n        /* \"#utility.yul\":2941:2959   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2934:2964   */\n      mstore\n      shl(0x7a, 0x1c185e481cd95b1b195c8819985a5b1959)\n        /* \"#utility.yul\":2980:2998   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2973:3020   */\n      mstore\n        /* \"#utility.yul\":3037:3055   */\n      0x64\n      add\n        /* \"SpageroNFTMarket.sol\":2093:2125  require(ok, \"pay seller failed\") */\n      tag_30\n        /* \"#utility.yul\":2720:3061   */\n      jump\n        /* \"SpageroNFTMarket.sol\":2093:2125  require(ok, \"pay seller failed\") */\n    tag_50:\n        /* \"SpageroNFTMarket.sol\":2144:2149  l.nft */\n      0x20\n      dup3\n      add\n      mload\n        /* \"SpageroNFTMarket.sol\":2168:2176  l.seller */\n      dup3\n      mload\n        /* \"SpageroNFTMarket.sol\":2190:2199  l.tokenId */\n      0x40\n      dup1\n      dup6\n      add\n      mload\n        /* \"SpageroNFTMarket.sol\":2136:2200  IERC721(l.nft).safeTransferFrom(l.seller, msg.sender, l.tokenId) */\n      swap1\n      mload\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3324:3339   */\n      swap3\n      dup4\n      and\n        /* \"SpageroNFTMarket.sol\":2136:2200  IERC721(l.nft).safeTransferFrom(l.seller, msg.sender, l.tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3306:3340   */\n      mstore\n        /* \"SpageroNFTMarket.sol\":2178:2188  msg.sender */\n      caller\n        /* \"#utility.yul\":3356:3374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3349:3392   */\n      mstore\n        /* \"#utility.yul\":3408:3426   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3401:3435   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"SpageroNFTMarket.sol\":2136:2167  IERC721(l.nft).safeTransferFrom */\n      swap2\n      and\n      swap1\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":3241:3259   */\n      0x64\n      add\n        /* \"SpageroNFTMarket.sol\":2136:2200  IERC721(l.nft).safeTransferFrom(l.seller, msg.sender, l.tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n        /* \"SpageroNFTMarket.sol\":2243:2250  tokenId */\n      dup4\n        /* \"SpageroNFTMarket.sol\":2238:2241  nft */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":2216:2262  Purchased(msg.sender, nft, tokenId, msg.value) */\n      and\n        /* \"SpageroNFTMarket.sol\":2226:2236  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":2216:2262  Purchased(msg.sender, nft, tokenId, msg.value) */\n      and\n      0xa326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49\n        /* \"SpageroNFTMarket.sol\":2252:2261  msg.value */\n      callvalue\n        /* \"SpageroNFTMarket.sol\":2216:2262  Purchased(msg.sender, nft, tokenId, msg.value) */\n      mload(0x40)\n      tag_58\n      swap2\n        /* \"#utility.yul\":3592:3617   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3580:3582   */\n      0x20\n        /* \"#utility.yul\":3565:3583   */\n      add\n      swap1\n        /* \"#utility.yul\":3446:3623   */\n      jump\n        /* \"SpageroNFTMarket.sol\":2216:2262  Purchased(msg.sender, nft, tokenId, msg.value) */\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"SpageroNFTMarket.sol\":1793:2270  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_60\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_60:\n        /* \"SpageroNFTMarket.sol\":1720:2270  function buy(address nft, uint256 tokenId) external payable nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroNFTMarket.sol\":830:1367  function list(address nft, uint256 tokenId, uint256 price) external {... */\n    tag_25:\n        /* \"SpageroNFTMarket.sol\":925:926  0 */\n      0x00\n        /* \"SpageroNFTMarket.sol\":917:922  price */\n      dup2\n        /* \"SpageroNFTMarket.sol\":917:926  price > 0 */\n      gt\n        /* \"SpageroNFTMarket.sol\":909:938  require(price > 0, \"price=0\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3830:3832   */\n      0x20\n        /* \"SpageroNFTMarket.sol\":909:938  require(price > 0, \"price=0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3812:3833   */\n      mstore\n        /* \"#utility.yul\":3869:3870   */\n      0x07\n        /* \"#utility.yul\":3849:3867   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3842:3871   */\n      mstore\n      shl(0xcc, 0x070726963653d3)\n        /* \"#utility.yul\":3887:3905   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3880:3917   */\n      mstore\n        /* \"#utility.yul\":3934:3952   */\n      0x64\n      add\n        /* \"SpageroNFTMarket.sol\":909:938  require(price > 0, \"price=0\") */\n      tag_30\n        /* \"#utility.yul\":3628:3958   */\n      jump\n        /* \"SpageroNFTMarket.sol\":909:938  require(price > 0, \"price=0\") */\n    tag_63:\n        /* \"SpageroNFTMarket.sol\":996:1018  token.ownerOf(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3592:3617   */\n      dup4\n      swap1\n      mstore\n        /* \"SpageroNFTMarket.sol\":973:976  nft */\n      dup4\n      swap1\n        /* \"SpageroNFTMarket.sol\":1022:1032  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":996:1009  token.ownerOf */\n      dup4\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":3565:3583   */\n      0x24\n      add\n        /* \"SpageroNFTMarket.sol\":996:1018  token.ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":996:1032  token.ownerOf(tokenId) == msg.sender */\n      and\n      eq\n        /* \"SpageroNFTMarket.sol\":988:1046  require(token.ownerOf(tokenId) == msg.sender, \"not owner\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"SpageroNFTMarket.sol\":988:1046  require(token.ownerOf(tokenId) == msg.sender, \"not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4403:4424   */\n      mstore\n        /* \"#utility.yul\":4460:4461   */\n      0x09\n        /* \"#utility.yul\":4440:4458   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4433:4462   */\n      mstore\n      shl(0xb9, 0x3737ba1037bbb732b9)\n        /* \"#utility.yul\":4478:4496   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4471:4510   */\n      mstore\n        /* \"#utility.yul\":4527:4545   */\n      0x64\n      add\n        /* \"SpageroNFTMarket.sol\":988:1046  require(token.ownerOf(tokenId) == msg.sender, \"not owner\") */\n      tag_30\n        /* \"#utility.yul\":4219:4551   */\n      jump\n        /* \"SpageroNFTMarket.sol\":988:1046  require(token.ownerOf(tokenId) == msg.sender, \"not owner\") */\n    tag_71:\n        /* \"SpageroNFTMarket.sol\":1065:1114  token.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xe985e9c5)\n      dup2\n      mstore\n        /* \"SpageroNFTMarket.sol\":1088:1098  msg.sender */\n      caller\n        /* \"SpageroNFTMarket.sol\":1065:1114  token.isApprovedForAll(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4768:4802   */\n      mstore\n        /* \"SpageroNFTMarket.sol\":1108:1112  this */\n      address\n        /* \"#utility.yul\":4818:4836   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4811:4854   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":1065:1087  token.isApprovedForAll */\n      dup3\n      and\n      swap1\n      0xe985e9c5\n      swap1\n        /* \"#utility.yul\":4703:4721   */\n      0x44\n      add\n        /* \"SpageroNFTMarket.sol\":1065:1114  token.isApprovedForAll(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"SpageroNFTMarket.sol\":1065:1161  token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this) */\n      dup1\n      tag_80\n      jumpi\n      pop\n        /* \"SpageroNFTMarket.sol\":1118:1144  token.getApproved(tokenId) */\n      mload(0x40)\n      shl(0xe2, 0x020604bf)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3592:3617   */\n      dup5\n      swap1\n      mstore\n        /* \"SpageroNFTMarket.sol\":1156:1160  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":1118:1135  token.getApproved */\n      dup4\n      and\n      swap1\n      0x081812fc\n      swap1\n        /* \"#utility.yul\":3565:3583   */\n      0x24\n      add\n        /* \"SpageroNFTMarket.sol\":1118:1144  token.getApproved(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket.sol\":1118:1161  token.getApproved(tokenId) == address(this) */\n      and\n      eq\n        /* \"SpageroNFTMarket.sol\":1065:1161  token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this) */\n    tag_80:\n        /* \"SpageroNFTMarket.sol\":1057:1198  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),... */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5349:5351   */\n      0x20\n        /* \"SpageroNFTMarket.sol\":1057:1198  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5331:5352   */\n      mstore\n        /* \"#utility.yul\":5388:5390   */\n      0x13\n        /* \"#utility.yul\":5368:5386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5361:5391   */\n      mstore\n      shl(0x6a, 0x1b585c9ad95d081b9bdd08185c1c1c9bdd9959)\n        /* \"#utility.yul\":5407:5425   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5400:5449   */\n      mstore\n        /* \"#utility.yul\":5466:5484   */\n      0x64\n      add\n        /* \"SpageroNFTMarket.sol\":1057:1198  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),... */\n      tag_30\n        /* \"#utility.yul\":5147:5490   */\n      jump\n        /* \"SpageroNFTMarket.sol\":1057:1198  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),... */\n    tag_85:\n        /* \"SpageroNFTMarket.sol\":1209:1218  bytes32 k */\n      0x00\n        /* \"SpageroNFTMarket.sol\":1221:1239  _key(nft, tokenId) */\n      tag_88\n        /* \"SpageroNFTMarket.sol\":1226:1229  nft */\n      dup6\n        /* \"SpageroNFTMarket.sol\":1231:1238  tokenId */\n      dup6\n        /* \"SpageroNFTMarket.sol\":1221:1225  _key */\n      tag_28\n        /* \"SpageroNFTMarket.sol\":1221:1239  _key(nft, tokenId) */\n      jump\t// in\n    tag_88:\n        /* \"SpageroNFTMarket.sol\":1264:1304  Listing(msg.sender, nft, tokenId, price) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n        /* \"SpageroNFTMarket.sol\":1272:1282  msg.sender */\n      caller\n        /* \"SpageroNFTMarket.sol\":1264:1304  Listing(msg.sender, nft, tokenId, price) */\n      dup1\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n      dup6\n      dup8\n      add\n      dup13\n      dup2\n      mstore\n      0x60\n      dup8\n      add\n      dup13\n      dup2\n      mstore\n      0x00\n        /* \"SpageroNFTMarket.sol\":1250:1261  listings[k] */\n      dup11\n      dup2\n      mstore\n        /* \"SpageroNFTMarket.sol\":1250:1258  listings */\n      0x01\n        /* \"SpageroNFTMarket.sol\":1250:1261  listings[k] */\n      dup1\n      dup7\n      mstore\n      swap1\n      dup11\n      swap1\n      keccak256\n        /* \"SpageroNFTMarket.sol\":1250:1304  listings[k] = Listing(msg.sender, nft, tokenId, price) */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup9\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      dup11\n      sstore\n      swap4\n      mload\n      swap1\n      dup10\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap8\n      and\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap5\n      sstore\n      swap3\n      mload\n      0x02\n      dup7\n      add\n      sstore\n      swap2\n      mload\n      0x03\n      swap1\n      swap5\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"SpageroNFTMarket.sol\":1320:1359  Listed(msg.sender, nft, tokenId, price) */\n      swap3\n      mload\n        /* \"#utility.yul\":3592:3617   */\n      dup8\n      dup2\n      mstore\n        /* \"SpageroNFTMarket.sol\":1250:1261  listings[k] */\n      swap4\n      swap5\n      pop\n        /* \"SpageroNFTMarket.sol\":1264:1304  Listing(msg.sender, nft, tokenId, price) */\n      dup8\n      swap4\n      swap2\n      swap3\n        /* \"SpageroNFTMarket.sol\":1272:1282  msg.sender */\n      swap1\n      swap2\n        /* \"SpageroNFTMarket.sol\":1320:1359  Listed(msg.sender, nft, tokenId, price) */\n      0xd9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca\n      swap2\n        /* \"#utility.yul\":3565:3583   */\n      add\n        /* \"SpageroNFTMarket.sol\":1320:1359  Listed(msg.sender, nft, tokenId, price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"SpageroNFTMarket.sol\":898:1367  {... */\n      pop\n      pop\n        /* \"SpageroNFTMarket.sol\":830:1367  function list(address nft, uint256 tokenId, uint256 price) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroNFTMarket.sol\":680:822  function _key(address nft, uint256 tokenId) private pure returns (bytes32) {... */\n    tag_28:\n        /* \"SpageroNFTMarket.sol\":783:813  abi.encodePacked(nft, tokenId) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":5672:5674   */\n      0x60\n        /* \"#utility.yul\":5668:5683   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":5664:5717   */\n      and\n        /* \"SpageroNFTMarket.sol\":783:813  abi.encodePacked(nft, tokenId) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":5652:5718   */\n      mstore\n        /* \"#utility.yul\":5734:5746   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":5727:5755   */\n      dup3\n      swap1\n      mstore\n        /* \"SpageroNFTMarket.sol\":746:753  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":5771:5783   */\n      0x54\n      add\n        /* \"SpageroNFTMarket.sol\":783:813  abi.encodePacked(nft, tokenId) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"SpageroNFTMarket.sol\":773:814  keccak256(abi.encodePacked(nft, tokenId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"SpageroNFTMarket.sol\":766:814  return keccak256(abi.encodePacked(nft, tokenId)) */\n      swap1\n      pop\n        /* \"SpageroNFTMarket.sol\":680:822  function _key(address nft, uint256 tokenId) private pure returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5996:5998   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5978:5999   */\n      mstore\n        /* \"#utility.yul\":6035:6037   */\n      0x1f\n        /* \"#utility.yul\":6015:6033   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6008:6038   */\n      mstore\n        /* \"#utility.yul\":6074:6107   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6054:6072   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6047:6108   */\n      mstore\n        /* \"#utility.yul\":6125:6143   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_30\n        /* \"#utility.yul\":5794:6149   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_94:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":69:139   */\n    tag_101:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:465   */\n    tag_9:\n        /* \"#utility.yul\":218:224   */\n      0x00\n        /* \"#utility.yul\":226:232   */\n      dup1\n        /* \"#utility.yul\":279:281   */\n      0x40\n        /* \"#utility.yul\":267:276   */\n      dup4\n        /* \"#utility.yul\":258:265   */\n      dup6\n        /* \"#utility.yul\":254:277   */\n      sub\n        /* \"#utility.yul\":250:282   */\n      slt\n        /* \"#utility.yul\":247:299   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":295:296   */\n      0x00\n        /* \"#utility.yul\":292:293   */\n      dup1\n        /* \"#utility.yul\":285:297   */\n      revert\n        /* \"#utility.yul\":247:299   */\n    tag_103:\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":321:344   */\n      calldataload\n        /* \"#utility.yul\":353:384   */\n      tag_104\n        /* \"#utility.yul\":378:383   */\n      dup2\n        /* \"#utility.yul\":353:384   */\n      tag_98\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":403:408   */\n      swap5\n        /* \"#utility.yul\":455:457   */\n      0x20\n        /* \"#utility.yul\":440:458   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":427:459   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":150:465   */\n      jump\t// out\n        /* \"#utility.yul\":470:650   */\n    tag_14:\n        /* \"#utility.yul\":529:535   */\n      0x00\n        /* \"#utility.yul\":582:584   */\n      0x20\n        /* \"#utility.yul\":570:579   */\n      dup3\n        /* \"#utility.yul\":561:568   */\n      dup5\n        /* \"#utility.yul\":557:580   */\n      sub\n        /* \"#utility.yul\":553:585   */\n      slt\n        /* \"#utility.yul\":550:602   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":598:599   */\n      0x00\n        /* \"#utility.yul\":595:596   */\n      dup1\n        /* \"#utility.yul\":588:600   */\n      revert\n        /* \"#utility.yul\":550:602   */\n    tag_106:\n      pop\n        /* \"#utility.yul\":621:644   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":470:650   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1107:1490   */\n    tag_24:\n        /* \"#utility.yul\":1184:1190   */\n      0x00\n        /* \"#utility.yul\":1192:1198   */\n      dup1\n        /* \"#utility.yul\":1200:1206   */\n      0x00\n        /* \"#utility.yul\":1253:1255   */\n      0x60\n        /* \"#utility.yul\":1241:1250   */\n      dup5\n        /* \"#utility.yul\":1232:1239   */\n      dup7\n        /* \"#utility.yul\":1228:1251   */\n      sub\n        /* \"#utility.yul\":1224:1256   */\n      slt\n        /* \"#utility.yul\":1221:1273   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1269:1270   */\n      0x00\n        /* \"#utility.yul\":1266:1267   */\n      dup1\n        /* \"#utility.yul\":1259:1271   */\n      revert\n        /* \"#utility.yul\":1221:1273   */\n    tag_109:\n        /* \"#utility.yul\":1308:1317   */\n      dup4\n        /* \"#utility.yul\":1295:1318   */\n      calldataload\n        /* \"#utility.yul\":1327:1358   */\n      tag_110\n        /* \"#utility.yul\":1352:1357   */\n      dup2\n        /* \"#utility.yul\":1327:1358   */\n      tag_98\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1377:1382   */\n      swap6\n        /* \"#utility.yul\":1429:1431   */\n      0x20\n        /* \"#utility.yul\":1414:1432   */\n      dup6\n      add\n        /* \"#utility.yul\":1401:1433   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1480:1482   */\n      0x40\n        /* \"#utility.yul\":1465:1483   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":1452:1484   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1107:1490   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3963:4214   */\n    tag_70:\n        /* \"#utility.yul\":4033:4039   */\n      0x00\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4074:4083   */\n      dup3\n        /* \"#utility.yul\":4065:4072   */\n      dup5\n        /* \"#utility.yul\":4061:4084   */\n      sub\n        /* \"#utility.yul\":4057:4089   */\n      slt\n        /* \"#utility.yul\":4054:4106   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":4102:4103   */\n      0x00\n        /* \"#utility.yul\":4099:4100   */\n      dup1\n        /* \"#utility.yul\":4092:4104   */\n      revert\n        /* \"#utility.yul\":4054:4106   */\n    tag_120:\n        /* \"#utility.yul\":4134:4143   */\n      dup2\n        /* \"#utility.yul\":4128:4144   */\n      mload\n        /* \"#utility.yul\":4153:4184   */\n      tag_121\n        /* \"#utility.yul\":4178:4183   */\n      dup2\n        /* \"#utility.yul\":4153:4184   */\n      tag_98\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4203:4208   */\n      swap4\n        /* \"#utility.yul\":3963:4214   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4865:5142   */\n    tag_79:\n        /* \"#utility.yul\":4932:4938   */\n      0x00\n        /* \"#utility.yul\":4985:4987   */\n      0x20\n        /* \"#utility.yul\":4973:4982   */\n      dup3\n        /* \"#utility.yul\":4964:4971   */\n      dup5\n        /* \"#utility.yul\":4960:4983   */\n      sub\n        /* \"#utility.yul\":4956:4988   */\n      slt\n        /* \"#utility.yul\":4953:5005   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":5001:5002   */\n      0x00\n        /* \"#utility.yul\":4998:4999   */\n      dup1\n        /* \"#utility.yul\":4991:5003   */\n      revert\n        /* \"#utility.yul\":4953:5005   */\n    tag_125:\n        /* \"#utility.yul\":5033:5042   */\n      dup2\n        /* \"#utility.yul\":5027:5043   */\n      mload\n        /* \"#utility.yul\":5086:5091   */\n      dup1\n        /* \"#utility.yul\":5079:5092   */\n      iszero\n        /* \"#utility.yul\":5072:5093   */\n      iszero\n        /* \"#utility.yul\":5065:5070   */\n      dup2\n        /* \"#utility.yul\":5062:5094   */\n      eq\n        /* \"#utility.yul\":5052:5112   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":5108:5109   */\n      0x00\n        /* \"#utility.yul\":5105:5106   */\n      dup1\n        /* \"#utility.yul\":5098:5110   */\n      revert\n\n    auxdata: 0xa26469706673582212209540fe69c50666e1d402592f3e7cf817521038f8a2882a7eb5340c0d0d51a92e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060015f55610948806100215f395ff3fe60806040526004361061003e575f3560e01c806398590ef914610042578063c18b8db414610063578063cce7ec13146100e1578063dda342bb146100f4575b5f80fd5b34801561004d575f80fd5b5061006161005c36600461085e565b610113565b005b34801561006e575f80fd5b506100b261007d366004610888565b600160208190525f918252604090912080549181015460028201546003909201546001600160a01b0393841693909116919084565b604080516001600160a01b03958616815294909316602085015291830152606082015260800160405180910390f35b6100616100ef36600461085e565b610265565b3480156100ff575f80fd5b5061006161010e36600461089f565b6104da565b5f61011e83836107aa565b5f81815260016020818152604092839020835160808101855281546001600160a01b039081168083529483015416928101929092526002810154938201939093526003909201546060830152919250906101ac5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064015b60405180910390fd5b80516001600160a01b031633146101f25760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b63632b960b11b60448201526064016101a3565b5f82815260016020819052604080832080546001600160a01b0319908116825592810180549093169092556002820183905560039091018290555184916001600160a01b0387169133917f915fb8c652d6245752cc491b71bd8e87ab6761417f8d2ca353c8055103294c0391a450505050565b61026d6107f0565b5f61027883836107aa565b5f81815260016020818152604092839020835160808101855281546001600160a01b039081168083529483015416928101929092526002810154938201939093526003909201546060830152919250906103015760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064016101a3565b806060015134146103405760405162461bcd60e51b81526020600482015260096024820152686261642076616c756560b81b60448201526064016101a3565b5f82815260016020819052604080832080546001600160a01b031990811682559281018054909316909255600282018390556003909101829055825190516001600160a01b039091169034908381818185875af1925050503d805f81146103c2576040519150601f19603f3d011682016040523d82523d5f602084013e6103c7565b606091505b505090508061040c5760405162461bcd60e51b81526020600482015260116024820152701c185e481cd95b1b195c8819985a5b1959607a1b60448201526064016101a3565b602082015182516040808501519051632142170760e11b81526001600160a01b03928316600482015233602482015260448101919091529116906342842e0e906064015f604051808303815f87803b158015610466575f80fd5b505af1158015610478573d5f803e3d5ffd5b5050505083856001600160a01b0316336001600160a01b03167fa326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49346040516104c291815260200190565b60405180910390a45050506104d660015f55565b5050565b5f81116105135760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064016101a3565b6040516331a9108f60e11b815260048101839052839033906001600160a01b03831690636352211e90602401602060405180830381865afa15801561055a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061057e91906108d1565b6001600160a01b0316146105c05760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016101a3565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0382169063e985e9c590604401602060405180830381865afa158015610608573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062c91906108f3565b806106a6575060405163020604bf60e21b81526004810184905230906001600160a01b0383169063081812fc90602401602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b91906108d1565b6001600160a01b0316145b6106e85760405162461bcd60e51b81526020600482015260136024820152721b585c9ad95d081b9bdd08185c1c1c9bdd9959606a1b60448201526064016101a3565b5f6106f385856107aa565b60408051608081018252338082526001600160a01b0389811660208085018281528587018c8152606087018c81525f8a81526001808652908a9020985189549088166001600160a01b0319918216178a55935190890180549190971693169290921790945592516002860155915160039094019390935592518781529394508793919290917fd9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca910160405180910390a45050505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290525f9060540160405160208183030381529060405280519060200120905092915050565b60025f54036108415760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101a3565b60025f55565b6001600160a01b038116811461085b575f80fd5b50565b5f806040838503121561086f575f80fd5b823561087a81610847565b946020939093013593505050565b5f60208284031215610898575f80fd5b5035919050565b5f805f606084860312156108b1575f80fd5b83356108bc81610847565b95602085013595506040909401359392505050565b5f602082840312156108e1575f80fd5b81516108ec81610847565b9392505050565b5f60208284031215610903575f80fd5b815180151581146108ec575f80fdfea26469706673582212209540fe69c50666e1d402592f3e7cf817521038f8a2882a7eb5340c0d0d51a92e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 SSTORE PUSH2 0x948 DUP1 PUSH2 0x21 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98590EF9 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0xC18B8DB4 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xCCE7EC13 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xDDA342BB EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0xEF CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH0 PUSH2 0x11E DUP4 DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE SWAP5 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 PUSH2 0x1AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081B1A5CDD1959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x3737BA1039B2B63632B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE MLOAD DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0x915FB8C652D6245752CC491B71BD8E87AB6761417F8D2CA353C8055103294C03 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x26D PUSH2 0x7F0 JUMP JUMPDEST PUSH0 PUSH2 0x278 DUP4 DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE SWAP5 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081B1A5CDD1959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD CALLVALUE EQ PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6261642076616C7565 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE DUP3 MLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1C185E481CD95B1B195C8819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD SWAP1 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x478 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA326259EC721617ACD3CB2A00BCBEAC91EEFE409880E49AA2BBF473ED648DA49 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x4D6 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x70726963653D3 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE DUP4 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x608 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST DUP1 PUSH2 0x6A6 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B585C9AD95D081B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 PUSH2 0x6F3 DUP6 DUP6 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP13 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP13 DUP2 MSTORE PUSH0 DUP11 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD SWAP1 DUP10 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP8 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD DUP8 DUP2 MSTORE SWAP4 SWAP5 POP DUP8 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xD9D69FEE247951CC283DC6F5B64C36CE396A36146405A798B86EBFD113C8B5CA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x86F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x87A DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x898 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x8BC DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8EC DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8EC JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 BLOCKHASH INVALID PUSH10 0xC50666E1D402592F3E7C 0xF8 OR MSTORE LT CODESIZE 0xF8 LOG2 DUP9 0x2A PUSH31 0xB5340C0D0D51A92E64736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "187:2086:3:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:0;1821:7;:22;187:2086:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_key_259": {
									"entryPoint": 1962,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 2032,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buy_488": {
									"entryPoint": 613,
									"id": 488,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cancel_398": {
									"entryPoint": 275,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@list_344": {
									"entryPoint": 1242,
									"id": 344,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@listings_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6151:4",
										"nodeType": "YulBlock",
										"src": "0:6151:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:86:4",
													"nodeType": "YulBlock",
													"src": "59:86:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:4",
																"nodeType": "YulBlock",
																"src": "123:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:4",
																					"nodeType": "YulLiteral",
																					"src": "132:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:4",
																					"nodeType": "YulLiteral",
																					"src": "135:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:4"
																			},
																			"nativeSrc": "125:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:4"
																		},
																		"nativeSrc": "125:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "108:3:4",
																										"nodeType": "YulLiteral",
																										"src": "108:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "113:1:4",
																										"nodeType": "YulLiteral",
																										"src": "113:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "104:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:4"
																								},
																								"nativeSrc": "104:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "117:1:4",
																								"nodeType": "YulLiteral",
																								"src": "117:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "100:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:4"
																						},
																						"nativeSrc": "100:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:4"
																				},
																				"nativeSrc": "89:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:4"
																		},
																		"nativeSrc": "79:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:4"
																},
																"nativeSrc": "72:50:4",
																"nodeType": "YulFunctionCall",
																"src": "72:50:4"
															},
															"nativeSrc": "69:70:4",
															"nodeType": "YulIf",
															"src": "69:70:4"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:131:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:4",
														"nodeType": "YulTypedName",
														"src": "48:5:4",
														"type": ""
													}
												],
												"src": "14:131:4"
											},
											{
												"body": {
													"nativeSrc": "237:228:4",
													"nodeType": "YulBlock",
													"src": "237:228:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "283:16:4",
																"nodeType": "YulBlock",
																"src": "283:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "292:1:4",
																					"nodeType": "YulLiteral",
																					"src": "292:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "295:1:4",
																					"nodeType": "YulLiteral",
																					"src": "295:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "285:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:4"
																			},
																			"nativeSrc": "285:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:4"
																		},
																		"nativeSrc": "285:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "258:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "258:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "267:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "267:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "254:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:4"
																		},
																		"nativeSrc": "254:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "254:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "279:2:4",
																		"nodeType": "YulLiteral",
																		"src": "279:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "250:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "250:3:4"
																},
																"nativeSrc": "250:32:4",
																"nodeType": "YulFunctionCall",
																"src": "250:32:4"
															},
															"nativeSrc": "247:52:4",
															"nodeType": "YulIf",
															"src": "247:52:4"
														},
														{
															"nativeSrc": "308:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "308:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "321:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "321:12:4"
																},
																"nativeSrc": "321:23:4",
																"nodeType": "YulFunctionCall",
																"src": "321:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "312:5:4",
																	"nodeType": "YulTypedName",
																	"src": "312:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "378:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "378:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "353:24:4",
																	"nodeType": "YulIdentifier",
																	"src": "353:24:4"
																},
																"nativeSrc": "353:31:4",
																"nodeType": "YulFunctionCall",
																"src": "353:31:4"
															},
															"nativeSrc": "353:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "353:31:4"
														},
														{
															"nativeSrc": "393:15:4",
															"nodeType": "YulAssignment",
															"src": "393:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "403:5:4",
																"nodeType": "YulIdentifier",
																"src": "403:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "393:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:4"
																}
															]
														},
														{
															"nativeSrc": "417:42:4",
															"nodeType": "YulAssignment",
															"src": "417:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "444:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "444:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "455:2:4",
																				"nodeType": "YulLiteral",
																				"src": "455:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "440:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "440:3:4"
																		},
																		"nativeSrc": "440:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "440:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "427:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "427:12:4"
																},
																"nativeSrc": "427:32:4",
																"nodeType": "YulFunctionCall",
																"src": "427:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "417:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "150:315:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "195:9:4",
														"nodeType": "YulTypedName",
														"src": "195:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "206:7:4",
														"nodeType": "YulTypedName",
														"src": "206:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "218:6:4",
														"nodeType": "YulTypedName",
														"src": "218:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "226:6:4",
														"nodeType": "YulTypedName",
														"src": "226:6:4",
														"type": ""
													}
												],
												"src": "150:315:4"
											},
											{
												"body": {
													"nativeSrc": "540:110:4",
													"nodeType": "YulBlock",
													"src": "540:110:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "586:16:4",
																"nodeType": "YulBlock",
																"src": "586:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "595:1:4",
																					"nodeType": "YulLiteral",
																					"src": "595:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "598:1:4",
																					"nodeType": "YulLiteral",
																					"src": "598:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "588:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "588:6:4"
																			},
																			"nativeSrc": "588:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "588:12:4"
																		},
																		"nativeSrc": "588:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "561:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "561:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "570:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "570:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "557:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "557:3:4"
																		},
																		"nativeSrc": "557:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "557:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "582:2:4",
																		"nodeType": "YulLiteral",
																		"src": "582:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "553:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "553:3:4"
																},
																"nativeSrc": "553:32:4",
																"nodeType": "YulFunctionCall",
																"src": "553:32:4"
															},
															"nativeSrc": "550:52:4",
															"nodeType": "YulIf",
															"src": "550:52:4"
														},
														{
															"nativeSrc": "611:33:4",
															"nodeType": "YulAssignment",
															"src": "611:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "634:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "634:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "621:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "621:12:4"
																},
																"nativeSrc": "621:23:4",
																"nodeType": "YulFunctionCall",
																"src": "621:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "611:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "611:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "470:180:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "506:9:4",
														"nodeType": "YulTypedName",
														"src": "506:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "517:7:4",
														"nodeType": "YulTypedName",
														"src": "517:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "529:6:4",
														"nodeType": "YulTypedName",
														"src": "529:6:4",
														"type": ""
													}
												],
												"src": "470:180:4"
											},
											{
												"body": {
													"nativeSrc": "840:262:4",
													"nodeType": "YulBlock",
													"src": "840:262:4",
													"statements": [
														{
															"nativeSrc": "850:27:4",
															"nodeType": "YulAssignment",
															"src": "850:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "862:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "862:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "873:3:4",
																		"nodeType": "YulLiteral",
																		"src": "873:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "858:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:4"
																},
																"nativeSrc": "858:19:4",
																"nodeType": "YulFunctionCall",
																"src": "858:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "850:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "850:4:4"
																}
															]
														},
														{
															"nativeSrc": "886:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "886:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "904:3:4",
																				"nodeType": "YulLiteral",
																				"src": "904:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "909:1:4",
																				"nodeType": "YulLiteral",
																				"src": "909:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "900:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:4"
																		},
																		"nativeSrc": "900:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "900:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "913:1:4",
																		"nodeType": "YulLiteral",
																		"src": "913:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "896:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "896:3:4"
																},
																"nativeSrc": "896:19:4",
																"nodeType": "YulFunctionCall",
																"src": "896:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "890:2:4",
																	"nodeType": "YulTypedName",
																	"src": "890:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "931:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "931:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "946:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "954:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "954:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "942:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:4"
																		},
																		"nativeSrc": "942:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "942:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "924:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:4"
																},
																"nativeSrc": "924:34:4",
																"nodeType": "YulFunctionCall",
																"src": "924:34:4"
															},
															"nativeSrc": "924:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "924:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:4",
																				"nodeType": "YulLiteral",
																				"src": "989:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:4"
																		},
																		"nativeSrc": "974:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "998:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "998:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1006:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "1006:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "994:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "994:3:4"
																		},
																		"nativeSrc": "994:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "994:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "967:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "967:6:4"
																},
																"nativeSrc": "967:43:4",
																"nodeType": "YulFunctionCall",
																"src": "967:43:4"
															},
															"nativeSrc": "967:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "967:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1030:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1030:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1041:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1041:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1026:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:4"
																		},
																		"nativeSrc": "1026:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:18:4"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "1046:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1046:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1019:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:4"
																},
																"nativeSrc": "1019:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1019:34:4"
															},
															"nativeSrc": "1019:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1019:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1073:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1073:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1084:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1084:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1069:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1069:3:4"
																		},
																		"nativeSrc": "1069:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1069:18:4"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "1089:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1089:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1062:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1062:6:4"
																},
																"nativeSrc": "1062:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1062:34:4"
															},
															"nativeSrc": "1062:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1062:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "655:447:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "785:9:4",
														"nodeType": "YulTypedName",
														"src": "785:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "796:6:4",
														"nodeType": "YulTypedName",
														"src": "796:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "804:6:4",
														"nodeType": "YulTypedName",
														"src": "804:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "812:6:4",
														"nodeType": "YulTypedName",
														"src": "812:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "820:6:4",
														"nodeType": "YulTypedName",
														"src": "820:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "831:4:4",
														"nodeType": "YulTypedName",
														"src": "831:4:4",
														"type": ""
													}
												],
												"src": "655:447:4"
											},
											{
												"body": {
													"nativeSrc": "1211:279:4",
													"nodeType": "YulBlock",
													"src": "1211:279:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1257:16:4",
																"nodeType": "YulBlock",
																"src": "1257:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1266:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1266:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1269:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1269:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1259:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1259:6:4"
																			},
																			"nativeSrc": "1259:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1259:12:4"
																		},
																		"nativeSrc": "1259:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1259:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1232:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1232:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1241:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1241:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1228:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1228:3:4"
																		},
																		"nativeSrc": "1228:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1228:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1253:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1253:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1224:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1224:3:4"
																},
																"nativeSrc": "1224:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1224:32:4"
															},
															"nativeSrc": "1221:52:4",
															"nodeType": "YulIf",
															"src": "1221:52:4"
														},
														{
															"nativeSrc": "1282:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1282:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1308:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1308:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1295:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1295:12:4"
																},
																"nativeSrc": "1295:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1295:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1286:5:4",
																	"nodeType": "YulTypedName",
																	"src": "1286:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1352:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1352:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1327:24:4",
																	"nodeType": "YulIdentifier",
																	"src": "1327:24:4"
																},
																"nativeSrc": "1327:31:4",
																"nodeType": "YulFunctionCall",
																"src": "1327:31:4"
															},
															"nativeSrc": "1327:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "1327:31:4"
														},
														{
															"nativeSrc": "1367:15:4",
															"nodeType": "YulAssignment",
															"src": "1367:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "1377:5:4",
																"nodeType": "YulIdentifier",
																"src": "1377:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1367:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1367:6:4"
																}
															]
														},
														{
															"nativeSrc": "1391:42:4",
															"nodeType": "YulAssignment",
															"src": "1391:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1418:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1418:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1429:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1429:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1414:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1414:3:4"
																		},
																		"nativeSrc": "1414:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1414:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1401:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1401:12:4"
																},
																"nativeSrc": "1401:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1401:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1391:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:4"
																}
															]
														},
														{
															"nativeSrc": "1442:42:4",
															"nodeType": "YulAssignment",
															"src": "1442:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1469:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1469:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1480:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1480:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1465:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1465:3:4"
																		},
																		"nativeSrc": "1465:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1465:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1452:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1452:12:4"
																},
																"nativeSrc": "1452:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1452:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1442:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "1107:383:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1161:9:4",
														"nodeType": "YulTypedName",
														"src": "1161:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1172:7:4",
														"nodeType": "YulTypedName",
														"src": "1172:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1184:6:4",
														"nodeType": "YulTypedName",
														"src": "1184:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1192:6:4",
														"nodeType": "YulTypedName",
														"src": "1192:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1200:6:4",
														"nodeType": "YulTypedName",
														"src": "1200:6:4",
														"type": ""
													}
												],
												"src": "1107:383:4"
											},
											{
												"body": {
													"nativeSrc": "1669:160:4",
													"nodeType": "YulBlock",
													"src": "1669:160:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1686:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1697:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:4"
																},
																"nativeSrc": "1679:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1679:21:4"
															},
															"nativeSrc": "1679:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1679:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1720:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1731:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1731:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1716:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:4"
																		},
																		"nativeSrc": "1716:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1716:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:4",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1709:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:4"
																},
																"nativeSrc": "1709:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1709:30:4"
															},
															"nativeSrc": "1709:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "1709:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1759:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1770:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1770:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1755:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:4"
																		},
																		"nativeSrc": "1755:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:18:4"
																	},
																	{
																		"hexValue": "6e6f74206c6973746564",
																		"kind": "string",
																		"nativeSrc": "1775:12:4",
																		"nodeType": "YulLiteral",
																		"src": "1775:12:4",
																		"type": "",
																		"value": "not listed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1748:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:4"
																},
																"nativeSrc": "1748:40:4",
																"nodeType": "YulFunctionCall",
																"src": "1748:40:4"
															},
															"nativeSrc": "1748:40:4",
															"nodeType": "YulExpressionStatement",
															"src": "1748:40:4"
														},
														{
															"nativeSrc": "1797:26:4",
															"nodeType": "YulAssignment",
															"src": "1797:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1809:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1809:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1820:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1820:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1805:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:4"
																},
																"nativeSrc": "1805:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1805:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1797:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1797:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1495:334:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1646:9:4",
														"nodeType": "YulTypedName",
														"src": "1646:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1660:4:4",
														"nodeType": "YulTypedName",
														"src": "1660:4:4",
														"type": ""
													}
												],
												"src": "1495:334:4"
											},
											{
												"body": {
													"nativeSrc": "2008:160:4",
													"nodeType": "YulBlock",
													"src": "2008:160:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2025:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2025:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2036:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2018:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:4"
																},
																"nativeSrc": "2018:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2018:21:4"
															},
															"nativeSrc": "2018:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2018:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2059:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2059:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2070:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2070:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2055:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2055:3:4"
																		},
																		"nativeSrc": "2055:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2055:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2075:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2075:2:4",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2048:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:4"
																},
																"nativeSrc": "2048:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2048:30:4"
															},
															"nativeSrc": "2048:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2048:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2098:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2098:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2109:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2109:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2094:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2094:3:4"
																		},
																		"nativeSrc": "2094:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2094:18:4"
																	},
																	{
																		"hexValue": "6e6f742073656c6c6572",
																		"kind": "string",
																		"nativeSrc": "2114:12:4",
																		"nodeType": "YulLiteral",
																		"src": "2114:12:4",
																		"type": "",
																		"value": "not seller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2087:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:4"
																},
																"nativeSrc": "2087:40:4",
																"nodeType": "YulFunctionCall",
																"src": "2087:40:4"
															},
															"nativeSrc": "2087:40:4",
															"nodeType": "YulExpressionStatement",
															"src": "2087:40:4"
														},
														{
															"nativeSrc": "2136:26:4",
															"nodeType": "YulAssignment",
															"src": "2136:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2148:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2148:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2159:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2159:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2144:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2144:3:4"
																},
																"nativeSrc": "2144:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2144:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2136:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2136:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1834:334:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1985:9:4",
														"nodeType": "YulTypedName",
														"src": "1985:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1999:4:4",
														"nodeType": "YulTypedName",
														"src": "1999:4:4",
														"type": ""
													}
												],
												"src": "1834:334:4"
											},
											{
												"body": {
													"nativeSrc": "2347:158:4",
													"nodeType": "YulBlock",
													"src": "2347:158:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2364:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2364:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2375:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2375:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2357:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:4"
																},
																"nativeSrc": "2357:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2357:21:4"
															},
															"nativeSrc": "2357:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2357:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2398:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2398:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2409:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2409:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2394:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:4"
																		},
																		"nativeSrc": "2394:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2394:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2414:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2414:1:4",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2387:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2387:6:4"
																},
																"nativeSrc": "2387:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2387:29:4"
															},
															"nativeSrc": "2387:29:4",
															"nodeType": "YulExpressionStatement",
															"src": "2387:29:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2436:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2436:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2447:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2447:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2432:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2432:3:4"
																		},
																		"nativeSrc": "2432:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2432:18:4"
																	},
																	{
																		"hexValue": "6261642076616c7565",
																		"kind": "string",
																		"nativeSrc": "2452:11:4",
																		"nodeType": "YulLiteral",
																		"src": "2452:11:4",
																		"type": "",
																		"value": "bad value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2425:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:4"
																},
																"nativeSrc": "2425:39:4",
																"nodeType": "YulFunctionCall",
																"src": "2425:39:4"
															},
															"nativeSrc": "2425:39:4",
															"nodeType": "YulExpressionStatement",
															"src": "2425:39:4"
														},
														{
															"nativeSrc": "2473:26:4",
															"nodeType": "YulAssignment",
															"src": "2473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2485:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2485:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2496:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2496:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2481:3:4"
																},
																"nativeSrc": "2481:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2473:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2473:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2173:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2324:9:4",
														"nodeType": "YulTypedName",
														"src": "2324:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2338:4:4",
														"nodeType": "YulTypedName",
														"src": "2338:4:4",
														"type": ""
													}
												],
												"src": "2173:332:4"
											},
											{
												"body": {
													"nativeSrc": "2701:14:4",
													"nodeType": "YulBlock",
													"src": "2701:14:4",
													"statements": [
														{
															"nativeSrc": "2703:10:4",
															"nodeType": "YulAssignment",
															"src": "2703:10:4",
															"value": {
																"name": "pos",
																"nativeSrc": "2710:3:4",
																"nodeType": "YulIdentifier",
																"src": "2710:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2703:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2703:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2510:205:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2685:3:4",
														"nodeType": "YulTypedName",
														"src": "2685:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2693:3:4",
														"nodeType": "YulTypedName",
														"src": "2693:3:4",
														"type": ""
													}
												],
												"src": "2510:205:4"
											},
											{
												"body": {
													"nativeSrc": "2894:167:4",
													"nodeType": "YulBlock",
													"src": "2894:167:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2911:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2911:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2922:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2922:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2904:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2904:6:4"
																},
																"nativeSrc": "2904:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2904:21:4"
															},
															"nativeSrc": "2904:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2904:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2945:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2945:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2956:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2956:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2941:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2941:3:4"
																		},
																		"nativeSrc": "2941:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2961:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2961:2:4",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2934:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2934:6:4"
																},
																"nativeSrc": "2934:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2934:30:4"
															},
															"nativeSrc": "2934:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2934:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2984:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2984:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2995:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2995:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2980:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:4"
																		},
																		"nativeSrc": "2980:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2980:18:4"
																	},
																	{
																		"hexValue": "7061792073656c6c6572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "3000:19:4",
																		"nodeType": "YulLiteral",
																		"src": "3000:19:4",
																		"type": "",
																		"value": "pay seller failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2973:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2973:6:4"
																},
																"nativeSrc": "2973:47:4",
																"nodeType": "YulFunctionCall",
																"src": "2973:47:4"
															},
															"nativeSrc": "2973:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "2973:47:4"
														},
														{
															"nativeSrc": "3029:26:4",
															"nodeType": "YulAssignment",
															"src": "3029:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3041:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3052:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3037:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3037:3:4"
																},
																"nativeSrc": "3037:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3037:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3029:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3029:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2720:341:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2871:9:4",
														"nodeType": "YulTypedName",
														"src": "2871:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2885:4:4",
														"nodeType": "YulTypedName",
														"src": "2885:4:4",
														"type": ""
													}
												],
												"src": "2720:341:4"
											},
											{
												"body": {
													"nativeSrc": "3223:218:4",
													"nodeType": "YulBlock",
													"src": "3223:218:4",
													"statements": [
														{
															"nativeSrc": "3233:26:4",
															"nodeType": "YulAssignment",
															"src": "3233:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3245:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3245:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3256:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3256:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3241:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:4"
																},
																"nativeSrc": "3241:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3241:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3233:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3233:4:4"
																}
															]
														},
														{
															"nativeSrc": "3268:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3268:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3286:3:4",
																				"nodeType": "YulLiteral",
																				"src": "3286:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3291:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3291:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3282:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:4"
																		},
																		"nativeSrc": "3282:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3295:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3295:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3278:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:4"
																},
																"nativeSrc": "3278:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3278:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3272:2:4",
																	"nodeType": "YulTypedName",
																	"src": "3272:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3313:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3313:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3328:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3328:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3336:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "3336:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3324:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3324:3:4"
																		},
																		"nativeSrc": "3324:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3324:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3306:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:4"
																},
																"nativeSrc": "3306:34:4",
																"nodeType": "YulFunctionCall",
																"src": "3306:34:4"
															},
															"nativeSrc": "3306:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "3306:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3360:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3371:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3371:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3356:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:4"
																		},
																		"nativeSrc": "3356:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3356:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3380:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3388:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "3388:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3376:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3376:3:4"
																		},
																		"nativeSrc": "3376:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3376:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3349:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:4"
																},
																"nativeSrc": "3349:43:4",
																"nodeType": "YulFunctionCall",
																"src": "3349:43:4"
															},
															"nativeSrc": "3349:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "3349:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3412:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3412:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3423:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3423:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3408:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:4"
																		},
																		"nativeSrc": "3408:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3408:18:4"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3428:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3428:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3401:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:4"
																},
																"nativeSrc": "3401:34:4",
																"nodeType": "YulFunctionCall",
																"src": "3401:34:4"
															},
															"nativeSrc": "3401:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "3401:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3066:375:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3176:9:4",
														"nodeType": "YulTypedName",
														"src": "3176:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3187:6:4",
														"nodeType": "YulTypedName",
														"src": "3187:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3195:6:4",
														"nodeType": "YulTypedName",
														"src": "3195:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3203:6:4",
														"nodeType": "YulTypedName",
														"src": "3203:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3214:4:4",
														"nodeType": "YulTypedName",
														"src": "3214:4:4",
														"type": ""
													}
												],
												"src": "3066:375:4"
											},
											{
												"body": {
													"nativeSrc": "3547:76:4",
													"nodeType": "YulBlock",
													"src": "3547:76:4",
													"statements": [
														{
															"nativeSrc": "3557:26:4",
															"nodeType": "YulAssignment",
															"src": "3557:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3569:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3569:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3565:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:4"
																},
																"nativeSrc": "3565:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3565:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3557:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3557:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3599:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3610:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3610:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3592:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3592:6:4"
																},
																"nativeSrc": "3592:25:4",
																"nodeType": "YulFunctionCall",
																"src": "3592:25:4"
															},
															"nativeSrc": "3592:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "3592:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3446:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3516:9:4",
														"nodeType": "YulTypedName",
														"src": "3516:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3527:6:4",
														"nodeType": "YulTypedName",
														"src": "3527:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3538:4:4",
														"nodeType": "YulTypedName",
														"src": "3538:4:4",
														"type": ""
													}
												],
												"src": "3446:177:4"
											},
											{
												"body": {
													"nativeSrc": "3802:156:4",
													"nodeType": "YulBlock",
													"src": "3802:156:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3819:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3819:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3830:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3830:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3812:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3812:6:4"
																},
																"nativeSrc": "3812:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3812:21:4"
															},
															"nativeSrc": "3812:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3812:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3853:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3853:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3864:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3864:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3849:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:4"
																		},
																		"nativeSrc": "3849:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3849:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3869:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3869:1:4",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3842:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:4"
																},
																"nativeSrc": "3842:29:4",
																"nodeType": "YulFunctionCall",
																"src": "3842:29:4"
															},
															"nativeSrc": "3842:29:4",
															"nodeType": "YulExpressionStatement",
															"src": "3842:29:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3891:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3891:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3902:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3902:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3887:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3887:3:4"
																		},
																		"nativeSrc": "3887:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3887:18:4"
																	},
																	{
																		"hexValue": "70726963653d30",
																		"kind": "string",
																		"nativeSrc": "3907:9:4",
																		"nodeType": "YulLiteral",
																		"src": "3907:9:4",
																		"type": "",
																		"value": "price=0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:4"
																},
																"nativeSrc": "3880:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3880:37:4"
															},
															"nativeSrc": "3880:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "3880:37:4"
														},
														{
															"nativeSrc": "3926:26:4",
															"nodeType": "YulAssignment",
															"src": "3926:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3938:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3938:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3949:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3949:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3934:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:4"
																},
																"nativeSrc": "3934:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3934:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3926:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3926:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3628:330:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3779:9:4",
														"nodeType": "YulTypedName",
														"src": "3779:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3793:4:4",
														"nodeType": "YulTypedName",
														"src": "3793:4:4",
														"type": ""
													}
												],
												"src": "3628:330:4"
											},
											{
												"body": {
													"nativeSrc": "4044:170:4",
													"nodeType": "YulBlock",
													"src": "4044:170:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4090:16:4",
																"nodeType": "YulBlock",
																"src": "4090:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4099:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4099:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4102:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4102:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4092:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4092:6:4"
																			},
																			"nativeSrc": "4092:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4092:12:4"
																		},
																		"nativeSrc": "4092:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4092:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4074:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4074:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4061:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:4"
																		},
																		"nativeSrc": "4061:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4086:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4057:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4057:3:4"
																},
																"nativeSrc": "4057:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4057:32:4"
															},
															"nativeSrc": "4054:52:4",
															"nodeType": "YulIf",
															"src": "4054:52:4"
														},
														{
															"nativeSrc": "4115:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4115:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4134:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4134:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4128:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4128:5:4"
																},
																"nativeSrc": "4128:16:4",
																"nodeType": "YulFunctionCall",
																"src": "4128:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4119:5:4",
																	"nodeType": "YulTypedName",
																	"src": "4119:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4178:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4178:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4153:24:4",
																	"nodeType": "YulIdentifier",
																	"src": "4153:24:4"
																},
																"nativeSrc": "4153:31:4",
																"nodeType": "YulFunctionCall",
																"src": "4153:31:4"
															},
															"nativeSrc": "4153:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "4153:31:4"
														},
														{
															"nativeSrc": "4193:15:4",
															"nodeType": "YulAssignment",
															"src": "4193:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "4203:5:4",
																"nodeType": "YulIdentifier",
																"src": "4203:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4193:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3963:251:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4010:9:4",
														"nodeType": "YulTypedName",
														"src": "4010:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4021:7:4",
														"nodeType": "YulTypedName",
														"src": "4021:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4033:6:4",
														"nodeType": "YulTypedName",
														"src": "4033:6:4",
														"type": ""
													}
												],
												"src": "3963:251:4"
											},
											{
												"body": {
													"nativeSrc": "4393:158:4",
													"nodeType": "YulBlock",
													"src": "4393:158:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4410:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4410:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4421:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4403:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:4"
																},
																"nativeSrc": "4403:21:4",
																"nodeType": "YulFunctionCall",
																"src": "4403:21:4"
															},
															"nativeSrc": "4403:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "4403:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4444:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4444:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4455:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4455:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4440:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4440:3:4"
																		},
																		"nativeSrc": "4440:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4440:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4460:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4460:1:4",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4433:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:4"
																},
																"nativeSrc": "4433:29:4",
																"nodeType": "YulFunctionCall",
																"src": "4433:29:4"
															},
															"nativeSrc": "4433:29:4",
															"nodeType": "YulExpressionStatement",
															"src": "4433:29:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4482:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4482:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4493:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4493:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4478:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:4"
																		},
																		"nativeSrc": "4478:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4478:18:4"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4498:11:4",
																		"nodeType": "YulLiteral",
																		"src": "4498:11:4",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4471:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:4"
																},
																"nativeSrc": "4471:39:4",
																"nodeType": "YulFunctionCall",
																"src": "4471:39:4"
															},
															"nativeSrc": "4471:39:4",
															"nodeType": "YulExpressionStatement",
															"src": "4471:39:4"
														},
														{
															"nativeSrc": "4519:26:4",
															"nodeType": "YulAssignment",
															"src": "4519:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4531:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4531:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4542:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4542:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4527:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:4"
																},
																"nativeSrc": "4527:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4527:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4519:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4519:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4219:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4370:9:4",
														"nodeType": "YulTypedName",
														"src": "4370:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4384:4:4",
														"nodeType": "YulTypedName",
														"src": "4384:4:4",
														"type": ""
													}
												],
												"src": "4219:332:4"
											},
											{
												"body": {
													"nativeSrc": "4685:175:4",
													"nodeType": "YulBlock",
													"src": "4685:175:4",
													"statements": [
														{
															"nativeSrc": "4695:26:4",
															"nodeType": "YulAssignment",
															"src": "4695:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4707:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4707:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4718:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4718:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4703:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4703:3:4"
																},
																"nativeSrc": "4703:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4703:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4695:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4695:4:4"
																}
															]
														},
														{
															"nativeSrc": "4730:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4730:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4748:3:4",
																				"nodeType": "YulLiteral",
																				"src": "4748:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4753:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4753:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4744:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4744:3:4"
																		},
																		"nativeSrc": "4744:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4744:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4757:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4757:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4740:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4740:3:4"
																},
																"nativeSrc": "4740:19:4",
																"nodeType": "YulFunctionCall",
																"src": "4740:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4734:2:4",
																	"nodeType": "YulTypedName",
																	"src": "4734:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4775:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4775:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4790:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4790:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4798:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4798:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4786:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:4"
																		},
																		"nativeSrc": "4786:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4786:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4768:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4768:6:4"
																},
																"nativeSrc": "4768:34:4",
																"nodeType": "YulFunctionCall",
																"src": "4768:34:4"
															},
															"nativeSrc": "4768:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "4768:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4822:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4822:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4833:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4833:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4818:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4818:3:4"
																		},
																		"nativeSrc": "4818:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4818:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4842:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4842:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4850:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4850:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4838:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4838:3:4"
																		},
																		"nativeSrc": "4838:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4838:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4811:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:4"
																},
																"nativeSrc": "4811:43:4",
																"nodeType": "YulFunctionCall",
																"src": "4811:43:4"
															},
															"nativeSrc": "4811:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "4811:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4556:304:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4646:9:4",
														"nodeType": "YulTypedName",
														"src": "4646:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4657:6:4",
														"nodeType": "YulTypedName",
														"src": "4657:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4665:6:4",
														"nodeType": "YulTypedName",
														"src": "4665:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4676:4:4",
														"nodeType": "YulTypedName",
														"src": "4676:4:4",
														"type": ""
													}
												],
												"src": "4556:304:4"
											},
											{
												"body": {
													"nativeSrc": "4943:199:4",
													"nodeType": "YulBlock",
													"src": "4943:199:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4989:16:4",
																"nodeType": "YulBlock",
																"src": "4989:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4998:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4998:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5001:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5001:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4991:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4991:6:4"
																			},
																			"nativeSrc": "4991:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4991:12:4"
																		},
																		"nativeSrc": "4991:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4991:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4964:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4964:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4973:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4973:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4960:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:4"
																		},
																		"nativeSrc": "4960:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4960:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4985:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4985:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4956:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4956:3:4"
																},
																"nativeSrc": "4956:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4956:32:4"
															},
															"nativeSrc": "4953:52:4",
															"nodeType": "YulIf",
															"src": "4953:52:4"
														},
														{
															"nativeSrc": "5014:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5014:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5033:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5033:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5027:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5027:5:4"
																},
																"nativeSrc": "5027:16:4",
																"nodeType": "YulFunctionCall",
																"src": "5027:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5018:5:4",
																	"nodeType": "YulTypedName",
																	"src": "5018:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5096:16:4",
																"nodeType": "YulBlock",
																"src": "5096:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5105:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5105:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5108:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5108:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5098:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5098:6:4"
																			},
																			"nativeSrc": "5098:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5098:12:4"
																		},
																		"nativeSrc": "5098:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5098:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5065:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5065:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5086:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "5086:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5079:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "5079:6:4"
																						},
																						"nativeSrc": "5079:13:4",
																						"nodeType": "YulFunctionCall",
																						"src": "5079:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5072:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "5072:6:4"
																				},
																				"nativeSrc": "5072:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5072:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5062:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5062:2:4"
																		},
																		"nativeSrc": "5062:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5062:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5055:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5055:6:4"
																},
																"nativeSrc": "5055:40:4",
																"nodeType": "YulFunctionCall",
																"src": "5055:40:4"
															},
															"nativeSrc": "5052:60:4",
															"nodeType": "YulIf",
															"src": "5052:60:4"
														},
														{
															"nativeSrc": "5121:15:4",
															"nodeType": "YulAssignment",
															"src": "5121:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "5131:5:4",
																"nodeType": "YulIdentifier",
																"src": "5131:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5121:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5121:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4865:277:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4909:9:4",
														"nodeType": "YulTypedName",
														"src": "4909:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4920:7:4",
														"nodeType": "YulTypedName",
														"src": "4920:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4932:6:4",
														"nodeType": "YulTypedName",
														"src": "4932:6:4",
														"type": ""
													}
												],
												"src": "4865:277:4"
											},
											{
												"body": {
													"nativeSrc": "5321:169:4",
													"nodeType": "YulBlock",
													"src": "5321:169:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5338:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5338:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5349:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5349:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5331:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5331:6:4"
																},
																"nativeSrc": "5331:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5331:21:4"
															},
															"nativeSrc": "5331:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "5331:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5372:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5383:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5383:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5368:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5368:3:4"
																		},
																		"nativeSrc": "5368:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5368:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5388:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5388:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5361:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5361:6:4"
																},
																"nativeSrc": "5361:30:4",
																"nodeType": "YulFunctionCall",
																"src": "5361:30:4"
															},
															"nativeSrc": "5361:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "5361:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5411:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5411:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5422:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5422:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5407:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:4"
																		},
																		"nativeSrc": "5407:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5407:18:4"
																	},
																	{
																		"hexValue": "6d61726b6574206e6f7420617070726f766564",
																		"kind": "string",
																		"nativeSrc": "5427:21:4",
																		"nodeType": "YulLiteral",
																		"src": "5427:21:4",
																		"type": "",
																		"value": "market not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5400:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5400:6:4"
																},
																"nativeSrc": "5400:49:4",
																"nodeType": "YulFunctionCall",
																"src": "5400:49:4"
															},
															"nativeSrc": "5400:49:4",
															"nodeType": "YulExpressionStatement",
															"src": "5400:49:4"
														},
														{
															"nativeSrc": "5458:26:4",
															"nodeType": "YulAssignment",
															"src": "5458:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5470:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5470:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5481:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5481:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5466:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5466:3:4"
																},
																"nativeSrc": "5466:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5466:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5458:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5458:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5147:343:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5298:9:4",
														"nodeType": "YulTypedName",
														"src": "5298:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5312:4:4",
														"nodeType": "YulTypedName",
														"src": "5312:4:4",
														"type": ""
													}
												],
												"src": "5147:343:4"
											},
											{
												"body": {
													"nativeSrc": "5642:147:4",
													"nodeType": "YulBlock",
													"src": "5642:147:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5659:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5659:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5672:2:4",
																						"nodeType": "YulLiteral",
																						"src": "5672:2:4",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "5676:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5676:6:4"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5668:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5668:3:4"
																				},
																				"nativeSrc": "5668:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5668:15:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5689:26:4",
																						"nodeType": "YulLiteral",
																						"src": "5689:26:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5685:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5685:3:4"
																				},
																				"nativeSrc": "5685:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5685:31:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5664:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5664:3:4"
																		},
																		"nativeSrc": "5664:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5664:53:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5652:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5652:6:4"
																},
																"nativeSrc": "5652:66:4",
																"nodeType": "YulFunctionCall",
																"src": "5652:66:4"
															},
															"nativeSrc": "5652:66:4",
															"nodeType": "YulExpressionStatement",
															"src": "5652:66:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5738:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "5738:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5743:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5743:2:4",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5734:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5734:3:4"
																		},
																		"nativeSrc": "5734:12:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5734:12:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5748:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5748:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5727:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5727:6:4"
																},
																"nativeSrc": "5727:28:4",
																"nodeType": "YulFunctionCall",
																"src": "5727:28:4"
															},
															"nativeSrc": "5727:28:4",
															"nodeType": "YulExpressionStatement",
															"src": "5727:28:4"
														},
														{
															"nativeSrc": "5764:19:4",
															"nodeType": "YulAssignment",
															"src": "5764:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5775:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5775:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5780:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:4",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5771:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5771:3:4"
																},
																"nativeSrc": "5771:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5771:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5764:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5764:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5495:294:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5610:3:4",
														"nodeType": "YulTypedName",
														"src": "5610:3:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5615:6:4",
														"nodeType": "YulTypedName",
														"src": "5615:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5623:6:4",
														"nodeType": "YulTypedName",
														"src": "5623:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5634:3:4",
														"nodeType": "YulTypedName",
														"src": "5634:3:4",
														"type": ""
													}
												],
												"src": "5495:294:4"
											},
											{
												"body": {
													"nativeSrc": "5968:181:4",
													"nodeType": "YulBlock",
													"src": "5968:181:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5985:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5985:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5996:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5996:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5978:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5978:6:4"
																},
																"nativeSrc": "5978:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5978:21:4"
															},
															"nativeSrc": "5978:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "5978:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6019:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6030:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6030:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6015:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:4"
																		},
																		"nativeSrc": "6015:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6015:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6035:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6035:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6008:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6008:6:4"
																},
																"nativeSrc": "6008:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6008:30:4"
															},
															"nativeSrc": "6008:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "6008:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6058:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6058:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6069:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6069:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6054:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6054:3:4"
																		},
																		"nativeSrc": "6054:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6054:18:4"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "6074:33:4",
																		"nodeType": "YulLiteral",
																		"src": "6074:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6047:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6047:6:4"
																},
																"nativeSrc": "6047:61:4",
																"nodeType": "YulFunctionCall",
																"src": "6047:61:4"
															},
															"nativeSrc": "6047:61:4",
															"nodeType": "YulExpressionStatement",
															"src": "6047:61:4"
														},
														{
															"nativeSrc": "6117:26:4",
															"nodeType": "YulAssignment",
															"src": "6117:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6129:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6129:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6140:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6140:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6125:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6125:3:4"
																},
																"nativeSrc": "6125:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6125:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6117:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6117:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5794:355:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5945:9:4",
														"nodeType": "YulTypedName",
														"src": "5945:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5959:4:4",
														"nodeType": "YulTypedName",
														"src": "5959:4:4",
														"type": ""
													}
												],
												"src": "5794:355:4"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"not listed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"not seller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"bad value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"pay seller failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"price=0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"market not approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003e575f3560e01c806398590ef914610042578063c18b8db414610063578063cce7ec13146100e1578063dda342bb146100f4575b5f80fd5b34801561004d575f80fd5b5061006161005c36600461085e565b610113565b005b34801561006e575f80fd5b506100b261007d366004610888565b600160208190525f918252604090912080549181015460028201546003909201546001600160a01b0393841693909116919084565b604080516001600160a01b03958616815294909316602085015291830152606082015260800160405180910390f35b6100616100ef36600461085e565b610265565b3480156100ff575f80fd5b5061006161010e36600461089f565b6104da565b5f61011e83836107aa565b5f81815260016020818152604092839020835160808101855281546001600160a01b039081168083529483015416928101929092526002810154938201939093526003909201546060830152919250906101ac5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064015b60405180910390fd5b80516001600160a01b031633146101f25760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b63632b960b11b60448201526064016101a3565b5f82815260016020819052604080832080546001600160a01b0319908116825592810180549093169092556002820183905560039091018290555184916001600160a01b0387169133917f915fb8c652d6245752cc491b71bd8e87ab6761417f8d2ca353c8055103294c0391a450505050565b61026d6107f0565b5f61027883836107aa565b5f81815260016020818152604092839020835160808101855281546001600160a01b039081168083529483015416928101929092526002810154938201939093526003909201546060830152919250906103015760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064016101a3565b806060015134146103405760405162461bcd60e51b81526020600482015260096024820152686261642076616c756560b81b60448201526064016101a3565b5f82815260016020819052604080832080546001600160a01b031990811682559281018054909316909255600282018390556003909101829055825190516001600160a01b039091169034908381818185875af1925050503d805f81146103c2576040519150601f19603f3d011682016040523d82523d5f602084013e6103c7565b606091505b505090508061040c5760405162461bcd60e51b81526020600482015260116024820152701c185e481cd95b1b195c8819985a5b1959607a1b60448201526064016101a3565b602082015182516040808501519051632142170760e11b81526001600160a01b03928316600482015233602482015260448101919091529116906342842e0e906064015f604051808303815f87803b158015610466575f80fd5b505af1158015610478573d5f803e3d5ffd5b5050505083856001600160a01b0316336001600160a01b03167fa326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49346040516104c291815260200190565b60405180910390a45050506104d660015f55565b5050565b5f81116105135760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064016101a3565b6040516331a9108f60e11b815260048101839052839033906001600160a01b03831690636352211e90602401602060405180830381865afa15801561055a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061057e91906108d1565b6001600160a01b0316146105c05760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016101a3565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0382169063e985e9c590604401602060405180830381865afa158015610608573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062c91906108f3565b806106a6575060405163020604bf60e21b81526004810184905230906001600160a01b0383169063081812fc90602401602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b91906108d1565b6001600160a01b0316145b6106e85760405162461bcd60e51b81526020600482015260136024820152721b585c9ad95d081b9bdd08185c1c1c9bdd9959606a1b60448201526064016101a3565b5f6106f385856107aa565b60408051608081018252338082526001600160a01b0389811660208085018281528587018c8152606087018c81525f8a81526001808652908a9020985189549088166001600160a01b0319918216178a55935190890180549190971693169290921790945592516002860155915160039094019390935592518781529394508793919290917fd9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca910160405180910390a45050505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290525f9060540160405160208183030381529060405280519060200120905092915050565b60025f54036108415760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101a3565b60025f55565b6001600160a01b038116811461085b575f80fd5b50565b5f806040838503121561086f575f80fd5b823561087a81610847565b946020939093013593505050565b5f60208284031215610898575f80fd5b5035919050565b5f805f606084860312156108b1575f80fd5b83356108bc81610847565b95602085013595506040909401359392505050565b5f602082840312156108e1575f80fd5b81516108ec81610847565b9392505050565b5f60208284031215610903575f80fd5b815180151581146108ec575f80fdfea26469706673582212209540fe69c50666e1d402592f3e7cf817521038f8a2882a7eb5340c0d0d51a92e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98590EF9 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0xC18B8DB4 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xCCE7EC13 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xDDA342BB EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0xEF CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH0 PUSH2 0x11E DUP4 DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE SWAP5 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 PUSH2 0x1AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081B1A5CDD1959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x3737BA1039B2B63632B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE MLOAD DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0x915FB8C652D6245752CC491B71BD8E87AB6761417F8D2CA353C8055103294C03 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x26D PUSH2 0x7F0 JUMP JUMPDEST PUSH0 PUSH2 0x278 DUP4 DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE SWAP5 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081B1A5CDD1959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD CALLVALUE EQ PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6261642076616C7565 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE DUP3 MLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1C185E481CD95B1B195C8819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD SWAP1 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x478 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA326259EC721617ACD3CB2A00BCBEAC91EEFE409880E49AA2BBF473ED648DA49 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x4D6 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x70726963653D3 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE DUP4 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x608 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST DUP1 PUSH2 0x6A6 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B585C9AD95D081B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 PUSH2 0x6F3 DUP6 DUP6 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP13 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP13 DUP2 MSTORE PUSH0 DUP11 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD SWAP1 DUP10 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP8 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD DUP8 DUP2 MSTORE SWAP4 SWAP5 POP DUP8 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xD9D69FEE247951CC283DC6F5B64C36CE396A36146405A798B86EBFD113C8B5CA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x86F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x87A DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x898 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x8BC DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8EC DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8EC JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 BLOCKHASH INVALID PUSH10 0xC50666E1D402592F3E7C 0xF8 OR MSTORE LT CODESIZE 0xF8 LOG2 DUP9 0x2A PUSH31 0xB5340C0D0D51A92E64736F6C63430008180033000000000000000000000000 ",
							"sourceMap": "187:2086:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1375:337;;;;;;;;;;-1:-1:-1;1375:337:3;;;;;:::i;:::-;;:::i;:::-;;324:43;;;;;;;;;;-1:-1:-1;324:43:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;324:43:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:15:4;;;924:34;;994:15;;;;989:2;974:18;;967:43;1026:18;;;1019:34;1084:2;1069:18;;1062:34;873:3;858:19;324:43:3;;;;;;;1720:550;;;;;;:::i;:::-;;:::i;830:537::-;;;;;;;;;;-1:-1:-1;830:537:3;;;;;:::i;:::-;;:::i;1375:337::-;1441:9;1453:18;1458:3;1463:7;1453:4;:18::i;:::-;1482:16;1501:11;;;:8;:11;;;;;;;;;1482:30;;;;;;;;;-1:-1:-1;;;;;1482:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1441;;-1:-1:-1;1482:30:3;1523:45;;;;-1:-1:-1;;;1523:45:3;;1697:2:4;1523:45:3;;;1679:21:4;1736:2;1716:18;;;1709:30;-1:-1:-1;;;1755:18:4;;;1748:40;1805:18;;1523:45:3;;;;;;;;;1587:8;;-1:-1:-1;;;;;1587:22:3;1599:10;1587:22;1579:45;;;;-1:-1:-1;;;1579:45:3;;2036:2:4;1579:45:3;;;2018:21:4;2075:2;2055:18;;;2048:30;-1:-1:-1;;;2094:18:4;;;2087:40;2144:18;;1579:45:3;1834:334:4;1579:45:3;1642:11;;;;:8;:11;;;;;;;;1635:18;;-1:-1:-1;;;;;;1635:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:35;1696:7;;-1:-1:-1;;;;;1669:35:3;;;1679:10;;1669:35;;;1430:282;;1375:337;;:::o;1720:550::-;2261:21:0;:19;:21::i;:::-;1804:9:3::1;1816:18;1821:3;1826:7;1816:4;:18::i;:::-;1845:16;1864:11:::0;;;:8:::1;:11;::::0;;;;;;;;1845:30;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;1845:30:3;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;;;1804;;-1:-1:-1;1845:30:3;1886:45:::1;;;::::0;-1:-1:-1;;;1886:45:3;;1697:2:4;1886:45:3::1;::::0;::::1;1679:21:4::0;1736:2;1716:18;;;1709:30;-1:-1:-1;;;1755:18:4;;;1748:40;1805:18;;1886:45:3::1;1495:334:4::0;1886:45:3::1;1963:1;:7;;;1950:9;:20;1942:42;;;::::0;-1:-1:-1;;;1942:42:3;;2375:2:4;1942:42:3::1;::::0;::::1;2357:21:4::0;2414:1;2394:18;;;2387:29;-1:-1:-1;;;2432:18:4;;;2425:39;2481:18;;1942:42:3::1;2173:332:4::0;1942:42:3::1;2002:11;::::0;;;:8:::1;:11;::::0;;;;;;;1995:18;;-1:-1:-1;;;;;;1995:18:3;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;2046:8;;2038:44;;-1:-1:-1;;;;;2038:22:3;;::::1;::::0;2068:9:::1;::::0;2002:11;2038:44;2002:11;2038:44;2068:9;2038:22;:44:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2024:58;;;2101:2;2093:32;;;::::0;-1:-1:-1;;;2093:32:3;;2922:2:4;2093:32:3::1;::::0;::::1;2904:21:4::0;2961:2;2941:18;;;2934:30;-1:-1:-1;;;2980:18:4;;;2973:47;3037:18;;2093:32:3::1;2720:341:4::0;2093:32:3::1;2144:5;::::0;::::1;::::0;2168:8;;2190:9:::1;::::0;;::::1;::::0;2136:64;;-1:-1:-1;;;2136:64:3;;-1:-1:-1;;;;;3324:15:4;;;2136:64:3::1;::::0;::::1;3306:34:4::0;2178:10:3::1;3356:18:4::0;;;3349:43;3408:18;;;3401:34;;;;2136:31:3;::::1;::::0;::::1;::::0;3241:18:4;;2136:64:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2243:7;2238:3;-1:-1:-1::0;;;;;2216:46:3::1;2226:10;-1:-1:-1::0;;;;;2216:46:3::1;;2252:9;2216:46;;;;3592:25:4::0;;3580:2;3565:18;;3446:177;2216:46:3::1;;;;;;;;1793:477;;;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;1720:550:3;;:::o;830:537::-;925:1;917:5;:9;909:29;;;;-1:-1:-1;;;909:29:3;;3830:2:4;909:29:3;;;3812:21:4;3869:1;3849:18;;;3842:29;-1:-1:-1;;;3887:18:4;;;3880:37;3934:18;;909:29:3;3628:330:4;909:29:3;996:22;;-1:-1:-1;;;996:22:3;;;;;3592:25:4;;;973:3:3;;1022:10;;-1:-1:-1;;;;;996:13:3;;;;;3565:18:4;;996:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;996:36:3;;988:58;;;;-1:-1:-1;;;988:58:3;;4421:2:4;988:58:3;;;4403:21:4;4460:1;4440:18;;;4433:29;-1:-1:-1;;;4478:18:4;;;4471:39;4527:18;;988:58:3;4219:332:4;988:58:3;1065:49;;-1:-1:-1;;;1065:49:3;;1088:10;1065:49;;;4768:34:4;1108:4:3;4818:18:4;;;4811:43;-1:-1:-1;;;;;1065:22:3;;;;;4703:18:4;;1065:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:96;;;-1:-1:-1;1118:26:3;;-1:-1:-1;;;1118:26:3;;;;;3592:25:4;;;1156:4:3;;-1:-1:-1;;;;;1118:17:3;;;;;3565:18:4;;1118:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1118:43:3;;1065:96;1057:141;;;;-1:-1:-1;;;1057:141:3;;5349:2:4;1057:141:3;;;5331:21:4;5388:2;5368:18;;;5361:30;-1:-1:-1;;;5407:18:4;;;5400:49;5466:18;;1057:141:3;5147:343:4;1057:141:3;1209:9;1221:18;1226:3;1231:7;1221:4;:18::i;:::-;1264:40;;;;;;;;1272:10;1264:40;;;-1:-1:-1;;;;;1264:40:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1250:11:3;;;:8;:11;;;;;;;:54;;;;;;;-1:-1:-1;;;;;;1250:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1320:39;;3592:25:4;;;1250:11:3;;-1:-1:-1;1264:40:3;;;;1272:10;;1320:39;;3565:18:4;1320:39:3;;;;;;;898:469;;830:537;;;:::o;680:142::-;783:30;;-1:-1:-1;;5672:2:4;5668:15;;;5664:53;783:30:3;;;5652:66:4;5734:12;;;5727:28;;;746:7:3;;5771:12:4;;783:30:3;;;;;;;;;;;;773:41;;;;;;766:48;;680:142;;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:0;;5996:2:4;2460:63:0;;;5978:21:4;6035:2;6015:18;;;6008:30;6074:33;6054:18;;;6047:61;6125:18;;2460:63:0;5794:355:4;2460:63:0;1759:1;2598:7;:18;2336:287::o;14:131:4:-;-1:-1:-1;;;;;89:31:4;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:315::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:4:o;470:180::-;529:6;582:2;570:9;561:7;557:23;553:32;550:52;;;598:1;595;588:12;550:52;-1:-1:-1;621:23:4;;470:180;-1:-1:-1;470:180:4:o;1107:383::-;1184:6;1192;1200;1253:2;1241:9;1232:7;1228:23;1224:32;1221:52;;;1269:1;1266;1259:12;1221:52;1308:9;1295:23;1327:31;1352:5;1327:31;:::i;:::-;1377:5;1429:2;1414:18;;1401:32;;-1:-1:-1;1480:2:4;1465:18;;;1452:32;;1107:383;-1:-1:-1;;;1107:383:4:o;3963:251::-;4033:6;4086:2;4074:9;4065:7;4061:23;4057:32;4054:52;;;4102:1;4099;4092:12;4054:52;4134:9;4128:16;4153:31;4178:5;4153:31;:::i;:::-;4203:5;3963:251;-1:-1:-1;;;3963:251:4:o;4865:277::-;4932:6;4985:2;4973:9;4964:7;4960:23;4956:32;4953:52;;;5001:1;4998;4991:12;4953:52;5033:9;5027:16;5086:5;5079:13;5072:21;5065:5;5062:32;5052:60;;5108:1;5105;5098:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "475200",
								"executionCost": "22614",
								"totalCost": "497814"
							},
							"external": {
								"buy(address,uint256)": "infinite",
								"cancel(address,uint256)": "69714",
								"list(address,uint256,uint256)": "infinite",
								"listings(bytes32)": "8888"
							},
							"internal": {
								"_key(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2273,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2273,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209540fe69c50666e1d402592f3e7cf817521038f8a2882a7eb5340c0d0d51a92e64736f6c63430008180033",
									".code": [
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "98590EF9"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "C18B8DB4"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "CCE7EC13"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "DDA342BB"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2273,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1375,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1375,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 324,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 942,
											"end": 957,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 942,
											"end": 957,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 942,
											"end": 957,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 924,
											"end": 958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 924,
											"end": 958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1010,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1053,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 873,
											"end": 876,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 858,
											"end": 877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 324,
											"end": 367,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 367,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 324,
											"end": 367,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1720,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 830,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 830,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1450,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1470,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1453,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1453,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1509,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1471,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1471,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD081B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1595,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1595,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2077,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2055,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2055,
											"end": 2073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1039B2B63632B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2087,
											"end": 2127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1834,
											"end": 2168,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1579,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1650,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1703,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1703,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1689,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "915FB8C652D6245752CC491B71BD8E87AB6761417F8D2CA353C8055103294C03"
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1821,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1833,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1816,
											"end": 1834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1816,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1864,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1875,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1845,
											"end": 1875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1931,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1886,
											"end": 1931,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1931,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1886,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 1931,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD081B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1886,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1495,
											"end": 1829,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1886,
											"end": 1931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1964,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1963,
											"end": 1970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1959,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1970,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1942,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1984,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1942,
											"end": 1984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 1984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2416,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6261642076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2464,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2173,
											"end": 2505,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1942,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2002,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2013,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2038,
											"end": 2060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2060,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2077,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2060,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2093,
											"end": 2125,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2125,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2093,
											"end": 2125,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2904,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 2963,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2964,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C185E481CD95B1B195C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2980,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2980,
											"end": 2998,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 2998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3020,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3055,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3037,
											"end": 3055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2720,
											"end": 3061,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2093,
											"end": 2125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2176,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2176,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2190,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2190,
											"end": 2199,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3324,
											"end": 3339,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3339,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2136,
											"end": 2200,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2188,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3392,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3435,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3435,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3435,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2167,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2167,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2167,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 2136,
											"end": 2167,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2200,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2200,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2241,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2226,
											"end": 2236,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A326259EC721617ACD3CB2A00BCBEAC91EEFE409880E49AA2BBF473ED648DA49"
										},
										{
											"begin": 2252,
											"end": 2261,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3623,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2262,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 2270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 2270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 2270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 2270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 2270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 925,
											"end": 926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 917,
											"end": 926,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 909,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 909,
											"end": 938,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 909,
											"end": 938,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 938,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 909,
											"end": 938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 909,
											"end": 938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3832,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 938,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 909,
											"end": 938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3833,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70726963653D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 909,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3628,
											"end": 3958,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 909,
											"end": 938,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 909,
											"end": 938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 973,
											"end": 976,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 973,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1022,
											"end": 1032,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1022,
											"end": 1032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 996,
											"end": 1009,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 996,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1032,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1032,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4433,
											"end": 4462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4471,
											"end": 4510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4219,
											"end": 4551,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E985E9C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4802,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1112,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4811,
											"end": 4854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1087,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 1065,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1065,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1065,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1065,
											"end": 1161,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20604BF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 1118,
											"end": 1135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1118,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1161,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1161,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1065,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5351,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5331,
											"end": 5352,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5388,
											"end": 5390,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5361,
											"end": 5391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B585C9AD95D081B9BDD08185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5400,
											"end": 5449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5147,
											"end": 5490,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1057,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1226,
											"end": 1229,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1238,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1221,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1221,
											"end": 1239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1221,
											"end": 1239,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1221,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1258,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1304,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1261,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1304,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "PUSH",
											"source": 3,
											"value": "D9D69FEE247951CC283DC6F5B64C36CE396A36146405A798B86EBFD113C8B5CA"
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1359,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 898,
											"end": 1367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 898,
											"end": 1367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 822,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 680,
											"end": 822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 813,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5672,
											"end": 5674,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5668,
											"end": 5683,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5683,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 783,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5652,
											"end": 5718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5734,
											"end": 5746,
											"name": "PUSH",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5734,
											"end": 5746,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5734,
											"end": 5746,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5727,
											"end": 5755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5727,
											"end": 5755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5727,
											"end": 5755,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 746,
											"end": 753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5783,
											"name": "PUSH",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5771,
											"end": 5783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 813,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 813,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 783,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 773,
											"end": 814,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 773,
											"end": 814,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 773,
											"end": 814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 773,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 773,
											"end": 814,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 766,
											"end": 814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 766,
											"end": 814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 822,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 680,
											"end": 822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 680,
											"end": 822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5999,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6037,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6107,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6047,
											"end": 6108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5794,
											"end": 6149,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 69,
											"end": 139,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 150,
											"end": 465,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 150,
											"end": 465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 218,
											"end": 224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 258,
											"end": 265,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 254,
											"end": 277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 250,
											"end": 282,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 247,
											"end": 299,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 247,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 247,
											"end": 299,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 321,
											"end": 344,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 353,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 353,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 353,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 384,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 353,
											"end": 384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 403,
											"end": 408,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 455,
											"end": 457,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 440,
											"end": 458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 440,
											"end": 458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 427,
											"end": 459,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 427,
											"end": 459,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 470,
											"end": 650,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 470,
											"end": 650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 529,
											"end": 535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 561,
											"end": 568,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 557,
											"end": 580,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 553,
											"end": 585,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 550,
											"end": 602,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 550,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 550,
											"end": 602,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 598,
											"end": 599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 600,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 550,
											"end": 602,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 550,
											"end": 602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 621,
											"end": 644,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 621,
											"end": 644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 470,
											"end": 650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 470,
											"end": 650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1107,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 1250,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1239,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1251,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1256,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1318,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1327,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 1358,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1327,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1382,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1433,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1433,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1483,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1484,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1484,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1490,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1107,
											"end": 1490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 4214,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3963,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4033,
											"end": 4039,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4083,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4089,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4144,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4153,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 4214,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3963,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4865,
											"end": 5142,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4865,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 4987,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4973,
											"end": 4982,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4971,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 4983,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4956,
											"end": 4988,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5001,
											"end": 5002,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 4999,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4991,
											"end": 5003,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5033,
											"end": 5042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5043,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5092,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5094,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5052,
											"end": 5112,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SpageroNFTMarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buy(address,uint256)": "cce7ec13",
							"cancel(address,uint256)": "98590ef9",
							"list(address,uint256,uint256)": "dda342bb",
							"listings(bytes32)": "c18b8db4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Cancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Listed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Purchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"list\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroNFTMarket.sol\":\"SpageroNFTMarket\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"SpageroNFTMarket.sol\":{\"keccak256\":\"0x1c2d235d20e575253320f78efb3da164b7563a661bcf02fa3bd48e17028da211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6db4d3008ad73053a3106dfcce478fbcb517a9953d000d59c3bd430dcf84719\",\"dweb:/ipfs/QmSP6mebdKxeuPqHUzZRa5TiRg4ssfa6DJQN4kCBvHaVhr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "SpageroNFTMarket.sol:SpageroNFTMarket",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 213,
								"contract": "SpageroNFTMarket.sol:SpageroNFTMarket",
								"label": "listings",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(Listing)208_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(Listing)208_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct SpageroNFTMarket.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)208_storage"
							},
							"t_struct(Listing)208_storage": {
								"encoding": "inplace",
								"label": "struct SpageroNFTMarket.Listing",
								"members": [
									{
										"astId": 201,
										"contract": "SpageroNFTMarket.sol:SpageroNFTMarket",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 203,
										"contract": "SpageroNFTMarket.sol:SpageroNFTMarket",
										"label": "nft",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 205,
										"contract": "SpageroNFTMarket.sol:SpageroNFTMarket",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 207,
										"contract": "SpageroNFTMarket.sol:SpageroNFTMarket",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							193
						],
						"IERC721": [
							181
						]
					},
					"id": 182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 182,
							"sourceUnit": 194,
							"src": "134:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 67,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 193,
										"src": "142:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 70,
										"name": "IERC165",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "288:7:1"
									},
									"id": 71,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 69,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:1",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 181,
							"linearizedBaseContracts": [
								181,
								193
							],
							"name": "IERC721",
							"nameLocation": "277:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 80,
									"name": "Transfer",
									"nameLocation": "401:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "410:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "432:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "452:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:1"
									},
									"src": "395:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 89,
									"name": "Approval",
									"nameLocation": "588:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "597:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "620:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "646:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:1"
									},
									"src": "582:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 98,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "820:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "843:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "869:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:1"
									},
									"src": "799:85:1"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "990:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1028:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:1"
									},
									"scope": 181,
									"src": "971:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1204:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1244:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:1"
									},
									"scope": 181,
									"src": "1187:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1861:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1875:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1887:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1904:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:1"
									},
									"scope": 181,
									"src": "1835:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "2691:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "2703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:1"
									},
									"scope": 181,
									"src": "2651:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3495:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3509:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3521:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:1"
									},
									"scope": 181,
									"src": "3473:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4027:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "4039:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:1"
									},
									"scope": 181,
									"src": "4010:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4418:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4436:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:1"
									},
									"scope": 181,
									"src": "4391:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4631:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4671:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:1"
									},
									"scope": 181,
									"src": "4610:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "4864:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "4879:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "4920:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:1"
									},
									"scope": 181,
									"src": "4838:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 182,
							"src": "267:4661:1",
							"usedErrors": [],
							"usedEvents": [
								80,
								89,
								98
							]
						}
					],
					"src": "108:4821:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 183,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 184,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:2",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 193,
							"linearizedBaseContracts": [
								193
							],
							"name": "IERC165",
							"nameLocation": "433:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "819:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 186,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "862:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:2"
									},
									"scope": 193,
									"src": "792:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 194,
							"src": "423:447:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:2"
				},
				"id": 2
			},
			"SpageroNFTMarket.sol": {
				"ast": {
					"absolutePath": "SpageroNFTMarket.sol",
					"exportedSymbols": {
						"IERC165": [
							193
						],
						"IERC721": [
							181
						],
						"ReentrancyGuard": [
							64
						],
						"SpageroNFTMarket": [
							489
						]
					},
					"id": 490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 490,
							"sourceUnit": 182,
							"src": "61:58:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 490,
							"sourceUnit": 65,
							"src": "121:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 198,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"216:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "216:15:3"
									},
									"id": 199,
									"nodeType": "InheritanceSpecifier",
									"src": "216:15:3"
								}
							],
							"canonicalName": "SpageroNFTMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 489,
							"linearizedBaseContracts": [
								489,
								64
							],
							"name": "SpageroNFTMarket",
							"nameLocation": "196:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SpageroNFTMarket.Listing",
									"id": 208,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "264:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "256:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 200,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "256:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 203,
											"mutability": "mutable",
											"name": "nft",
											"nameLocation": "280:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "272:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 202,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "272:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 205,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "293:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "285:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "285:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 207,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "310:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "302:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 206,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "302:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "246:7:3",
									"nodeType": "StructDefinition",
									"scope": 489,
									"src": "239:79:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c18b8db4",
									"id": 213,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "359:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 489,
									"src": "324:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$208_storage_$",
										"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing)"
									},
									"typeName": {
										"id": 212,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 209,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "332:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "324:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$208_storage_$",
											"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 211,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 210,
												"name": "Listing",
												"nameLocations": [
													"343:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "343:7:3"
											},
											"referencedDeclaration": 208,
											"src": "343:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Listing_$208_storage_ptr",
												"typeString": "struct SpageroNFTMarket.Listing"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca",
									"id": 223,
									"name": "Listed",
									"nameLocation": "382:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "405:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "389:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"indexed": true,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "429:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "413:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "450:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "434:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "467:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "459:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:85:3"
									},
									"src": "376:98:3"
								},
								{
									"anonymous": false,
									"eventSelector": "915fb8c652d6245752cc491b71bd8e87ab6761417f8d2ca353c8055103294c03",
									"id": 231,
									"name": "Cancelled",
									"nameLocation": "486:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "512:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "496:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "536:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "520:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "557:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "541:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:70:3"
									},
									"src": "480:86:3"
								},
								{
									"anonymous": false,
									"eventSelector": "a326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49",
									"id": 241,
									"name": "Purchased",
									"nameLocation": "578:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "588:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "627:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "611:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "632:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "665:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "657:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:84:3"
									},
									"src": "572:100:3"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "755:67:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 253,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "800:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 254,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "805:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 251,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "783:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "787:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "783:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "783:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 250,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "773:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 249,
												"id": 257,
												"nodeType": "Return",
												"src": "766:48:3"
											}
										]
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_key",
									"nameLocation": "689:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "702:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "694:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "715:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "707:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:30:3"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "746:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 247,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:9:3"
									},
									"scope": 489,
									"src": "680:142:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "898:469:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 269,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "917:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "925:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "917:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "70726963653d30",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "928:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882",
																"typeString": "literal_string \"price=0\""
															},
															"value": "price=0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882",
																"typeString": "literal_string \"price=0\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "909:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "909:29:3"
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "957:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "949:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$181",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 276,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 275,
																"name": "IERC721",
																"nameLocations": [
																	"949:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "949:7:3"
															},
															"referencedDeclaration": 181,
															"src": "949:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$181",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 281,
												"initialValue": {
													"arguments": [
														{
															"id": 279,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "973:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 278,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "965:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$181_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "965:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$181",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "949:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 285,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "1010:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 283,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "996:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$181",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1002:7:3",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 114,
																	"src": "996:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "996:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 287,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1022:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1026:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1022:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "996:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1034:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "988:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "988:58:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 296,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1088:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1092:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1088:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 300,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1108:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SpageroNFTMarket_$489",
																					"typeString": "contract SpageroNFTMarket"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SpageroNFTMarket_$489",
																					"typeString": "contract SpageroNFTMarket"
																				}
																			],
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1100:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 298,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1100:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1100:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "1065:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$181",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1071:16:3",
																	"memberName": "isApprovedForAll",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "1065:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view external returns (bool)"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1065:49:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 305,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "1136:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 303,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 277,
																			"src": "1118:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721_$181",
																				"typeString": "contract IERC721"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1124:11:3",
																		"memberName": "getApproved",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 170,
																		"src": "1118:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view external returns (address)"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1118:26:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 309,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1156:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SpageroNFTMarket_$489",
																				"typeString": "contract SpageroNFTMarket"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SpageroNFTMarket_$489",
																				"typeString": "contract SpageroNFTMarket"
																			}
																		],
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1148:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 307,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1148:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1148:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1118:43:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1065:96:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d61726b6574206e6f7420617070726f766564",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1176:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb",
																"typeString": "literal_string \"market not approved\""
															},
															"value": "market not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb",
																"typeString": "literal_string \"market not approved\""
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1057:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:141:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "1057:141:3"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "1217:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "1209:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 316,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1209:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 322,
												"initialValue": {
													"arguments": [
														{
															"id": 319,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "1226:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 318,
														"name": "_key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1221:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,uint256) pure returns (bytes32)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1209:30:3"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 323,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "1250:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$208_storage_$",
																"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
															}
														},
														"id": 325,
														"indexExpression": {
															"id": 324,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "1259:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1250:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$208_storage",
															"typeString": "struct SpageroNFTMarket.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 327,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1272:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1276:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1272:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 329,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "1284:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 330,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "1289:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 331,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "1298:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 326,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1264:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$208_storage_ptr_$",
																"typeString": "type(struct SpageroNFTMarket.Listing storage pointer)"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1264:40:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
															"typeString": "struct SpageroNFTMarket.Listing memory"
														}
													},
													"src": "1250:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$208_storage",
														"typeString": "struct SpageroNFTMarket.Listing storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1250:54:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 336,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1327:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1331:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1327:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "1339:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1344:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 340,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1353:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "Listed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1320:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1320:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "EmitStatement",
												"src": "1315:44:3"
											}
										]
									},
									"functionSelector": "dda342bb",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "list",
									"nameLocation": "839:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "852:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "844:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "865:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "857:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "882:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "874:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:45:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "898:0:3"
									},
									"scope": 489,
									"src": "830:537:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "1430:282:3",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "1449:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "1441:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 351,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1441:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"id": 354,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "1458:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "1463:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 353,
														"name": "_key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1453:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,uint256) pure returns (bytes32)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1453:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1441:30:3"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "1497:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "1482:16:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
															"typeString": "struct SpageroNFTMarket.Listing"
														},
														"typeName": {
															"id": 359,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 358,
																"name": "Listing",
																"nameLocations": [
																	"1482:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 208,
																"src": "1482:7:3"
															},
															"referencedDeclaration": 208,
															"src": "1482:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$208_storage_ptr",
																"typeString": "struct SpageroNFTMarket.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"baseExpression": {
														"id": 361,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1501:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$208_storage_$",
															"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
														}
													},
													"id": 363,
													"indexExpression": {
														"id": 362,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1510:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1501:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$208_storage",
														"typeString": "struct SpageroNFTMarket.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1482:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 366,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "1531:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
																		"typeString": "struct SpageroNFTMarket.Listing memory"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1533:6:3",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 201,
																"src": "1531:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1551:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1543:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 368,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1543:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1543:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1531:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206c6973746564",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7",
																"typeString": "literal_string \"not listed\""
															},
															"value": "not listed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7",
																"typeString": "literal_string \"not listed\""
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1523:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1523:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "1523:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 377,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "1587:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
																		"typeString": "struct SpageroNFTMarket.Listing memory"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1589:6:3",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 201,
																"src": "1587:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 379,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1599:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1603:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1599:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1587:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073656c6c6572",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1611:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															},
															"value": "not seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															}
														],
														"id": 376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1579:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1579:45:3"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1635:18:3",
													"subExpression": {
														"baseExpression": {
															"id": 385,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "1642:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$208_storage_$",
																"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
															}
														},
														"id": 387,
														"indexExpression": {
															"id": 386,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1651:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1642:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$208_storage",
															"typeString": "struct SpageroNFTMarket.Listing storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "1635:18:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 391,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1679:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1683:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1679:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "1691:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "1696:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "Cancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1669:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "EmitStatement",
												"src": "1664:40:3"
											}
										]
									},
									"functionSelector": "98590ef9",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "1384:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "1399:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1391:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1412:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1404:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:30:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1430:0:3"
									},
									"scope": 489,
									"src": "1375:337:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "1793:477:3",
										"statements": [
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "1812:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "1804:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 407,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1804:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"arguments": [
														{
															"id": 410,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "1821:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "_key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1816:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,uint256) pure returns (bytes32)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1804:30:3"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "1860:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "1845:16:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
															"typeString": "struct SpageroNFTMarket.Listing"
														},
														"typeName": {
															"id": 415,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 414,
																"name": "Listing",
																"nameLocations": [
																	"1845:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 208,
																"src": "1845:7:3"
															},
															"referencedDeclaration": 208,
															"src": "1845:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$208_storage_ptr",
																"typeString": "struct SpageroNFTMarket.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"baseExpression": {
														"id": 417,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1864:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$208_storage_$",
															"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
														}
													},
													"id": 419,
													"indexExpression": {
														"id": 418,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1873:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1864:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$208_storage",
														"typeString": "struct SpageroNFTMarket.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1845:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 422,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "1894:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
																		"typeString": "struct SpageroNFTMarket.Listing memory"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1896:6:3",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 201,
																"src": "1894:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1914:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1906:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 424,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1906:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1906:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1894:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206c6973746564",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1918:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7",
																"typeString": "literal_string \"not listed\""
															},
															"value": "not listed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7",
																"typeString": "literal_string \"not listed\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1886:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1886:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "1886:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 433,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1950:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1954:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1950:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 435,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "1963:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
																		"typeString": "struct SpageroNFTMarket.Listing memory"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1965:5:3",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 207,
																"src": "1963:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1950:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6261642076616c7565",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1972:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7",
																"typeString": "literal_string \"bad value\""
															},
															"value": "bad value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7",
																"typeString": "literal_string \"bad value\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1942:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "1942:42:3"
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1995:18:3",
													"subExpression": {
														"baseExpression": {
															"id": 441,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "2002:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$208_storage_$",
																"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
															}
														},
														"id": 443,
														"indexExpression": {
															"id": 442,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2011:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2002:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$208_storage",
															"typeString": "struct SpageroNFTMarket.Listing storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "1995:18:3"
											},
											{
												"assignments": [
													447,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "2030:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "2025:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 446,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2025:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 459,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2079:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 450,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 416,
																			"src": "2046:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
																				"typeString": "struct SpageroNFTMarket.Listing memory"
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2048:6:3",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 201,
																		"src": "2046:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2038:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 448,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2038:8:3",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2038:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2056:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2038:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 454,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2068:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2072:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2068:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2038:40:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2024:58:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2101:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7061792073656c6c6572206661696c6564",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2105:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1",
																"typeString": "literal_string \"pay seller failed\""
															},
															"value": "pay seller failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1",
																"typeString": "literal_string \"pay seller failed\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "2093:32:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 470,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "2168:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
																	"typeString": "struct SpageroNFTMarket.Listing memory"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2170:6:3",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "2168:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2178:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2182:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2178:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 474,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "2190:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
																	"typeString": "struct SpageroNFTMarket.Listing memory"
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2192:7:3",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 205,
															"src": "2190:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 466,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "2144:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$208_memory_ptr",
																			"typeString": "struct SpageroNFTMarket.Listing memory"
																		}
																	},
																	"id": 467,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2146:3:3",
																	"memberName": "nft",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 203,
																	"src": "2144:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 465,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2136:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$181_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2136:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$181",
																"typeString": "contract IERC721"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2151:16:3",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 136,
														"src": "2136:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "2136:64:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 479,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2226:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2230:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2226:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 481,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "2238:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2252:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2256:5:3",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2252:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 478,
														"name": "Purchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2216:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2216:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "EmitStatement",
												"src": "2211:51:3"
											}
										]
									},
									"functionSelector": "cce7ec13",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 404,
												"name": "nonReentrant",
												"nameLocations": [
													"1780:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "1780:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1780:12:3"
										}
									],
									"name": "buy",
									"nameLocation": "1729:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "1741:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1733:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1754:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1746:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1746:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:30:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:0:3"
									},
									"scope": 489,
									"src": "1720:550:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 490,
							"src": "187:2086:3",
							"usedErrors": [],
							"usedEvents": [
								223,
								231,
								241
							]
						}
					],
					"src": "33:2242:3"
				},
				"id": 3
			}
		}
	}
}