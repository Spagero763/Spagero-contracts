{
	"id": "0bb3af130569fb751fa62d6268b7cd02",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"SpageroSimpleAirdrop.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract SpageroSimpleAirdrop is Ownable {\r\n    IERC20 public immutable token;\r\n    mapping(address => uint256) public allowance;\r\n    event Seed(address indexed user, uint256 amount);\r\n    event Claimed(address indexed user, uint256 amount);\r\n\r\n    constructor(IERC20 token_) Ownable(msg.sender) { token = token_; }\r\n\r\n    function seed(address[] calldata users, uint256[] calldata amounts) external onlyOwner {\r\n        require(users.length == amounts.length, \"length mismatch\");\r\n        for (uint256 i; i < users.length; i++) {\r\n            allowance[users[i]] = amounts[i];\r\n            emit Seed(users[i], amounts[i]);\r\n        }\r\n    }\r\n\r\n    function claim() external {\r\n        uint256 amt = allowance[msg.sender];\r\n        require(amt > 0, \"nothing to claim\");\r\n        allowance[msg.sender] = 0;\r\n        require(token.transfer(msg.sender, amt), \"transfer failed\");\r\n        emit Claimed(msg.sender, amt);\r\n    }\r\n\r\n    function recover(address to, uint256 amount) external onlyOwner {\r\n        require(token.transfer(to, amount), \"transfer failed\");\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SpageroSimpleAirdrop.sol": {
				"SpageroSimpleAirdrop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Seed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recover",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "seed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroSimpleAirdrop.sol\":175:1246  contract SpageroSimpleAirdrop is Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"SpageroSimpleAirdrop.sol\":425:491  constructor(IERC20 token_) Ownable(msg.sender) { token = token_; } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SpageroSimpleAirdrop.sol\":460:470  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":469:520   */\n  mstore\n    /* \"#utility.yul\":442:460   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SpageroSimpleAirdrop.sol\":474:488  token = token_ */\n  and\n  0x80\n  mstore\n    /* \"SpageroSimpleAirdrop.sol\":175:1246  contract SpageroSimpleAirdrop is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:318   */\ntag_3:\n    /* \"#utility.yul\":98:104   */\n  0x00\n    /* \"#utility.yul\":151:153   */\n  0x20\n    /* \"#utility.yul\":139:148   */\n  dup3\n    /* \"#utility.yul\":130:137   */\n  dup5\n    /* \"#utility.yul\":126:149   */\n  sub\n    /* \"#utility.yul\":122:154   */\n  slt\n    /* \"#utility.yul\":119:171   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":167:168   */\n  0x00\n    /* \"#utility.yul\":164:165   */\n  dup1\n    /* \"#utility.yul\":157:169   */\n  revert\n    /* \"#utility.yul\":119:171   */\ntag_17:\n    /* \"#utility.yul\":193:209   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":238:269   */\n  dup2\n  and\n    /* \"#utility.yul\":228:270   */\n  dup2\n  eq\n    /* \"#utility.yul\":218:288   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":284:285   */\n  0x00\n    /* \"#utility.yul\":281:282   */\n  dup1\n    /* \"#utility.yul\":274:286   */\n  revert\n    /* \"#utility.yul\":218:288   */\ntag_18:\n    /* \"#utility.yul\":307:312   */\n  swap4\n    /* \"#utility.yul\":14:318   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":323:526   */\ntag_15:\n    /* \"SpageroSimpleAirdrop.sol\":175:1246  contract SpageroSimpleAirdrop is Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"SpageroSimpleAirdrop.sol\":175:1246  contract SpageroSimpleAirdrop is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbb0b66f0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x3e5beab9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5705ae43\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SpageroSimpleAirdrop.sol\":259:303  mapping(address => uint256) public allowance */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"SpageroSimpleAirdrop.sol\":259:303  mapping(address => uint256) public allowance */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SpageroSimpleAirdrop.sol\":825:1098  function claim() external {... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"SpageroSimpleAirdrop.sol\":1106:1243  function recover(address to, uint256 amount) external onlyOwner {... */\n    tag_5:\n      tag_18\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_18\n      tag_25\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_26:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":988:1020   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":970:1021   */\n      dup2\n      mstore\n        /* \"#utility.yul\":958:960   */\n      0x20\n        /* \"#utility.yul\":943:961   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_16\n        /* \"#utility.yul\":824:1027   */\n      jump\n        /* \"SpageroSimpleAirdrop.sol\":499:817  function seed(address[] calldata users, uint256[] calldata amounts) external onlyOwner {... */\n    tag_8:\n      tag_18\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_18\n      tag_35\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"SpageroSimpleAirdrop.sol\":223:252  IERC20 public immutable token */\n    tag_10:\n      tag_26\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n      dup2\n      jump\n        /* \"SpageroSimpleAirdrop.sol\":825:1098  function claim() external {... */\n    tag_19:\n        /* \"SpageroSimpleAirdrop.sol\":886:896  msg.sender */\n      caller\n        /* \"SpageroSimpleAirdrop.sol\":862:873  uint256 amt */\n      0x00\n        /* \"SpageroSimpleAirdrop.sol\":876:897  allowance[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"SpageroSimpleAirdrop.sol\":876:885  allowance */\n      0x01\n        /* \"SpageroSimpleAirdrop.sol\":876:897  allowance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"SpageroSimpleAirdrop.sol\":916:923  amt > 0 */\n      dup1\n        /* \"SpageroSimpleAirdrop.sol\":908:944  require(amt > 0, \"nothing to claim\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"SpageroSimpleAirdrop.sol\":908:944  require(amt > 0, \"nothing to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2588:2609   */\n      mstore\n        /* \"#utility.yul\":2645:2647   */\n      0x10\n        /* \"#utility.yul\":2625:2643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2618:2648   */\n      mstore\n      shl(0x80, 0x6e6f7468696e6720746f20636c61696d)\n        /* \"#utility.yul\":2664:2682   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2657:2703   */\n      mstore\n        /* \"#utility.yul\":2720:2738   */\n      0x64\n      add\n        /* \"SpageroSimpleAirdrop.sol\":908:944  require(amt > 0, \"nothing to claim\") */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"SpageroSimpleAirdrop.sol\":965:975  msg.sender */\n      caller\n        /* \"SpageroSimpleAirdrop.sol\":979:980  0 */\n      0x00\n        /* \"SpageroSimpleAirdrop.sol\":955:976  allowance[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"SpageroSimpleAirdrop.sol\":955:964  allowance */\n      0x01\n        /* \"SpageroSimpleAirdrop.sol\":955:976  allowance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"SpageroSimpleAirdrop.sol\":955:980  allowance[msg.sender] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"SpageroSimpleAirdrop.sol\":999:1030  token.transfer(msg.sender, amt) */\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2923:2974   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2990:3008   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2983:3017   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroSimpleAirdrop.sol\":999:1004  token */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n        /* \"SpageroSimpleAirdrop.sol\":999:1013  token.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2896:2914   */\n      0x44\n      add\n        /* \"SpageroSimpleAirdrop.sol\":999:1030  token.transfer(msg.sender, amt) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"SpageroSimpleAirdrop.sol\":991:1050  require(token.transfer(msg.sender, amt), \"transfer failed\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3512:3514   */\n      0x20\n        /* \"SpageroSimpleAirdrop.sol\":991:1050  require(token.transfer(msg.sender, amt), \"transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3494:3515   */\n      mstore\n        /* \"#utility.yul\":3551:3553   */\n      0x0f\n        /* \"#utility.yul\":3531:3549   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3524:3554   */\n      mstore\n      shl(0x8a, 0x1d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":3570:3588   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3563:3608   */\n      mstore\n        /* \"#utility.yul\":3625:3643   */\n      0x64\n      add\n        /* \"SpageroSimpleAirdrop.sol\":991:1050  require(token.transfer(msg.sender, amt), \"transfer failed\") */\n      tag_43\n        /* \"#utility.yul\":3310:3649   */\n      jump\n        /* \"SpageroSimpleAirdrop.sol\":991:1050  require(token.transfer(msg.sender, amt), \"transfer failed\") */\n    tag_51:\n        /* \"SpageroSimpleAirdrop.sol\":1066:1090  Claimed(msg.sender, amt) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup2\n      dup2\n      mstore\n        /* \"SpageroSimpleAirdrop.sol\":1074:1084  msg.sender */\n      caller\n      swap1\n        /* \"SpageroSimpleAirdrop.sol\":1066:1090  Claimed(msg.sender, amt) */\n      0xd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"SpageroSimpleAirdrop.sol\":1066:1090  Claimed(msg.sender, amt) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SpageroSimpleAirdrop.sol\":851:1098  {... */\n      pop\n        /* \"SpageroSimpleAirdrop.sol\":825:1098  function claim() external {... */\n      jump\t// out\n        /* \"SpageroSimpleAirdrop.sol\":1106:1243  function recover(address to, uint256 amount) external onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"SpageroSimpleAirdrop.sol\":1189:1215  token.transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2941:2973   */\n      dup4\n      dup2\n      and\n        /* \"SpageroSimpleAirdrop.sol\":1189:1215  token.transfer(to, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2923:2974   */\n      mstore\n        /* \"#utility.yul\":2990:3008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2983:3017   */\n      dup4\n      swap1\n      mstore\n        /* \"SpageroSimpleAirdrop.sol\":1189:1194  token */\n      immutable(\"0xb7020dd003fcd4d96af1507ff4dc7e2c1158f23ad0bacfdf3455869cf9fb4898\")\n        /* \"SpageroSimpleAirdrop.sol\":1189:1203  token.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2896:2914   */\n      0x44\n      add\n        /* \"SpageroSimpleAirdrop.sol\":1189:1215  token.transfer(to, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_62:\n        /* \"SpageroSimpleAirdrop.sol\":1181:1235  require(token.transfer(to, amount), \"transfer failed\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3512:3514   */\n      0x20\n        /* \"SpageroSimpleAirdrop.sol\":1181:1235  require(token.transfer(to, amount), \"transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3494:3515   */\n      mstore\n        /* \"#utility.yul\":3551:3553   */\n      0x0f\n        /* \"#utility.yul\":3531:3549   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3524:3554   */\n      mstore\n      shl(0x8a, 0x1d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":3570:3588   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3563:3608   */\n      mstore\n        /* \"#utility.yul\":3625:3643   */\n      0x64\n      add\n        /* \"SpageroSimpleAirdrop.sol\":1181:1235  require(token.transfer(to, amount), \"transfer failed\") */\n      tag_43\n        /* \"#utility.yul\":3310:3649   */\n      jump\n        /* \"SpageroSimpleAirdrop.sol\":1181:1235  require(token.transfer(to, amount), \"transfer failed\") */\n    tag_63:\n        /* \"SpageroSimpleAirdrop.sol\":1106:1243  function recover(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SpageroSimpleAirdrop.sol\":499:817  function seed(address[] calldata users, uint256[] calldata amounts) external onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_72:\n        /* \"SpageroSimpleAirdrop.sol\":605:635  users.length == amounts.length */\n      dup3\n      dup2\n      eq\n        /* \"SpageroSimpleAirdrop.sol\":597:655  require(users.length == amounts.length, \"length mismatch\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3856:3858   */\n      0x20\n        /* \"SpageroSimpleAirdrop.sol\":597:655  require(users.length == amounts.length, \"length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3838:3859   */\n      mstore\n        /* \"#utility.yul\":3895:3897   */\n      0x0f\n        /* \"#utility.yul\":3875:3893   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3868:3898   */\n      mstore\n      shl(0x8b, 0x0d8cadccee8d040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":3914:3932   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3907:3952   */\n      mstore\n        /* \"#utility.yul\":3969:3987   */\n      0x64\n      add\n        /* \"SpageroSimpleAirdrop.sol\":597:655  require(users.length == amounts.length, \"length mismatch\") */\n      tag_43\n        /* \"#utility.yul\":3654:3993   */\n      jump\n        /* \"SpageroSimpleAirdrop.sol\":597:655  require(users.length == amounts.length, \"length mismatch\") */\n    tag_74:\n        /* \"SpageroSimpleAirdrop.sol\":671:680  uint256 i */\n      0x00\n        /* \"SpageroSimpleAirdrop.sol\":666:810  for (uint256 i; i < users.length; i++) {... */\n    tag_77:\n        /* \"SpageroSimpleAirdrop.sol\":682:698  i < users.length */\n      dup4\n      dup2\n      lt\n        /* \"SpageroSimpleAirdrop.sol\":666:810  for (uint256 i; i < users.length; i++) {... */\n      iszero\n      tag_78\n      jumpi\n        /* \"SpageroSimpleAirdrop.sol\":742:749  amounts */\n      dup3\n      dup3\n        /* \"SpageroSimpleAirdrop.sol\":750:751  i */\n      dup3\n        /* \"SpageroSimpleAirdrop.sol\":742:752  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_81\n      jumpi\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"SpageroSimpleAirdrop.sol\":720:729  allowance */\n      0x01\n        /* \"SpageroSimpleAirdrop.sol\":720:739  allowance[users[i]] */\n      0x00\n        /* \"SpageroSimpleAirdrop.sol\":730:735  users */\n      dup8\n      dup8\n        /* \"SpageroSimpleAirdrop.sol\":736:737  i */\n      dup6\n        /* \"SpageroSimpleAirdrop.sol\":730:738  users[i] */\n      dup2\n      dup2\n      lt\n      tag_84\n      jumpi\n      tag_84\n      tag_82\n      jump\t// in\n    tag_84:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroSimpleAirdrop.sol\":720:739  allowance[users[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"SpageroSimpleAirdrop.sol\":720:752  allowance[users[i]] = amounts[i] */\n      sstore\n        /* \"SpageroSimpleAirdrop.sol\":777:782  users */\n      dup5\n      dup5\n        /* \"SpageroSimpleAirdrop.sol\":783:784  i */\n      dup3\n        /* \"SpageroSimpleAirdrop.sol\":777:785  users[i] */\n      dup2\n      dup2\n      lt\n      tag_87\n      jumpi\n      tag_87\n      tag_82\n      jump\t// in\n    tag_87:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroSimpleAirdrop.sol\":772:798  Seed(users[i], amounts[i]) */\n      and\n      0x0dc749e345b2caa65962a98c3fb1fc462f67ae5e14663e1dfa11bd4f53ece31e\n        /* \"SpageroSimpleAirdrop.sol\":787:794  amounts */\n      dup5\n      dup5\n        /* \"SpageroSimpleAirdrop.sol\":795:796  i */\n      dup5\n        /* \"SpageroSimpleAirdrop.sol\":787:797  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_90\n      jumpi\n      tag_90\n      tag_82\n      jump\t// in\n    tag_90:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"SpageroSimpleAirdrop.sol\":772:798  Seed(users[i], amounts[i]) */\n      mload(0x40)\n      tag_91\n      swap2\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"SpageroSimpleAirdrop.sol\":772:798  Seed(users[i], amounts[i]) */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SpageroSimpleAirdrop.sol\":700:703  i++ */\n      0x01\n      add\n        /* \"SpageroSimpleAirdrop.sol\":666:810  for (uint256 i; i < users.length; i++) {... */\n      jump(tag_77)\n    tag_78:\n      pop\n        /* \"SpageroSimpleAirdrop.sol\":499:817  function seed(address[] calldata users, uint256[] calldata amounts) external onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":970:1021   */\n      mstore\n        /* \"#utility.yul\":943:961   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_43\n        /* \"#utility.yul\":824:1027   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_68\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":970:1021   */\n      mstore\n        /* \"#utility.yul\":943:961   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_43\n        /* \"#utility.yul\":824:1027   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_107:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_111:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_14:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_113:\n        /* \"#utility.yul\":343:372   */\n      tag_114\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_107\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:819   */\n    tag_22:\n        /* \"#utility.yul\":633:639   */\n      0x00\n        /* \"#utility.yul\":641:647   */\n      dup1\n        /* \"#utility.yul\":694:696   */\n      0x40\n        /* \"#utility.yul\":682:691   */\n      dup4\n        /* \"#utility.yul\":673:680   */\n      dup6\n        /* \"#utility.yul\":669:692   */\n      sub\n        /* \"#utility.yul\":665:697   */\n      slt\n        /* \"#utility.yul\":662:714   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":710:711   */\n      0x00\n        /* \"#utility.yul\":707:708   */\n      dup1\n        /* \"#utility.yul\":700:712   */\n      revert\n        /* \"#utility.yul\":662:714   */\n    tag_117:\n        /* \"#utility.yul\":733:762   */\n      tag_118\n        /* \"#utility.yul\":752:761   */\n      dup4\n        /* \"#utility.yul\":733:762   */\n      tag_107\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":723:762   */\n      swap5\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":794:812   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":781:813   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":565:819   */\n      jump\t// out\n        /* \"#utility.yul\":1032:1399   */\n    tag_108:\n        /* \"#utility.yul\":1095:1103   */\n      0x00\n        /* \"#utility.yul\":1105:1111   */\n      dup1\n        /* \"#utility.yul\":1159:1162   */\n      dup4\n        /* \"#utility.yul\":1152:1156   */\n      0x1f\n        /* \"#utility.yul\":1144:1150   */\n      dup5\n        /* \"#utility.yul\":1140:1157   */\n      add\n        /* \"#utility.yul\":1136:1163   */\n      slt\n        /* \"#utility.yul\":1126:1181   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":1177:1178   */\n      0x00\n        /* \"#utility.yul\":1174:1175   */\n      dup1\n        /* \"#utility.yul\":1167:1179   */\n      revert\n        /* \"#utility.yul\":1126:1181   */\n    tag_121:\n      pop\n        /* \"#utility.yul\":1200:1220   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":1243:1261   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1232:1262   */\n      dup2\n      gt\n        /* \"#utility.yul\":1229:1279   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":1275:1276   */\n      0x00\n        /* \"#utility.yul\":1272:1273   */\n      dup1\n        /* \"#utility.yul\":1265:1277   */\n      revert\n        /* \"#utility.yul\":1229:1279   */\n    tag_122:\n        /* \"#utility.yul\":1312:1316   */\n      0x20\n        /* \"#utility.yul\":1304:1310   */\n      dup4\n        /* \"#utility.yul\":1300:1317   */\n      add\n        /* \"#utility.yul\":1288:1317   */\n      swap2\n      pop\n        /* \"#utility.yul\":1372:1375   */\n      dup4\n        /* \"#utility.yul\":1365:1369   */\n      0x20\n        /* \"#utility.yul\":1355:1361   */\n      dup3\n        /* \"#utility.yul\":1352:1353   */\n      0x05\n        /* \"#utility.yul\":1348:1362   */\n      shl\n        /* \"#utility.yul\":1340:1346   */\n      dup6\n        /* \"#utility.yul\":1336:1363   */\n      add\n        /* \"#utility.yul\":1332:1370   */\n      add\n        /* \"#utility.yul\":1329:1376   */\n      gt\n        /* \"#utility.yul\":1326:1393   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":1389:1390   */\n      0x00\n        /* \"#utility.yul\":1386:1387   */\n      dup1\n        /* \"#utility.yul\":1379:1391   */\n      revert\n        /* \"#utility.yul\":1326:1393   */\n    tag_123:\n        /* \"#utility.yul\":1032:1399   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:2177   */\n    tag_32:\n        /* \"#utility.yul\":1526:1532   */\n      0x00\n        /* \"#utility.yul\":1534:1540   */\n      dup1\n        /* \"#utility.yul\":1542:1548   */\n      0x00\n        /* \"#utility.yul\":1550:1556   */\n      dup1\n        /* \"#utility.yul\":1603:1605   */\n      0x40\n        /* \"#utility.yul\":1591:1600   */\n      dup6\n        /* \"#utility.yul\":1582:1589   */\n      dup8\n        /* \"#utility.yul\":1578:1601   */\n      sub\n        /* \"#utility.yul\":1574:1606   */\n      slt\n        /* \"#utility.yul\":1571:1623   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":1619:1620   */\n      0x00\n        /* \"#utility.yul\":1616:1617   */\n      dup1\n        /* \"#utility.yul\":1609:1621   */\n      revert\n        /* \"#utility.yul\":1571:1623   */\n    tag_125:\n        /* \"#utility.yul\":1659:1668   */\n      dup5\n        /* \"#utility.yul\":1646:1669   */\n      calldataload\n        /* \"#utility.yul\":1688:1706   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1729:1731   */\n      dup1\n        /* \"#utility.yul\":1721:1727   */\n      dup3\n        /* \"#utility.yul\":1718:1732   */\n      gt\n        /* \"#utility.yul\":1715:1749   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1742:1743   */\n      dup1\n        /* \"#utility.yul\":1735:1747   */\n      revert\n        /* \"#utility.yul\":1715:1749   */\n    tag_126:\n        /* \"#utility.yul\":1784:1854   */\n      tag_127\n        /* \"#utility.yul\":1846:1853   */\n      dup9\n        /* \"#utility.yul\":1837:1843   */\n      dup4\n        /* \"#utility.yul\":1826:1835   */\n      dup10\n        /* \"#utility.yul\":1822:1844   */\n      add\n        /* \"#utility.yul\":1784:1854   */\n      tag_108\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1873:1881   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":1758:1854   */\n      swap5\n      pop\n        /* \"#utility.yul\":1961:1963   */\n      0x20\n        /* \"#utility.yul\":1946:1964   */\n      dup8\n      add\n        /* \"#utility.yul\":1933:1965   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1977:1993   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1974:2010   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":2006:2007   */\n      0x00\n        /* \"#utility.yul\":2003:2004   */\n      dup1\n        /* \"#utility.yul\":1996:2008   */\n      revert\n        /* \"#utility.yul\":1974:2010   */\n    tag_128:\n      pop\n        /* \"#utility.yul\":2045:2117   */\n      tag_129\n        /* \"#utility.yul\":2109:2116   */\n      dup8\n        /* \"#utility.yul\":2098:2106   */\n      dup3\n        /* \"#utility.yul\":2087:2096   */\n      dup9\n        /* \"#utility.yul\":2083:2107   */\n      add\n        /* \"#utility.yul\":2045:2117   */\n      tag_108\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1404:2177   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":2136:2144   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1404:2177   */\n      jump\t// out\n        /* \"#utility.yul\":3028:3305   */\n    tag_50:\n        /* \"#utility.yul\":3095:3101   */\n      0x00\n        /* \"#utility.yul\":3148:3150   */\n      0x20\n        /* \"#utility.yul\":3136:3145   */\n      dup3\n        /* \"#utility.yul\":3127:3134   */\n      dup5\n        /* \"#utility.yul\":3123:3146   */\n      sub\n        /* \"#utility.yul\":3119:3151   */\n      slt\n        /* \"#utility.yul\":3116:3168   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":3164:3165   */\n      0x00\n        /* \"#utility.yul\":3161:3162   */\n      dup1\n        /* \"#utility.yul\":3154:3166   */\n      revert\n        /* \"#utility.yul\":3116:3168   */\n    tag_134:\n        /* \"#utility.yul\":3196:3205   */\n      dup2\n        /* \"#utility.yul\":3190:3206   */\n      mload\n        /* \"#utility.yul\":3249:3254   */\n      dup1\n        /* \"#utility.yul\":3242:3255   */\n      iszero\n        /* \"#utility.yul\":3235:3256   */\n      iszero\n        /* \"#utility.yul\":3228:3233   */\n      dup2\n        /* \"#utility.yul\":3225:3257   */\n      eq\n        /* \"#utility.yul\":3215:3275   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":3271:3272   */\n      0x00\n        /* \"#utility.yul\":3268:3269   */\n      dup1\n        /* \"#utility.yul\":3261:3273   */\n      revert\n        /* \"#utility.yul\":3998:4125   */\n    tag_82:\n        /* \"#utility.yul\":4059:4069   */\n      0x4e487b71\n        /* \"#utility.yul\":4054:4057   */\n      0xe0\n        /* \"#utility.yul\":4050:4070   */\n      shl\n        /* \"#utility.yul\":4047:4048   */\n      0x00\n        /* \"#utility.yul\":4040:4071   */\n      mstore\n        /* \"#utility.yul\":4090:4094   */\n      0x32\n        /* \"#utility.yul\":4087:4088   */\n      0x04\n        /* \"#utility.yul\":4080:4095   */\n      mstore\n        /* \"#utility.yul\":4114:4118   */\n      0x24\n        /* \"#utility.yul\":4111:4112   */\n      0x00\n        /* \"#utility.yul\":4104:4119   */\n      revert\n\n    auxdata: 0xa2646970667358221220401bd24a0cd36d782661820cb24dbfb84b5acf31f942ef63503c00df27963f0f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 110,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_IERC20_$225_fromMemory": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:528:4",
										"nodeType": "YulBlock",
										"src": "0:528:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "109:209:4",
													"nodeType": "YulBlock",
													"src": "109:209:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "155:16:4",
																"nodeType": "YulBlock",
																"src": "155:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "164:1:4",
																					"nodeType": "YulLiteral",
																					"src": "164:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "167:1:4",
																					"nodeType": "YulLiteral",
																					"src": "167:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "157:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "157:6:4"
																			},
																			"nativeSrc": "157:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "157:12:4"
																		},
																		"nativeSrc": "157:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "157:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "130:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "130:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "139:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "139:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "126:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "126:3:4"
																		},
																		"nativeSrc": "126:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "126:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "151:2:4",
																		"nodeType": "YulLiteral",
																		"src": "151:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "122:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "122:3:4"
																},
																"nativeSrc": "122:32:4",
																"nodeType": "YulFunctionCall",
																"src": "122:32:4"
															},
															"nativeSrc": "119:52:4",
															"nodeType": "YulIf",
															"src": "119:52:4"
														},
														{
															"nativeSrc": "180:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "180:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "199:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "193:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:4"
																},
																"nativeSrc": "193:16:4",
																"nodeType": "YulFunctionCall",
																"src": "193:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "184:5:4",
																	"nodeType": "YulTypedName",
																	"src": "184:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "272:16:4",
																"nodeType": "YulBlock",
																"src": "272:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "281:1:4",
																					"nodeType": "YulLiteral",
																					"src": "281:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "284:1:4",
																					"nodeType": "YulLiteral",
																					"src": "284:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "274:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "274:6:4"
																			},
																			"nativeSrc": "274:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "274:12:4"
																		},
																		"nativeSrc": "274:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "274:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "231:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "231:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "242:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "242:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "257:3:4",
																										"nodeType": "YulLiteral",
																										"src": "257:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "262:1:4",
																										"nodeType": "YulLiteral",
																										"src": "262:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "253:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "253:3:4"
																								},
																								"nativeSrc": "253:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "253:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "266:1:4",
																								"nodeType": "YulLiteral",
																								"src": "266:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "249:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "249:3:4"
																						},
																						"nativeSrc": "249:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "249:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "238:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "238:3:4"
																				},
																				"nativeSrc": "238:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "238:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "228:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "228:2:4"
																		},
																		"nativeSrc": "228:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "228:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "221:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "221:6:4"
																},
																"nativeSrc": "221:50:4",
																"nodeType": "YulFunctionCall",
																"src": "221:50:4"
															},
															"nativeSrc": "218:70:4",
															"nodeType": "YulIf",
															"src": "218:70:4"
														},
														{
															"nativeSrc": "297:15:4",
															"nodeType": "YulAssignment",
															"src": "297:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "307:5:4",
																"nodeType": "YulIdentifier",
																"src": "307:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "297:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$225_fromMemory",
												"nativeSrc": "14:304:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "75:9:4",
														"nodeType": "YulTypedName",
														"src": "75:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "86:7:4",
														"nodeType": "YulTypedName",
														"src": "86:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "98:6:4",
														"nodeType": "YulTypedName",
														"src": "98:6:4",
														"type": ""
													}
												],
												"src": "14:304:4"
											},
											{
												"body": {
													"nativeSrc": "424:102:4",
													"nodeType": "YulBlock",
													"src": "424:102:4",
													"statements": [
														{
															"nativeSrc": "434:26:4",
															"nodeType": "YulAssignment",
															"src": "434:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "446:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "446:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "457:2:4",
																		"nodeType": "YulLiteral",
																		"src": "457:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "442:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "442:3:4"
																},
																"nativeSrc": "442:18:4",
																"nodeType": "YulFunctionCall",
																"src": "442:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "434:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "434:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "476:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "476:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "491:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "491:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "507:3:4",
																								"nodeType": "YulLiteral",
																								"src": "507:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "512:1:4",
																								"nodeType": "YulLiteral",
																								"src": "512:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "503:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "503:3:4"
																						},
																						"nativeSrc": "503:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "503:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "516:1:4",
																						"nodeType": "YulLiteral",
																						"src": "516:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "499:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "499:3:4"
																				},
																				"nativeSrc": "499:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "499:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "487:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:4"
																		},
																		"nativeSrc": "487:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "487:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "469:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "469:6:4"
																},
																"nativeSrc": "469:51:4",
																"nodeType": "YulFunctionCall",
																"src": "469:51:4"
															},
															"nativeSrc": "469:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "469:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "323:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "393:9:4",
														"nodeType": "YulTypedName",
														"src": "393:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "404:6:4",
														"nodeType": "YulTypedName",
														"src": "404:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "415:4:4",
														"nodeType": "YulTypedName",
														"src": "415:4:4",
														"type": ""
													}
												],
												"src": "323:203:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$225_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b5060405161082b38038061082b83398101604081905261002e916100bd565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c8161006e565b506001600160a01b03166080526100ea565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100cd575f80fd5b81516001600160a01b03811681146100e3575f80fd5b9392505050565b60805161071b6101105f395f818161012f015281816101dc01526102ea015261071b5ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c80638da5cb5b116100585780638da5cb5b146100e0578063bb0b66f014610104578063f2fde38b14610117578063fc0c546a1461012a575f80fd5b80633e5beab9146100895780634e71d92d146100bb5780635705ae43146100c5578063715018a6146100d8575b5f80fd5b6100a86100973660046105bb565b60016020525f908152604090205481565b6040519081526020015b60405180910390f35b6100c3610151565b005b6100c36100d33660046105db565b6102bc565b6100c3610396565b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100b2565b6100c361011236600461064b565b6103a9565b6100c36101253660046105bb565b6104e8565b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b335f90815260016020526040902054806101a55760405162461bcd60e51b815260206004820152601060248201526f6e6f7468696e6720746f20636c61696d60801b60448201526064015b60405180910390fd5b335f81815260016020526040808220919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303815f875af1158015610222573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024691906106b2565b6102845760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015260640161019c565b60405181815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a250565b6102c4610525565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303815f875af1158015610330573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035491906106b2565b6103925760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015260640161019c565b5050565b61039e610525565b6103a75f610551565b565b6103b1610525565b8281146103f25760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161019c565b5f5b838110156104e15782828281811061040e5761040e6106d1565b9050602002013560015f87878581811061042a5761042a6106d1565b905060200201602081019061043f91906105bb565b6001600160a01b0316815260208101919091526040015f205584848281811061046a5761046a6106d1565b905060200201602081019061047f91906105bb565b6001600160a01b03167f0dc749e345b2caa65962a98c3fb1fc462f67ae5e14663e1dfa11bd4f53ece31e8484848181106104bb576104bb6106d1565b905060200201356040516104d191815260200190565b60405180910390a26001016103f4565b5050505050565b6104f0610525565b6001600160a01b03811661051957604051631e4fbdf760e01b81525f600482015260240161019c565b61052281610551565b50565b5f546001600160a01b031633146103a75760405163118cdaa760e01b815233600482015260240161019c565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105b6575f80fd5b919050565b5f602082840312156105cb575f80fd5b6105d4826105a0565b9392505050565b5f80604083850312156105ec575f80fd5b6105f5836105a0565b946020939093013593505050565b5f8083601f840112610613575f80fd5b50813567ffffffffffffffff81111561062a575f80fd5b6020830191508360208260051b8501011115610644575f80fd5b9250929050565b5f805f806040858703121561065e575f80fd5b843567ffffffffffffffff80821115610675575f80fd5b61068188838901610603565b90965094506020870135915080821115610699575f80fd5b506106a687828801610603565b95989497509550505050565b5f602082840312156106c2575f80fd5b815180151581146105d4575f80fd5b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220401bd24a0cd36d782661820cb24dbfb84b5acf31f942ef63503c00df27963f0f64736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x82B CODESIZE SUB DUP1 PUSH2 0x82B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xBD JUMP JUMPDEST CALLER DUP1 PUSH2 0x53 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C DUP2 PUSH2 0x6E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0xEA JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x71B PUSH2 0x110 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x12F ADD MSTORE DUP2 DUP2 PUSH2 0x1DC ADD MSTORE PUSH2 0x2EA ADD MSTORE PUSH2 0x71B PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xBB0B66F0 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x12A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x5705AE43 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x151 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x396 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB2 JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x64B JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xEC PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x1A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F7468696E6720746F20636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2C4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x330 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST PUSH2 0x3A7 PUSH0 PUSH2 0x551 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x525 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xD8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19C JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x40E JUMPI PUSH2 0x40E PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x42A JUMPI PUSH2 0x42A PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SSTORE DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x46A PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDC749E345B2CAA65962A98C3FB1FC462F67AE5E14663E1DFA11BD4F53ECE31E DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x4D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x3F4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x19C JUMP JUMPDEST PUSH2 0x522 DUP2 PUSH2 0x551 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x19C JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D4 DUP3 PUSH2 0x5A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5F5 DUP4 PUSH2 0x5A0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x613 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x644 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x65E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x675 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x681 DUP9 DUP4 DUP10 ADD PUSH2 0x603 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x699 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A6 DUP8 DUP3 DUP9 ADD PUSH2 0x603 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH SHL 0xD2 BLOBBASEFEE 0xC 0xD3 PUSH14 0x782661820CB24DBFB84B5ACF31F9 TIMESTAMP 0xEF PUSH4 0x503C00DF 0x27 SWAP7 EXTCODEHASH 0xF PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "175:1071:3:-:0;;;425:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;460:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;469:51:4;442:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;474:14:3::1;;::::0;175:1071;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:304:4:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:4;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:4:o;323:203::-;175:1071:3;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1317,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1361,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_268": {
									"entryPoint": null,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_388": {
									"entryPoint": 337,
									"id": 388,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recover_407": {
									"entryPoint": 700,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 918,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@seed_347": {
									"entryPoint": 937,
									"id": 347,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@token_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1256,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 1539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01533ac81325c721faf446ceccaf9f197991bc2ad752fe9d846afddbc44cdcdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_57eb9104ba667545ede97b4e0c21741bfc9a1ff0c7227c5bb3c787edef8af37d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4127:4",
										"nodeType": "YulBlock",
										"src": "0:4127:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:4",
													"nodeType": "YulBlock",
													"src": "63:124:4",
													"statements": [
														{
															"nativeSrc": "73:29:4",
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nativeSrc": "82:20:4",
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:4",
																"nodeType": "YulBlock",
																"src": "165:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:4",
																					"nodeType": "YulLiteral",
																					"src": "174:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:4",
																					"nodeType": "YulLiteral",
																					"src": "177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:4"
																			},
																			"nativeSrc": "167:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:4"
																		},
																		"nativeSrc": "167:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:4",
																										"nodeType": "YulLiteral",
																										"src": "150:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:4",
																										"nodeType": "YulLiteral",
																										"src": "155:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:4"
																								},
																								"nativeSrc": "146:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:4",
																								"nodeType": "YulLiteral",
																								"src": "159:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:4"
																						},
																						"nativeSrc": "142:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nativeSrc": "131:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nativeSrc": "121:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nativeSrc": "114:50:4",
																"nodeType": "YulFunctionCall",
																"src": "114:50:4"
															},
															"nativeSrc": "111:70:4",
															"nodeType": "YulIf",
															"src": "111:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:4",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:4",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:173:4"
											},
											{
												"body": {
													"nativeSrc": "262:116:4",
													"nodeType": "YulBlock",
													"src": "262:116:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:4",
																"nodeType": "YulBlock",
																"src": "308:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:4",
																					"nodeType": "YulLiteral",
																					"src": "317:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:4",
																					"nodeType": "YulLiteral",
																					"src": "320:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:4"
																			},
																			"nativeSrc": "310:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:4"
																		},
																		"nativeSrc": "310:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:4"
																		},
																		"nativeSrc": "279:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:4",
																		"nodeType": "YulLiteral",
																		"src": "304:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:4"
																},
																"nativeSrc": "275:32:4",
																"nodeType": "YulFunctionCall",
																"src": "275:32:4"
															},
															"nativeSrc": "272:52:4",
															"nodeType": "YulIf",
															"src": "272:52:4"
														},
														{
															"nativeSrc": "333:39:4",
															"nodeType": "YulAssignment",
															"src": "333:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:4"
																},
																"nativeSrc": "343:29:4",
																"nodeType": "YulFunctionCall",
																"src": "343:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:4",
														"nodeType": "YulTypedName",
														"src": "228:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:4",
														"nodeType": "YulTypedName",
														"src": "239:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:4",
														"nodeType": "YulTypedName",
														"src": "251:6:4",
														"type": ""
													}
												],
												"src": "192:186:4"
											},
											{
												"body": {
													"nativeSrc": "484:76:4",
													"nodeType": "YulBlock",
													"src": "484:76:4",
													"statements": [
														{
															"nativeSrc": "494:26:4",
															"nodeType": "YulAssignment",
															"src": "494:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:4",
																		"nodeType": "YulLiteral",
																		"src": "517:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:4"
																},
																"nativeSrc": "502:18:4",
																"nodeType": "YulFunctionCall",
																"src": "502:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "536:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "547:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "529:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:4"
																},
																"nativeSrc": "529:25:4",
																"nodeType": "YulFunctionCall",
																"src": "529:25:4"
															},
															"nativeSrc": "529:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "529:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "383:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "453:9:4",
														"nodeType": "YulTypedName",
														"src": "453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "464:6:4",
														"nodeType": "YulTypedName",
														"src": "464:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "475:4:4",
														"nodeType": "YulTypedName",
														"src": "475:4:4",
														"type": ""
													}
												],
												"src": "383:177:4"
											},
											{
												"body": {
													"nativeSrc": "652:167:4",
													"nodeType": "YulBlock",
													"src": "652:167:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "698:16:4",
																"nodeType": "YulBlock",
																"src": "698:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "707:1:4",
																					"nodeType": "YulLiteral",
																					"src": "707:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "710:1:4",
																					"nodeType": "YulLiteral",
																					"src": "710:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "700:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "700:6:4"
																			},
																			"nativeSrc": "700:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "700:12:4"
																		},
																		"nativeSrc": "700:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "700:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "673:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "673:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "682:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "682:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "669:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:4"
																		},
																		"nativeSrc": "669:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "669:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "694:2:4",
																		"nodeType": "YulLiteral",
																		"src": "694:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "665:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "665:3:4"
																},
																"nativeSrc": "665:32:4",
																"nodeType": "YulFunctionCall",
																"src": "665:32:4"
															},
															"nativeSrc": "662:52:4",
															"nodeType": "YulIf",
															"src": "662:52:4"
														},
														{
															"nativeSrc": "723:39:4",
															"nodeType": "YulAssignment",
															"src": "723:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "752:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "733:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "733:18:4"
																},
																"nativeSrc": "733:29:4",
																"nodeType": "YulFunctionCall",
																"src": "733:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "723:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "723:6:4"
																}
															]
														},
														{
															"nativeSrc": "771:42:4",
															"nodeType": "YulAssignment",
															"src": "771:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:2:4",
																				"nodeType": "YulLiteral",
																				"src": "809:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:4"
																		},
																		"nativeSrc": "794:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "794:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "781:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "781:12:4"
																},
																"nativeSrc": "781:32:4",
																"nodeType": "YulFunctionCall",
																"src": "781:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "771:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "771:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "565:254:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "610:9:4",
														"nodeType": "YulTypedName",
														"src": "610:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "621:7:4",
														"nodeType": "YulTypedName",
														"src": "621:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "633:6:4",
														"nodeType": "YulTypedName",
														"src": "633:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "641:6:4",
														"nodeType": "YulTypedName",
														"src": "641:6:4",
														"type": ""
													}
												],
												"src": "565:254:4"
											},
											{
												"body": {
													"nativeSrc": "925:102:4",
													"nodeType": "YulBlock",
													"src": "925:102:4",
													"statements": [
														{
															"nativeSrc": "935:26:4",
															"nodeType": "YulAssignment",
															"src": "935:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "947:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:2:4",
																		"nodeType": "YulLiteral",
																		"src": "958:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "943:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "943:3:4"
																},
																"nativeSrc": "943:18:4",
																"nodeType": "YulFunctionCall",
																"src": "943:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "935:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "977:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "977:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "992:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "992:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1008:3:4",
																								"nodeType": "YulLiteral",
																								"src": "1008:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1013:1:4",
																								"nodeType": "YulLiteral",
																								"src": "1013:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1004:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1004:3:4"
																						},
																						"nativeSrc": "1004:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1004:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1017:1:4",
																						"nodeType": "YulLiteral",
																						"src": "1017:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1000:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1000:3:4"
																				},
																				"nativeSrc": "1000:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1000:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "988:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "988:3:4"
																		},
																		"nativeSrc": "988:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "988:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "970:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:4"
																},
																"nativeSrc": "970:51:4",
																"nodeType": "YulFunctionCall",
																"src": "970:51:4"
															},
															"nativeSrc": "970:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "970:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "824:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "894:9:4",
														"nodeType": "YulTypedName",
														"src": "894:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "905:6:4",
														"nodeType": "YulTypedName",
														"src": "905:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "916:4:4",
														"nodeType": "YulTypedName",
														"src": "916:4:4",
														"type": ""
													}
												],
												"src": "824:203:4"
											},
											{
												"body": {
													"nativeSrc": "1116:283:4",
													"nodeType": "YulBlock",
													"src": "1116:283:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1165:16:4",
																"nodeType": "YulBlock",
																"src": "1165:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1174:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1174:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1177:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1167:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1167:6:4"
																			},
																			"nativeSrc": "1167:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1167:12:4"
																		},
																		"nativeSrc": "1167:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1167:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1144:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1144:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1152:4:4",
																						"nodeType": "YulLiteral",
																						"src": "1152:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1140:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1140:3:4"
																				},
																				"nativeSrc": "1140:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1140:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1159:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "1159:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1136:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1136:3:4"
																		},
																		"nativeSrc": "1136:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1136:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1129:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1129:6:4"
																},
																"nativeSrc": "1129:35:4",
																"nodeType": "YulFunctionCall",
																"src": "1129:35:4"
															},
															"nativeSrc": "1126:55:4",
															"nodeType": "YulIf",
															"src": "1126:55:4"
														},
														{
															"nativeSrc": "1190:30:4",
															"nodeType": "YulAssignment",
															"src": "1190:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1213:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1213:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1200:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1200:12:4"
																},
																"nativeSrc": "1200:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1200:20:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1190:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1263:16:4",
																"nodeType": "YulBlock",
																"src": "1263:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1272:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1275:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1275:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1265:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1265:6:4"
																			},
																			"nativeSrc": "1265:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1265:12:4"
																		},
																		"nativeSrc": "1265:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1265:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1235:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1235:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1243:18:4",
																		"nodeType": "YulLiteral",
																		"src": "1243:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1232:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1232:2:4"
																},
																"nativeSrc": "1232:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1232:30:4"
															},
															"nativeSrc": "1229:50:4",
															"nodeType": "YulIf",
															"src": "1229:50:4"
														},
														{
															"nativeSrc": "1288:29:4",
															"nodeType": "YulAssignment",
															"src": "1288:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1304:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1304:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1312:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1312:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1300:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:4"
																},
																"nativeSrc": "1300:17:4",
																"nodeType": "YulFunctionCall",
																"src": "1300:17:4"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1288:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "1288:8:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1377:16:4",
																"nodeType": "YulBlock",
																"src": "1377:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1386:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1386:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1389:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1389:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1379:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1379:6:4"
																			},
																			"nativeSrc": "1379:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1379:12:4"
																		},
																		"nativeSrc": "1379:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1379:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1340:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1340:6:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1352:1:4",
																								"nodeType": "YulLiteral",
																								"src": "1352:1:4",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "1355:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "1355:6:4"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1348:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1348:3:4"
																						},
																						"nativeSrc": "1348:14:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1348:14:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1336:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1336:3:4"
																				},
																				"nativeSrc": "1336:27:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1336:27:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1365:4:4",
																				"nodeType": "YulLiteral",
																				"src": "1365:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1332:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:4"
																		},
																		"nativeSrc": "1332:38:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1332:38:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1372:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1372:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:4"
																},
																"nativeSrc": "1329:47:4",
																"nodeType": "YulFunctionCall",
																"src": "1329:47:4"
															},
															"nativeSrc": "1326:67:4",
															"nodeType": "YulIf",
															"src": "1326:67:4"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nativeSrc": "1032:367:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1079:6:4",
														"nodeType": "YulTypedName",
														"src": "1079:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1087:3:4",
														"nodeType": "YulTypedName",
														"src": "1087:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1095:8:4",
														"nodeType": "YulTypedName",
														"src": "1095:8:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1105:6:4",
														"nodeType": "YulTypedName",
														"src": "1105:6:4",
														"type": ""
													}
												],
												"src": "1032:367:4"
											},
											{
												"body": {
													"nativeSrc": "1561:616:4",
													"nodeType": "YulBlock",
													"src": "1561:616:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1607:16:4",
																"nodeType": "YulBlock",
																"src": "1607:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1616:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1616:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1619:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1619:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1609:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1609:6:4"
																			},
																			"nativeSrc": "1609:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:12:4"
																		},
																		"nativeSrc": "1609:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1582:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1582:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1591:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1591:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1578:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:4"
																		},
																		"nativeSrc": "1578:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1578:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1603:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1603:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1574:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1574:3:4"
																},
																"nativeSrc": "1574:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1574:32:4"
															},
															"nativeSrc": "1571:52:4",
															"nodeType": "YulIf",
															"src": "1571:52:4"
														},
														{
															"nativeSrc": "1632:37:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1632:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1659:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1659:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1646:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1646:12:4"
																},
																"nativeSrc": "1646:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1646:23:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1636:6:4",
																	"nodeType": "YulTypedName",
																	"src": "1636:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1678:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1678:28:4",
															"value": {
																"kind": "number",
																"nativeSrc": "1688:18:4",
																"nodeType": "YulLiteral",
																"src": "1688:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1682:2:4",
																	"nodeType": "YulTypedName",
																	"src": "1682:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1733:16:4",
																"nodeType": "YulBlock",
																"src": "1733:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1742:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1742:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1745:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1745:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1735:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1735:6:4"
																			},
																			"nativeSrc": "1735:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1735:12:4"
																		},
																		"nativeSrc": "1735:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1721:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1729:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "1729:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1718:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1718:2:4"
																},
																"nativeSrc": "1718:14:4",
																"nodeType": "YulFunctionCall",
																"src": "1718:14:4"
															},
															"nativeSrc": "1715:34:4",
															"nodeType": "YulIf",
															"src": "1715:34:4"
														},
														{
															"nativeSrc": "1758:96:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1758:96:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1826:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1826:9:4"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1837:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1822:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:4"
																		},
																		"nativeSrc": "1822:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1822:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1846:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1846:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "1784:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "1784:37:4"
																},
																"nativeSrc": "1784:70:4",
																"nodeType": "YulFunctionCall",
																"src": "1784:70:4"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "1762:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1762:8:4",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "1772:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1772:8:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1863:18:4",
															"nodeType": "YulAssignment",
															"src": "1863:18:4",
															"value": {
																"name": "value0_1",
																"nativeSrc": "1873:8:4",
																"nodeType": "YulIdentifier",
																"src": "1873:8:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1863:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1863:6:4"
																}
															]
														},
														{
															"nativeSrc": "1890:18:4",
															"nodeType": "YulAssignment",
															"src": "1890:18:4",
															"value": {
																"name": "value1_1",
																"nativeSrc": "1900:8:4",
																"nodeType": "YulIdentifier",
																"src": "1900:8:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1890:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:4"
																}
															]
														},
														{
															"nativeSrc": "1917:48:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1917:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1950:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1950:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1961:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1961:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1946:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:4"
																		},
																		"nativeSrc": "1946:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1946:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1933:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1933:12:4"
																},
																"nativeSrc": "1933:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1933:32:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1921:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1921:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1994:16:4",
																"nodeType": "YulBlock",
																"src": "1994:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2003:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2003:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2006:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2006:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1996:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1996:6:4"
																			},
																			"nativeSrc": "1996:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1996:12:4"
																		},
																		"nativeSrc": "1996:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1996:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1980:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "1980:8:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1990:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "1990:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1977:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1977:2:4"
																},
																"nativeSrc": "1977:16:4",
																"nodeType": "YulFunctionCall",
																"src": "1977:16:4"
															},
															"nativeSrc": "1974:36:4",
															"nodeType": "YulIf",
															"src": "1974:36:4"
														},
														{
															"nativeSrc": "2019:98:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2019:98:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2087:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2087:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "2098:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "2098:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2083:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2083:3:4"
																		},
																		"nativeSrc": "2083:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2083:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2109:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "2109:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "2045:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "2045:37:4"
																},
																"nativeSrc": "2045:72:4",
																"nodeType": "YulFunctionCall",
																"src": "2045:72:4"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "2023:8:4",
																	"nodeType": "YulTypedName",
																	"src": "2023:8:4",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "2033:8:4",
																	"nodeType": "YulTypedName",
																	"src": "2033:8:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2126:18:4",
															"nodeType": "YulAssignment",
															"src": "2126:18:4",
															"value": {
																"name": "value2_1",
																"nativeSrc": "2136:8:4",
																"nodeType": "YulIdentifier",
																"src": "2136:8:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2126:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2126:6:4"
																}
															]
														},
														{
															"nativeSrc": "2153:18:4",
															"nodeType": "YulAssignment",
															"src": "2153:18:4",
															"value": {
																"name": "value3_1",
																"nativeSrc": "2163:8:4",
																"nodeType": "YulIdentifier",
																"src": "2163:8:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2153:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2153:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "1404:773:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1503:9:4",
														"nodeType": "YulTypedName",
														"src": "1503:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1514:7:4",
														"nodeType": "YulTypedName",
														"src": "1514:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1526:6:4",
														"nodeType": "YulTypedName",
														"src": "1526:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1534:6:4",
														"nodeType": "YulTypedName",
														"src": "1534:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1542:6:4",
														"nodeType": "YulTypedName",
														"src": "1542:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1550:6:4",
														"nodeType": "YulTypedName",
														"src": "1550:6:4",
														"type": ""
													}
												],
												"src": "1404:773:4"
											},
											{
												"body": {
													"nativeSrc": "2297:102:4",
													"nodeType": "YulBlock",
													"src": "2297:102:4",
													"statements": [
														{
															"nativeSrc": "2307:26:4",
															"nodeType": "YulAssignment",
															"src": "2307:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2319:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2319:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2330:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2330:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2315:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:4"
																},
																"nativeSrc": "2315:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2315:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2307:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2307:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2349:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2349:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2364:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2364:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2380:3:4",
																								"nodeType": "YulLiteral",
																								"src": "2380:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2385:1:4",
																								"nodeType": "YulLiteral",
																								"src": "2385:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2376:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "2376:3:4"
																						},
																						"nativeSrc": "2376:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2376:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2389:1:4",
																						"nodeType": "YulLiteral",
																						"src": "2389:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2372:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:4"
																				},
																				"nativeSrc": "2372:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2372:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2360:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:4"
																		},
																		"nativeSrc": "2360:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2360:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2342:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2342:6:4"
																},
																"nativeSrc": "2342:51:4",
																"nodeType": "YulFunctionCall",
																"src": "2342:51:4"
															},
															"nativeSrc": "2342:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "2342:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "2182:217:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2266:9:4",
														"nodeType": "YulTypedName",
														"src": "2266:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2277:6:4",
														"nodeType": "YulTypedName",
														"src": "2277:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2288:4:4",
														"nodeType": "YulTypedName",
														"src": "2288:4:4",
														"type": ""
													}
												],
												"src": "2182:217:4"
											},
											{
												"body": {
													"nativeSrc": "2578:166:4",
													"nodeType": "YulBlock",
													"src": "2578:166:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2595:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2595:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2606:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2606:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2588:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:4"
																},
																"nativeSrc": "2588:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2588:21:4"
															},
															"nativeSrc": "2588:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2588:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2629:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2629:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2640:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2640:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2625:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2625:3:4"
																		},
																		"nativeSrc": "2625:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2625:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2645:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2645:2:4",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2618:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2618:6:4"
																},
																"nativeSrc": "2618:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2618:30:4"
															},
															"nativeSrc": "2618:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2618:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2668:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2668:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2679:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2679:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2664:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2664:3:4"
																		},
																		"nativeSrc": "2664:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2664:18:4"
																	},
																	{
																		"hexValue": "6e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "2684:18:4",
																		"nodeType": "YulLiteral",
																		"src": "2684:18:4",
																		"type": "",
																		"value": "nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2657:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2657:6:4"
																},
																"nativeSrc": "2657:46:4",
																"nodeType": "YulFunctionCall",
																"src": "2657:46:4"
															},
															"nativeSrc": "2657:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "2657:46:4"
														},
														{
															"nativeSrc": "2712:26:4",
															"nodeType": "YulAssignment",
															"src": "2712:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2724:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2724:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2735:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2735:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2720:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:4"
																},
																"nativeSrc": "2720:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2720:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2712:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2712:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_57eb9104ba667545ede97b4e0c21741bfc9a1ff0c7227c5bb3c787edef8af37d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2404:340:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2555:9:4",
														"nodeType": "YulTypedName",
														"src": "2555:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2569:4:4",
														"nodeType": "YulTypedName",
														"src": "2569:4:4",
														"type": ""
													}
												],
												"src": "2404:340:4"
											},
											{
												"body": {
													"nativeSrc": "2878:145:4",
													"nodeType": "YulBlock",
													"src": "2878:145:4",
													"statements": [
														{
															"nativeSrc": "2888:26:4",
															"nodeType": "YulAssignment",
															"src": "2888:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2900:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2900:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2911:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2911:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2896:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2896:3:4"
																},
																"nativeSrc": "2896:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2896:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2888:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2888:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2930:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2930:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2945:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2945:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2961:3:4",
																								"nodeType": "YulLiteral",
																								"src": "2961:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2966:1:4",
																								"nodeType": "YulLiteral",
																								"src": "2966:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2957:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "2957:3:4"
																						},
																						"nativeSrc": "2957:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2957:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2970:1:4",
																						"nodeType": "YulLiteral",
																						"src": "2970:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2953:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2953:3:4"
																				},
																				"nativeSrc": "2953:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2953:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2941:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2941:3:4"
																		},
																		"nativeSrc": "2941:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2923:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:4"
																},
																"nativeSrc": "2923:51:4",
																"nodeType": "YulFunctionCall",
																"src": "2923:51:4"
															},
															"nativeSrc": "2923:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "2923:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2994:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3005:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3005:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:4"
																		},
																		"nativeSrc": "2990:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:18:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3010:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3010:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2983:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:4"
																},
																"nativeSrc": "2983:34:4",
																"nodeType": "YulFunctionCall",
																"src": "2983:34:4"
															},
															"nativeSrc": "2983:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "2983:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2749:274:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2839:9:4",
														"nodeType": "YulTypedName",
														"src": "2839:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2850:6:4",
														"nodeType": "YulTypedName",
														"src": "2850:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2858:6:4",
														"nodeType": "YulTypedName",
														"src": "2858:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2869:4:4",
														"nodeType": "YulTypedName",
														"src": "2869:4:4",
														"type": ""
													}
												],
												"src": "2749:274:4"
											},
											{
												"body": {
													"nativeSrc": "3106:199:4",
													"nodeType": "YulBlock",
													"src": "3106:199:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3152:16:4",
																"nodeType": "YulBlock",
																"src": "3152:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3161:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3161:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3164:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3164:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3154:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3154:6:4"
																			},
																			"nativeSrc": "3154:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3154:12:4"
																		},
																		"nativeSrc": "3154:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3154:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3127:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3127:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3136:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3136:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3123:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:4"
																		},
																		"nativeSrc": "3123:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3123:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3148:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3119:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3119:3:4"
																},
																"nativeSrc": "3119:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3119:32:4"
															},
															"nativeSrc": "3116:52:4",
															"nodeType": "YulIf",
															"src": "3116:52:4"
														},
														{
															"nativeSrc": "3177:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3177:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3196:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3196:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3190:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3190:5:4"
																},
																"nativeSrc": "3190:16:4",
																"nodeType": "YulFunctionCall",
																"src": "3190:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3181:5:4",
																	"nodeType": "YulTypedName",
																	"src": "3181:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3259:16:4",
																"nodeType": "YulBlock",
																"src": "3259:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3268:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3268:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3271:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3271:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3261:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3261:6:4"
																			},
																			"nativeSrc": "3261:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3261:12:4"
																		},
																		"nativeSrc": "3261:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3261:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3228:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3228:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3249:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "3249:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3242:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "3242:6:4"
																						},
																						"nativeSrc": "3242:13:4",
																						"nodeType": "YulFunctionCall",
																						"src": "3242:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3235:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3235:6:4"
																				},
																				"nativeSrc": "3235:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3235:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3225:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3225:2:4"
																		},
																		"nativeSrc": "3225:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3225:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3218:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3218:6:4"
																},
																"nativeSrc": "3218:40:4",
																"nodeType": "YulFunctionCall",
																"src": "3218:40:4"
															},
															"nativeSrc": "3215:60:4",
															"nodeType": "YulIf",
															"src": "3215:60:4"
														},
														{
															"nativeSrc": "3284:15:4",
															"nodeType": "YulAssignment",
															"src": "3284:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "3294:5:4",
																"nodeType": "YulIdentifier",
																"src": "3294:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3284:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3284:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3028:277:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3072:9:4",
														"nodeType": "YulTypedName",
														"src": "3072:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3083:7:4",
														"nodeType": "YulTypedName",
														"src": "3083:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3095:6:4",
														"nodeType": "YulTypedName",
														"src": "3095:6:4",
														"type": ""
													}
												],
												"src": "3028:277:4"
											},
											{
												"body": {
													"nativeSrc": "3484:165:4",
													"nodeType": "YulBlock",
													"src": "3484:165:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3501:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3501:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3512:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3512:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3494:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3494:6:4"
																},
																"nativeSrc": "3494:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3494:21:4"
															},
															"nativeSrc": "3494:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3494:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3535:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3535:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3546:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3546:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3531:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:4"
																		},
																		"nativeSrc": "3531:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3531:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3551:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3551:2:4",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3524:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3524:6:4"
																},
																"nativeSrc": "3524:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3524:30:4"
															},
															"nativeSrc": "3524:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "3524:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3574:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3574:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3585:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3585:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3570:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:4"
																		},
																		"nativeSrc": "3570:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:18:4"
																	},
																	{
																		"hexValue": "7472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "3590:17:4",
																		"nodeType": "YulLiteral",
																		"src": "3590:17:4",
																		"type": "",
																		"value": "transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3563:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:4"
																},
																"nativeSrc": "3563:45:4",
																"nodeType": "YulFunctionCall",
																"src": "3563:45:4"
															},
															"nativeSrc": "3563:45:4",
															"nodeType": "YulExpressionStatement",
															"src": "3563:45:4"
														},
														{
															"nativeSrc": "3617:26:4",
															"nodeType": "YulAssignment",
															"src": "3617:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3629:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3629:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3640:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3640:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3625:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:4"
																},
																"nativeSrc": "3625:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3625:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3617:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3617:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3310:339:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3461:9:4",
														"nodeType": "YulTypedName",
														"src": "3461:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3475:4:4",
														"nodeType": "YulTypedName",
														"src": "3475:4:4",
														"type": ""
													}
												],
												"src": "3310:339:4"
											},
											{
												"body": {
													"nativeSrc": "3828:165:4",
													"nodeType": "YulBlock",
													"src": "3828:165:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3845:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3845:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3856:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3856:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3838:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3838:6:4"
																},
																"nativeSrc": "3838:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3838:21:4"
															},
															"nativeSrc": "3838:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3838:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3879:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3879:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3890:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3890:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3875:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:4"
																		},
																		"nativeSrc": "3875:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3875:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3895:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3895:2:4",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3868:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3868:6:4"
																},
																"nativeSrc": "3868:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3868:30:4"
															},
															"nativeSrc": "3868:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "3868:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3918:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3918:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3929:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3929:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3914:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3914:3:4"
																		},
																		"nativeSrc": "3914:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3914:18:4"
																	},
																	{
																		"hexValue": "6c656e677468206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "3934:17:4",
																		"nodeType": "YulLiteral",
																		"src": "3934:17:4",
																		"type": "",
																		"value": "length mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3907:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3907:6:4"
																},
																"nativeSrc": "3907:45:4",
																"nodeType": "YulFunctionCall",
																"src": "3907:45:4"
															},
															"nativeSrc": "3907:45:4",
															"nodeType": "YulExpressionStatement",
															"src": "3907:45:4"
														},
														{
															"nativeSrc": "3961:26:4",
															"nodeType": "YulAssignment",
															"src": "3961:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3973:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3973:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3984:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3984:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3969:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3969:3:4"
																},
																"nativeSrc": "3969:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3969:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3961:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3961:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01533ac81325c721faf446ceccaf9f197991bc2ad752fe9d846afddbc44cdcdd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3654:339:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3805:9:4",
														"nodeType": "YulTypedName",
														"src": "3805:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3819:4:4",
														"nodeType": "YulTypedName",
														"src": "3819:4:4",
														"type": ""
													}
												],
												"src": "3654:339:4"
											},
											{
												"body": {
													"nativeSrc": "4030:95:4",
													"nodeType": "YulBlock",
													"src": "4030:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4047:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4047:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4054:3:4",
																				"nodeType": "YulLiteral",
																				"src": "4054:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4059:10:4",
																				"nodeType": "YulLiteral",
																				"src": "4059:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4050:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:4"
																		},
																		"nativeSrc": "4050:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4050:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4040:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4040:6:4"
																},
																"nativeSrc": "4040:31:4",
																"nodeType": "YulFunctionCall",
																"src": "4040:31:4"
															},
															"nativeSrc": "4040:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "4040:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4087:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4087:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4090:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4090:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4080:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:4"
																},
																"nativeSrc": "4080:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4080:15:4"
															},
															"nativeSrc": "4080:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "4080:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4111:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4111:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4114:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4114:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4104:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4104:6:4"
																},
																"nativeSrc": "4104:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4104:15:4"
															},
															"nativeSrc": "4104:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "4104:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3998:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3998:127:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_57eb9104ba667545ede97b4e0c21741bfc9a1ff0c7227c5bb3c787edef8af37d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"nothing to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_01533ac81325c721faf446ceccaf9f197991bc2ad752fe9d846afddbc44cdcdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"length mismatch\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"264": [
									{
										"length": 32,
										"start": 303
									},
									{
										"length": 32,
										"start": 476
									},
									{
										"length": 32,
										"start": 746
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610085575f3560e01c80638da5cb5b116100585780638da5cb5b146100e0578063bb0b66f014610104578063f2fde38b14610117578063fc0c546a1461012a575f80fd5b80633e5beab9146100895780634e71d92d146100bb5780635705ae43146100c5578063715018a6146100d8575b5f80fd5b6100a86100973660046105bb565b60016020525f908152604090205481565b6040519081526020015b60405180910390f35b6100c3610151565b005b6100c36100d33660046105db565b6102bc565b6100c3610396565b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100b2565b6100c361011236600461064b565b6103a9565b6100c36101253660046105bb565b6104e8565b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b335f90815260016020526040902054806101a55760405162461bcd60e51b815260206004820152601060248201526f6e6f7468696e6720746f20636c61696d60801b60448201526064015b60405180910390fd5b335f81815260016020526040808220919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303815f875af1158015610222573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024691906106b2565b6102845760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015260640161019c565b60405181815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a250565b6102c4610525565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303815f875af1158015610330573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035491906106b2565b6103925760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015260640161019c565b5050565b61039e610525565b6103a75f610551565b565b6103b1610525565b8281146103f25760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161019c565b5f5b838110156104e15782828281811061040e5761040e6106d1565b9050602002013560015f87878581811061042a5761042a6106d1565b905060200201602081019061043f91906105bb565b6001600160a01b0316815260208101919091526040015f205584848281811061046a5761046a6106d1565b905060200201602081019061047f91906105bb565b6001600160a01b03167f0dc749e345b2caa65962a98c3fb1fc462f67ae5e14663e1dfa11bd4f53ece31e8484848181106104bb576104bb6106d1565b905060200201356040516104d191815260200190565b60405180910390a26001016103f4565b5050505050565b6104f0610525565b6001600160a01b03811661051957604051631e4fbdf760e01b81525f600482015260240161019c565b61052281610551565b50565b5f546001600160a01b031633146103a75760405163118cdaa760e01b815233600482015260240161019c565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105b6575f80fd5b919050565b5f602082840312156105cb575f80fd5b6105d4826105a0565b9392505050565b5f80604083850312156105ec575f80fd5b6105f5836105a0565b946020939093013593505050565b5f8083601f840112610613575f80fd5b50813567ffffffffffffffff81111561062a575f80fd5b6020830191508360208260051b8501011115610644575f80fd5b9250929050565b5f805f806040858703121561065e575f80fd5b843567ffffffffffffffff80821115610675575f80fd5b61068188838901610603565b90965094506020870135915080821115610699575f80fd5b506106a687828801610603565b95989497509550505050565b5f602082840312156106c2575f80fd5b815180151581146105d4575f80fd5b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220401bd24a0cd36d782661820cb24dbfb84b5acf31f942ef63503c00df27963f0f64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xBB0B66F0 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x12A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E5BEAB9 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x5705AE43 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x151 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x396 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB2 JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x64B JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xEC PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x1A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F7468696E6720746F20636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2C4 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x330 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST PUSH2 0x3A7 PUSH0 PUSH2 0x551 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x525 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xD8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19C JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x40E JUMPI PUSH2 0x40E PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x42A JUMPI PUSH2 0x42A PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SSTORE DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x46A JUMPI PUSH2 0x46A PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDC749E345B2CAA65962A98C3FB1FC462F67AE5E14663E1DFA11BD4F53ECE31E DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0x6D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x4D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x3F4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x19C JUMP JUMPDEST PUSH2 0x522 DUP2 PUSH2 0x551 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x19C JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D4 DUP3 PUSH2 0x5A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5F5 DUP4 PUSH2 0x5A0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x613 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x644 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x65E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x675 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x681 DUP9 DUP4 DUP10 ADD PUSH2 0x603 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x699 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A6 DUP8 DUP3 DUP9 ADD PUSH2 0x603 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH SHL 0xD2 BLOBBASEFEE 0xC 0xD3 PUSH14 0x782661820CB24DBFB84B5ACF31F9 TIMESTAMP 0xEF PUSH4 0x503C00DF 0x27 SWAP7 EXTCODEHASH 0xF PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "175:1071:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:4;;;517:2;502:18;259:44:3;;;;;;;;825:273;;;:::i;:::-;;1106:137;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;988:32:4;;;970:51;;958:2;943:18;1638:85:0;824:203:4;499:318:3;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;223:29:3:-;;;;;825:273;886:10;862:11;876:21;;;:9;:21;;;;;;916:7;908:36;;;;-1:-1:-1;;;908:36:3;;2606:2:4;908:36:3;;;2588:21:4;2645:2;2625:18;;;2618:30;-1:-1:-1;;;2664:18:4;;;2657:46;2720:18;;908:36:3;;;;;;;;;965:10;979:1;955:21;;;:9;:21;;;;;;:25;;;;999:31;-1:-1:-1;;;999:31:3;;;;;2923:51:4;;;;2990:18;;;2983:34;;;-1:-1:-1;;;;;999:5:3;:14;;;;2896:18:4;;999:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;991:59;;;;-1:-1:-1;;;991:59:3;;3512:2:4;991:59:3;;;3494:21:4;3551:2;3531:18;;;3524:30;-1:-1:-1;;;3570:18:4;;;3563:45;3625:18;;991:59:3;3310:339:4;991:59:3;1066:24;;529:25:4;;;1074:10:3;;1066:24;;517:2:4;502:18;1066:24:3;;;;;;;851:247;825:273::o;1106:137::-;1531:13:0;:11;:13::i;:::-;1189:26:3::1;::::0;-1:-1:-1;;;1189:26:3;;-1:-1:-1;;;;;2941:32:4;;;1189:26:3::1;::::0;::::1;2923:51:4::0;2990:18;;;2983:34;;;1189:5:3::1;:14;::::0;::::1;::::0;2896:18:4;;1189:26:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1181:54;;;::::0;-1:-1:-1;;;1181:54:3;;3512:2:4;1181:54:3::1;::::0;::::1;3494:21:4::0;3551:2;3531:18;;;3524:30;-1:-1:-1;;;3570:18:4;;;3563:45;3625:18;;1181:54:3::1;3310:339:4::0;1181:54:3::1;1106:137:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;499:318:3:-;1531:13:0;:11;:13::i;:::-;605:30:3;;::::1;597:58;;;::::0;-1:-1:-1;;;597:58:3;;3856:2:4;597:58:3::1;::::0;::::1;3838:21:4::0;3895:2;3875:18;;;3868:30;-1:-1:-1;;;3914:18:4;;;3907:45;3969:18;;597:58:3::1;3654:339:4::0;597:58:3::1;671:9;666:144;682:16:::0;;::::1;666:144;;;742:7;;750:1;742:10;;;;;;;:::i;:::-;;;;;;;720:9;:19;730:5;;736:1;730:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;720:19:3::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;720:19:3;:32;777:5;;783:1;777:8;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;772:26:3::1;;787:7;;795:1;787:10;;;;;;;:::i;:::-;;;;;;;772:26;;;;529:25:4::0;;517:2;502:18;;383:177;772:26:3::1;;;;;;;;700:3;;666:144;;;;499:318:::0;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;970:51:4::0;943:18;;2672:31:0::1;824:203:4::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:2;1901:40:0;;;970:51:4;943:18;;1901:40:0;824:203:4;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:4:o;565:254::-;633:6;641;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;:::-;723:39;809:2;794:18;;;;781:32;;-1:-1:-1;;;565:254:4:o;1032:367::-;1095:8;1105:6;1159:3;1152:4;1144:6;1140:17;1136:27;1126:55;;1177:1;1174;1167:12;1126:55;-1:-1:-1;1200:20:4;;1243:18;1232:30;;1229:50;;;1275:1;1272;1265:12;1229:50;1312:4;1304:6;1300:17;1288:29;;1372:3;1365:4;1355:6;1352:1;1348:14;1340:6;1336:27;1332:38;1329:47;1326:67;;;1389:1;1386;1379:12;1326:67;1032:367;;;;;:::o;1404:773::-;1526:6;1534;1542;1550;1603:2;1591:9;1582:7;1578:23;1574:32;1571:52;;;1619:1;1616;1609:12;1571:52;1659:9;1646:23;1688:18;1729:2;1721:6;1718:14;1715:34;;;1745:1;1742;1735:12;1715:34;1784:70;1846:7;1837:6;1826:9;1822:22;1784:70;:::i;:::-;1873:8;;-1:-1:-1;1758:96:4;-1:-1:-1;1961:2:4;1946:18;;1933:32;;-1:-1:-1;1977:16:4;;;1974:36;;;2006:1;2003;1996:12;1974:36;;2045:72;2109:7;2098:8;2087:9;2083:24;2045:72;:::i;:::-;1404:773;;;;-1:-1:-1;2136:8:4;-1:-1:-1;;;;1404:773:4:o;3028:277::-;3095:6;3148:2;3136:9;3127:7;3123:23;3119:32;3116:52;;;3164:1;3161;3154:12;3116:52;3196:9;3190:16;3249:5;3242:13;3235:21;3228:5;3225:32;3215:60;;3271:1;3268;3261:12;3998:127;4059:10;4054:3;4050:20;4047:1;4040:31;4090:4;4087:1;4080:15;4114:4;4111:1;4104:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "363800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address)": "2506",
								"claim()": "infinite",
								"owner()": "2318",
								"recover(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"seed(address[],uint256[])": "infinite",
								"token()": "infinite",
								"transferOwnership(address)": "28373"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 425,
									"end": 491,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 491,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 425,
									"end": 491,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 425,
									"end": 491,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 425,
									"end": 491,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 425,
									"end": 491,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 425,
									"end": 491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 425,
									"end": 491,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 425,
									"end": 491,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 460,
									"end": 470,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 460,
									"end": 470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 469,
									"end": 520,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 442,
									"end": 460,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 442,
									"end": 460,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 474,
									"end": 488,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 474,
									"end": 488,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 474,
									"end": 488,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 318,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 98,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 153,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 148,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 130,
									"end": 137,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 126,
									"end": 149,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 122,
									"end": 154,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 119,
									"end": 171,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 119,
									"end": 171,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 167,
									"end": 168,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 165,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 157,
									"end": 169,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 119,
									"end": 171,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 238,
									"end": 269,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 238,
									"end": 269,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 228,
									"end": 270,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 228,
									"end": 270,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 218,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 284,
									"end": 285,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 282,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 274,
									"end": 286,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 218,
									"end": 288,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 307,
									"end": 312,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 14,
									"end": 318,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 318,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 323,
									"end": 526,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 323,
									"end": 526,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "264"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 1246,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220401bd24a0cd36d782661820cb24dbfb84b5acf31f942ef63503c00df27963f0f64736f6c63430008180033",
									".code": [
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "BB0B66F0"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "FC0C546A"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "3E5BEAB9"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "4E71D92D"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "5705AE43"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 1246,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 259,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 259,
											"end": 303,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 259,
											"end": 303,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 825,
											"end": 1098,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 825,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 825,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 825,
											"end": 1098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 825,
											"end": 1098,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 825,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 825,
											"end": 1098,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1106,
											"end": 1243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1106,
											"end": 1243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 824,
											"end": 1027,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 499,
											"end": 817,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 499,
											"end": 817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 817,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 817,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 817,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 252,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 223,
											"end": 252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 223,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 223,
											"end": 252,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 223,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 223,
											"end": 252,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 825,
											"end": 1098,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 825,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 886,
											"end": 896,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 862,
											"end": 873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 876,
											"end": 897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 876,
											"end": 897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 876,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 876,
											"end": 897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 876,
											"end": 897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 876,
											"end": 897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 876,
											"end": 897,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 876,
											"end": 897,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 916,
											"end": 923,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 908,
											"end": 944,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 944,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 908,
											"end": 944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 944,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F7468696E6720746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2664,
											"end": 2682,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2664,
											"end": 2682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2657,
											"end": 2703,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 944,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 908,
											"end": 944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 944,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 908,
											"end": 944,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 908,
											"end": 944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 979,
											"end": 980,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 976,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 955,
											"end": 964,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 955,
											"end": 976,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 976,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 955,
											"end": 976,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 976,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 955,
											"end": 976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 955,
											"end": 976,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 955,
											"end": 980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 955,
											"end": 980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 980,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1004,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 999,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 999,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3515,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3524,
											"end": 3554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3563,
											"end": 3608,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3310,
											"end": 3649,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 991,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 3,
											"value": "D8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 1098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 825,
											"end": 1098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 2973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2973,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1189,
											"end": 1215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3017,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1189,
											"end": 1203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1189,
											"end": 1203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1189,
											"end": 1215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1189,
											"end": 1215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1181,
											"end": 1235,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1235,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1235,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1181,
											"end": 1235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1235,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3515,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3524,
											"end": 3554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3563,
											"end": 3608,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1181,
											"end": 1235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3310,
											"end": 3649,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1181,
											"end": 1235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1181,
											"end": 1235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 817,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 635,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 605,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 605,
											"end": 635,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 597,
											"end": 655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 597,
											"end": 655,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 597,
											"end": 655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 655,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 597,
											"end": 655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 597,
											"end": 655,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 597,
											"end": 655,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 597,
											"end": 655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3859,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3868,
											"end": 3898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8CADCCEE8D040DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 3952,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 597,
											"end": 655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3654,
											"end": 3993,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 597,
											"end": 655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 597,
											"end": 655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 682,
											"end": 698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 682,
											"end": 698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 682,
											"end": 698,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 742,
											"end": 749,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 742,
											"end": 749,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 750,
											"end": 751,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 742,
											"end": 752,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 720,
											"end": 729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 720,
											"end": 739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 735,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 730,
											"end": 735,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 736,
											"end": 737,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 730,
											"end": 738,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 730,
											"end": 738,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 730,
											"end": 738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 720,
											"end": 739,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 720,
											"end": 739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 720,
											"end": 739,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 720,
											"end": 739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 720,
											"end": 739,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 720,
											"end": 739,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 720,
											"end": 739,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 720,
											"end": 739,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 720,
											"end": 739,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 720,
											"end": 739,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 739,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 739,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 720,
											"end": 752,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 783,
											"end": 784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 777,
											"end": 785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 777,
											"end": 785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 777,
											"end": 785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "DC749E345B2CAA65962A98C3FB1FC462F67AE5E14663E1DFA11BD4F53ECE31E"
										},
										{
											"begin": 787,
											"end": 794,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 787,
											"end": 794,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 795,
											"end": 796,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 787,
											"end": 797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 772,
											"end": 798,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 700,
											"end": 703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 700,
											"end": 703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 666,
											"end": 810,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 943,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 824,
											"end": 1027,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 943,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 943,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 824,
											"end": 1027,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 565,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 565,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 691,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 673,
											"end": 680,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 669,
											"end": 692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 665,
											"end": 697,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 662,
											"end": 714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 662,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 662,
											"end": 714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 710,
											"end": 711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 700,
											"end": 712,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 662,
											"end": 714,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 662,
											"end": 714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 733,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 752,
											"end": 761,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 733,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 733,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 733,
											"end": 762,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 733,
											"end": 762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 723,
											"end": 762,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 794,
											"end": 812,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 794,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 794,
											"end": 812,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 794,
											"end": 812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 781,
											"end": 813,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 781,
											"end": 813,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 565,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1399,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1032,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1111,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1159,
											"end": 1162,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1163,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1126,
											"end": 1181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1177,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1167,
											"end": 1179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1126,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1220,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1261,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1232,
											"end": 1262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1262,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1279,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1229,
											"end": 1279,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1279,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1229,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1317,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1317,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1365,
											"end": 1369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1353,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1348,
											"end": 1362,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1329,
											"end": 1376,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1393,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1326,
											"end": 1393,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1391,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1393,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1326,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2177,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1404,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 1605,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1589,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1601,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1617,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1621,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1646,
											"end": 1669,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1727,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1749,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1715,
											"end": 1749,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1747,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1749,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1715,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1846,
											"end": 1853,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1822,
											"end": 1844,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1784,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1784,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1881,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1758,
											"end": 1854,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1961,
											"end": 1963,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 1964,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1965,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1977,
											"end": 1993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1993,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1993,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1974,
											"end": 2010,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2007,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1996,
											"end": 2008,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2010,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1974,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2087,
											"end": 2096,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2107,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2045,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2117,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2045,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2177,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2177,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2177,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2177,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2144,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1404,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3305,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3028,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3127,
											"end": 3134,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3123,
											"end": 3146,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3166,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3116,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3255,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3256,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3233,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3257,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3215,
											"end": 3275,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3261,
											"end": 3273,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4125,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3998,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4069,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4054,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4050,
											"end": 4070,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4071,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4090,
											"end": 4094,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4087,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4080,
											"end": 4095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4118,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4119,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"SpageroSimpleAirdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address)": "3e5beab9",
							"claim()": "4e71d92d",
							"owner()": "8da5cb5b",
							"recover(address,uint256)": "5705ae43",
							"renounceOwnership()": "715018a6",
							"seed(address[],uint256[])": "bb0b66f0",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Seed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"seed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroSimpleAirdrop.sol\":\"SpageroSimpleAirdrop\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"SpageroSimpleAirdrop.sol\":{\"keccak256\":\"0x4bc05146cfa10df6accef63d0c5ff6ec0cf3a1cb253a1553e7a9bdf7e7c7c341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef5f1a65b16ff455ecd9a9a2c124cbcdd71d8b53a7f5068e462dea8617ffc62\",\"dweb:/ipfs/QmbYigsRuQUvrERqWKrukUDbYQXXFpSGAY2ZPYm4oJk6TF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "SpageroSimpleAirdrop.sol:SpageroSimpleAirdrop",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 268,
								"contract": "SpageroSimpleAirdrop.sol:SpageroSimpleAirdrop",
								"label": "allowance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "215:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "397:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "406:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "428:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "448:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:1"
									},
									"src": "391:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "628:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "637:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "660:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "685:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:1"
									},
									"src": "622:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "822:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:1"
									},
									"scope": 225,
									"src": "776:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "932:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "972:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:1"
									},
									"scope": 225,
									"src": "913:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1223:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1235:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1268:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:1"
									},
									"scope": 225,
									"src": "1205:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1568:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1583:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1623:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:1"
									},
									"scope": 225,
									"src": "1549:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2327:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2377:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:1"
									},
									"scope": 225,
									"src": "2310:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2713:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2727:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2739:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2772:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:1"
									},
									"scope": 225,
									"src": "2691:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "205:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2675:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"SpageroSimpleAirdrop.sol": {
				"ast": {
					"absolutePath": "SpageroSimpleAirdrop.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						],
						"SpageroSimpleAirdrop": [
							408
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 409,
							"sourceUnit": 226,
							"src": "61:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 409,
							"sourceUnit": 148,
							"src": "119:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "Ownable",
										"nameLocations": [
											"208:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "208:7:3"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "208:7:3"
								}
							],
							"canonicalName": "SpageroSimpleAirdrop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 408,
							"linearizedBaseContracts": [
								408,
								147,
								255
							],
							"name": "SpageroSimpleAirdrop",
							"nameLocation": "184:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 264,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "247:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 408,
									"src": "223:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 263,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 262,
											"name": "IERC20",
											"nameLocations": [
												"223:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "223:6:3"
										},
										"referencedDeclaration": 225,
										"src": "223:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e5beab9",
									"id": 268,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "294:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 408,
									"src": "259:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 267,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 265,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "267:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "259:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 266,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "278:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0dc749e345b2caa65962a98c3fb1fc462f67ae5e14663e1dfa11bd4f53ece31e",
									"id": 274,
									"name": "Seed",
									"nameLocation": "316:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "337:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "321:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "351:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "343:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:38:3"
									},
									"src": "310:49:3"
								},
								{
									"anonymous": false,
									"eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
									"id": 280,
									"name": "Claimed",
									"nameLocation": "371:7:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "395:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "379:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "409:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "401:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:38:3"
									},
									"src": "365:52:3"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "472:19:3",
										"statements": [
											{
												"expression": {
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "474:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 291,
														"name": "token_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "482:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "474:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "474:14:3"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 286,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "460:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "464:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "460:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 288,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 285,
												"name": "Ownable",
												"nameLocations": [
													"452:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "452:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "452:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "token_",
												"nameLocation": "444:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "437:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 281,
														"name": "IERC20",
														"nameLocations": [
															"437:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "437:6:3"
													},
													"referencedDeclaration": 225,
													"src": "437:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:15:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:3"
									},
									"scope": 408,
									"src": "425:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "586:231:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 307,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "605:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "611:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "605:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 309,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "621:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "629:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "621:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "605:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c656e677468206d69736d61746368",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "637:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01533ac81325c721faf446ceccaf9f197991bc2ad752fe9d846afddbc44cdcdd",
																"typeString": "literal_string \"length mismatch\""
															},
															"value": "length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01533ac81325c721faf446ceccaf9f197991bc2ad752fe9d846afddbc44cdcdd",
																"typeString": "literal_string \"length mismatch\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "597:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "597:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "597:58:3"
											},
											{
												"body": {
													"id": 344,
													"nodeType": "Block",
													"src": "705:105:3",
													"statements": [
														{
															"expression": {
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 325,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "720:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 329,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 326,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "730:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 328,
																		"indexExpression": {
																			"id": 327,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 316,
																			"src": "736:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "730:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "720:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 330,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "742:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 332,
																	"indexExpression": {
																		"id": 331,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "750:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "742:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "720:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 334,
															"nodeType": "ExpressionStatement",
															"src": "720:32:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 336,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "777:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 338,
																		"indexExpression": {
																			"id": 337,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 316,
																			"src": "783:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "777:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 339,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 301,
																			"src": "787:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 341,
																		"indexExpression": {
																			"id": 340,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 316,
																			"src": "795:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "787:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 335,
																	"name": "Seed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "772:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "772:26:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 343,
															"nodeType": "EmitStatement",
															"src": "767:31:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "682:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 319,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "686:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "692:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "686:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "682:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 345,
												"initializationExpression": {
													"assignments": [
														316
													],
													"declarations": [
														{
															"constant": false,
															"id": 316,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "679:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 345,
															"src": "671:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 315,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "671:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 317,
													"nodeType": "VariableDeclarationStatement",
													"src": "671:9:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "700:3:3",
														"subExpression": {
															"id": 322,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "700:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 324,
													"nodeType": "ExpressionStatement",
													"src": "700:3:3"
												},
												"nodeType": "ForStatement",
												"src": "666:144:3"
											}
										]
									},
									"functionSelector": "bb0b66f0",
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 303,
												"name": "onlyOwner",
												"nameLocations": [
													"576:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "576:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "576:9:3"
										}
									],
									"name": "seed",
									"nameLocation": "508:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "532:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "513:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 296,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "513:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 297,
													"nodeType": "ArrayTypeName",
													"src": "513:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "558:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "539:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "539:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 300,
													"nodeType": "ArrayTypeName",
													"src": "539:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:54:3"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:3"
									},
									"scope": 408,
									"src": "499:318:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "851:247:3",
										"statements": [
											{
												"assignments": [
													351
												],
												"declarations": [
													{
														"constant": false,
														"id": 351,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "870:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "862:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 350,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "862:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 356,
												"initialValue": {
													"baseExpression": {
														"id": 352,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "876:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 355,
													"indexExpression": {
														"expression": {
															"id": 353,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "886:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "890:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "886:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "876:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "862:35:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 358,
																"name": "amt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "916:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "922:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7468696e6720746f20636c61696d",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "925:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57eb9104ba667545ede97b4e0c21741bfc9a1ff0c7227c5bb3c787edef8af37d",
																"typeString": "literal_string \"nothing to claim\""
															},
															"value": "nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57eb9104ba667545ede97b4e0c21741bfc9a1ff0c7227c5bb3c787edef8af37d",
																"typeString": "literal_string \"nothing to claim\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "908:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "908:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "908:36:3"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 364,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "955:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 367,
														"indexExpression": {
															"expression": {
																"id": 365,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "965:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "969:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "965:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "955:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "979:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "955:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "955:25:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 374,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1014:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1018:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1014:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 376,
																	"name": "amt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "1026:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 372,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "999:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1005:8:3",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 192,
																"src": "999:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "999:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206661696c6564",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1032:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															},
															"value": "transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "991:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "991:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "991:59:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 382,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1074:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1078:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1074:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1086:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "1066:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "EmitStatement",
												"src": "1061:29:3"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "834:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:0:3"
									},
									"scope": 408,
									"src": "825:273:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "1170:73:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 400,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "1204:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 401,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "1208:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 398,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "1189:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1195:8:3",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 192,
																"src": "1189:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1189:26:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206661696c6564",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1217:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															},
															"value": "transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1181:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "1181:54:3"
											}
										]
									},
									"functionSelector": "5705ae43",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 395,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 394,
												"name": "onlyOwner",
												"nameLocations": [
													"1160:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1160:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1160:9:3"
										}
									],
									"name": "recover",
									"nameLocation": "1115:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1131:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1123:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1143:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1135:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1122:28:3"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1170:0:3"
									},
									"scope": 408,
									"src": "1106:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 409,
							"src": "175:1071:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								274,
								280
							]
						}
					],
					"src": "33:1215:3"
				},
				"id": 3
			}
		}
	}
}