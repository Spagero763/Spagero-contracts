{
	"id": "0c91932d9b6e626e50e09f790e1ff216",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"SpageroTokenVesting.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/finance/VestingWallet.sol\";\r\n\r\ncontract SpageroTokenVesting is VestingWallet {\r\n    // Release ETH or any ERC20 using release(IERC20 token)\r\n    constructor(\r\n        address beneficiaryAddress,\r\n        uint64 startTimestamp,\r\n        uint64 durationSeconds\r\n    ) VestingWallet(beneficiaryAddress, startTimestamp, durationSeconds) {}\r\n}\r\n"
			},
			"@openzeppelin/contracts/finance/VestingWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (finance/VestingWallet.sol)\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"../token/ERC20/utils/SafeERC20.sol\";\nimport {Address} from \"../utils/Address.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {Ownable} from \"../access/Ownable.sol\";\n\n/**\n * @dev A vesting wallet is an ownable contract that can receive native currency and ERC-20 tokens, and release these\n * assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n *\n * Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n * Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n * be immediately releasable.\n *\n * By setting the duration to 0, one can configure this contract to behave like an asset timelock that holds tokens for\n * a beneficiary until a specified time.\n *\n * NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n * Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n * counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n * near future.\n *\n * NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n * sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\n *\n * NOTE: Chains with support for native ERC20s may allow the vesting wallet to withdraw the underlying asset as both an\n * ERC20 and as native currency. For example, if chain C supports token A and the wallet gets deposited 100 A, then\n * at 50% of the vesting period, the beneficiary can withdraw 50 A as ERC20 and 25 A as native currency (totaling 75 A).\n * Consider disabling one of the withdrawal methods.\n */\ncontract VestingWallet is Context, Ownable {\n    event EtherReleased(uint256 amount);\n    event ERC20Released(address indexed token, uint256 amount);\n\n    uint256 private _released;\n    mapping(address token => uint256) private _erc20Released;\n    uint64 private immutable _start;\n    uint64 private immutable _duration;\n\n    /**\n     * @dev Sets the beneficiary (owner), the start timestamp and the vesting duration (in seconds) of the vesting\n     * wallet.\n     */\n    constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) payable Ownable(beneficiary) {\n        _start = startTimestamp;\n        _duration = durationSeconds;\n    }\n\n    /**\n     * @dev The contract should be able to receive Eth.\n     */\n    receive() external payable virtual {}\n\n    /**\n     * @dev Getter for the start timestamp.\n     */\n    function start() public view virtual returns (uint256) {\n        return _start;\n    }\n\n    /**\n     * @dev Getter for the vesting duration.\n     */\n    function duration() public view virtual returns (uint256) {\n        return _duration;\n    }\n\n    /**\n     * @dev Getter for the end timestamp.\n     */\n    function end() public view virtual returns (uint256) {\n        return start() + duration();\n    }\n\n    /**\n     * @dev Amount of eth already released\n     */\n    function released() public view virtual returns (uint256) {\n        return _released;\n    }\n\n    /**\n     * @dev Amount of token already released\n     */\n    function released(address token) public view virtual returns (uint256) {\n        return _erc20Released[token];\n    }\n\n    /**\n     * @dev Getter for the amount of releasable eth.\n     */\n    function releasable() public view virtual returns (uint256) {\n        return vestedAmount(uint64(block.timestamp)) - released();\n    }\n\n    /**\n     * @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n     * {IERC20} contract.\n     */\n    function releasable(address token) public view virtual returns (uint256) {\n        return vestedAmount(token, uint64(block.timestamp)) - released(token);\n    }\n\n    /**\n     * @dev Release the native token (ether) that have already vested.\n     *\n     * Emits a {EtherReleased} event.\n     */\n    function release() public virtual {\n        uint256 amount = releasable();\n        _released += amount;\n        emit EtherReleased(amount);\n        Address.sendValue(payable(owner()), amount);\n    }\n\n    /**\n     * @dev Release the tokens that have already vested.\n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release(address token) public virtual {\n        uint256 amount = releasable(token);\n        _erc20Released[token] += amount;\n        emit ERC20Released(token, amount);\n        SafeERC20.safeTransfer(IERC20(token), owner(), amount);\n    }\n\n    /**\n     * @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(address(this).balance + released(), timestamp);\n    }\n\n    /**\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp);\n    }\n\n    /**\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n     * an asset given its total historical allocation.\n     */\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {\n        if (timestamp < start()) {\n            return 0;\n        } else if (timestamp >= end()) {\n            return totalAllocation;\n        } else {\n            return (totalAllocation * (timestamp - start())) / duration();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/finance/VestingWallet.sol": {
				"VestingWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "startTimestamp",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "durationSeconds",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EtherReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "end",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "A vesting wallet is an ownable contract that can receive native currency and ERC-20 tokens, and release these assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule. Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable. By setting the duration to 0, one can configure this contract to behave like an asset timelock that holds tokens for a beneficiary until a specified time. NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens. Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the near future. NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended. NOTE: Chains with support for native ERC20s may allow the vesting wallet to withdraw the underlying asset as both an ERC20 and as native currency. For example, if chain C supports token A and the wallet gets deposited 100 A, then at 50% of the vesting period, the beneficiary can withdraw 50 A as ERC20 and 25 A as native currency (totaling 75 A). Consider disabling one of the withdrawal methods.",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the beneficiary (owner), the start timestamp and the vesting duration (in seconds) of the vesting wallet."
							},
							"duration()": {
								"details": "Getter for the vesting duration."
							},
							"end()": {
								"details": "Getter for the end timestamp."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"releasable()": {
								"details": "Getter for the amount of releasable eth."
							},
							"releasable(address)": {
								"details": "Getter for the amount of releasable `token` tokens. `token` should be the address of an {IERC20} contract."
							},
							"release()": {
								"details": "Release the native token (ether) that have already vested. Emits a {EtherReleased} event."
							},
							"release(address)": {
								"details": "Release the tokens that have already vested. Emits a {ERC20Released} event."
							},
							"released()": {
								"details": "Amount of eth already released"
							},
							"released(address)": {
								"details": "Amount of token already released"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"start()": {
								"details": "Getter for the start timestamp."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"vestedAmount(address,uint64)": {
								"details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
							},
							"vestedAmount(uint64)": {
								"details": "Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2053:6054  contract VestingWallet is Context, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2525:2711  constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) payable Ownable(beneficiary) {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2621:2632  beneficiary */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":801:852   */\n  mstore\n    /* \"#utility.yul\":774:792   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_9:\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2644:2667  _start = startTimestamp */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2677:2704  _duration = durationSeconds */\n  and\n  0xa0\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2053:6054  contract VestingWallet is Context, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:189   */\ntag_14:\n    /* \"#utility.yul\":92:105   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":134:164   */\n  dup2\n  and\n    /* \"#utility.yul\":124:165   */\n  dup2\n  eq\n    /* \"#utility.yul\":114:183   */\n  tag_17\n  jumpi\n    /* \"#utility.yul\":179:180   */\n  0x00\n    /* \"#utility.yul\":176:177   */\n  dup1\n    /* \"#utility.yul\":169:181   */\n  revert\n    /* \"#utility.yul\":114:183   */\ntag_17:\n    /* \"#utility.yul\":14:189   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":194:650   */\ntag_2:\n    /* \"#utility.yul\":280:286   */\n  0x00\n    /* \"#utility.yul\":288:294   */\n  dup1\n    /* \"#utility.yul\":296:302   */\n  0x00\n    /* \"#utility.yul\":349:351   */\n  0x60\n    /* \"#utility.yul\":337:346   */\n  dup5\n    /* \"#utility.yul\":328:335   */\n  dup7\n    /* \"#utility.yul\":324:347   */\n  sub\n    /* \"#utility.yul\":320:352   */\n  slt\n    /* \"#utility.yul\":317:369   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":365:366   */\n  0x00\n    /* \"#utility.yul\":362:363   */\n  dup1\n    /* \"#utility.yul\":355:367   */\n  revert\n    /* \"#utility.yul\":317:369   */\ntag_19:\n    /* \"#utility.yul\":391:407   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":436:467   */\n  dup2\n  and\n    /* \"#utility.yul\":426:468   */\n  dup2\n  eq\n    /* \"#utility.yul\":416:486   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":482:483   */\n  0x00\n    /* \"#utility.yul\":479:480   */\n  dup1\n    /* \"#utility.yul\":472:484   */\n  revert\n    /* \"#utility.yul\":416:486   */\ntag_20:\n    /* \"#utility.yul\":505:510   */\n  swap3\n  pop\n    /* \"#utility.yul\":529:577   */\n  tag_21\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":558:576   */\n  dup6\n  add\n    /* \"#utility.yul\":529:577   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":519:577   */\n  swap2\n  pop\n    /* \"#utility.yul\":596:644   */\n  tag_22\n    /* \"#utility.yul\":640:642   */\n  0x40\n    /* \"#utility.yul\":629:638   */\n  dup6\n    /* \"#utility.yul\":625:643   */\n  add\n    /* \"#utility.yul\":596:644   */\n  tag_14\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":586:644   */\n  swap1\n  pop\n    /* \"#utility.yul\":194:650   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":655:858   */\ntag_15:\n    /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2053:6054  contract VestingWallet is Context, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6784108628bb46ca38406981c15d3f445c08955c04dc23f14d7a923bbb24a527\")\n  0x00\n  assignImmutable(\"0x87e4a1e230d69aed738e0c9dbdd11ea7f3dbad5efaf4648a5c527fab26e0c43e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2053:6054  contract VestingWallet is Context, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x96132521\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbe9a6555\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xefbe1c1c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfbccedae\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x96132521\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa3f8eace\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x810ec23b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x86d1a69f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x0a17b06b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4997:5162  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4997:5162  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3044:3135  function duration() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3119:3128  _duration */\n      immutable(\"0x6784108628bb46ca38406981c15d3f445c08955c04dc23f14d7a923bbb24a527\")\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3112:3128  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3044:3135  function duration() public view virtual returns (uint256) {... */\n      jump(tag_23)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4611:4857  function release(address token) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_34\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5303:5505  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_23\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4289:4487  function release() public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_34\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1339:1390   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1327:1329   */\n      0x20\n        /* \"#utility.yul\":1312:1330   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3361:3452  function released() public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3436:3445  _released */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3361:3452  function released() public view virtual returns (uint256) {... */\n      jump(tag_23)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3519:3635  function released(address token) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_23\n      tag_61\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3581:3588  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3621  _erc20Released */\n      0x02\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3519:3635  function released(address token) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3992:4151  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_23\n      tag_66\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2892:2977  function start() public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_23\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3199:3296  function end() public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_23\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_34\n      tag_79\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3710:3844  function releasable() public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_23\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4997:5162  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5066:5073  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5092:5155  _vestingSchedule(address(this).balance + released(), timestamp) */\n      tag_86\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5133:5143  released() */\n      tag_87\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3436:3445  _released */\n      sload(0x01)\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3361:3452  function released() public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5133:5143  released() */\n    tag_87:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5109:5143  address(this).balance + released() */\n      tag_88\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5109:5130  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5109:5143  address(this).balance + released() */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5145:5154  timestamp */\n      dup4\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5092:5108  _vestingSchedule */\n      tag_90\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5092:5155  _vestingSchedule(address(this).balance + released(), timestamp) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5085:5155  return _vestingSchedule(address(this).balance + released(), timestamp) */\n      swap3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4997:5162  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4611:4857  function release(address token) public virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4668:4682  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4685:4702  releasable(token) */\n      tag_93\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4696:4701  token */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4685:4695  releasable */\n      tag_67\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4685:4702  releasable(token) */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4733  _erc20Released[token] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4726  _erc20Released */\n      0x02\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4733  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4743  _erc20Released[token] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4668:4702  uint256 amount = releasable(token) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4733  _erc20Released[token] */\n      swap1\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4743  _erc20Released[token] += amount */\n      tag_94\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4668:4702  uint256 amount = releasable(token) */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4743  _erc20Released[token] += amount */\n      tag_89\n      jump\t// in\n    tag_94:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4758:4786  ERC20Released(token, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4758:4786  ERC20Released(token, amount) */\n      dup4\n      and\n      swap1\n      0xc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4758:4786  ERC20Released(token, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4796:4850  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      tag_96\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4826:4831  token */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4834:4841  owner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4834:4841  owner() */\n    tag_97:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4843:4849  amount */\n      dup4\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4796:4818  SafeERC20.safeTransfer */\n      tag_98\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4796:4850  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4658:4857  {... */\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4611:4857  function release(address token) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5303:5505  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5387:5394  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3621  _erc20Released */\n      0x02\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5413:5498  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5468  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5462:5466  this */\n      address\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5468  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5453  IERC20(token).balanceOf */\n      dup7\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5468  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5486  IERC20(token).balanceOf(address(this)) + released(token) */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5413:5498  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n    tag_106:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5406:5498  return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      swap4\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5303:5505  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4289:4487  function release() public virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4333:4347  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4350:4362  releasable() */\n      tag_115\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4350:4360  releasable */\n      tag_83\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4350:4362  releasable() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4333:4362  uint256 amount = releasable() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4385:4391  amount */\n      dup1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4372:4381  _released */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4372:4391  _released += amount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_116:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4406:4427  EtherReleased(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4406:4427  EtherReleased(amount) */\n      0xda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4406:4427  EtherReleased(amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4437:4480  Address.sendValue(payable(owner()), amount) */\n      tag_118\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4463:4470  owner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4463:4470  owner() */\n    tag_119:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4473:4479  amount */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4437:4454  Address.sendValue */\n      tag_120\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4437:4480  Address.sendValue(payable(owner()), amount) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4323:4487  {... */\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4289:4487  function release() public virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3992:4151  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4056:4063  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3621  _erc20Released */\n      0x02\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4082:4126  vestedAmount(token, uint64(block.timestamp)) */\n      tag_126\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4095:4100  token */\n      dup4\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4109:4124  block.timestamp */\n      timestamp\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4082:4094  vestedAmount */\n      tag_45\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4082:4126  vestedAmount(token, uint64(block.timestamp)) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4082:4144  vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      tag_86\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2892:2977  function start() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2957:2970  return _start */\n      0xffffffffffffffff\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2964:2970  _start */\n      immutable(\"0x87e4a1e230d69aed738e0c9dbdd11ea7f3dbad5efaf4648a5c527fab26e0c43e\")\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2957:2970  return _start */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2892:2977  function start() public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3199:3296  function end() public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3243:3250  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3119:3128  _duration */\n      immutable(\"0x6784108628bb46ca38406981c15d3f445c08955c04dc23f14d7a923bbb24a527\")\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3112:3128  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3269:3276  start() */\n      tag_132\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3269:3274  start */\n      tag_71\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3269:3276  start() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3269:3289  start() + duration() */\n      tag_133\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3262:3289  return start() + duration() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3199:3296  function end() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3710:3844  function releasable() public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3761:3768  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3827:3837  released() */\n      tag_141\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3436:3445  _released */\n      sload(0x01)\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3361:3452  function released() public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3827:3837  released() */\n    tag_141:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3787:3824  vestedAmount(uint64(block.timestamp)) */\n      tag_142\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3807:3822  block.timestamp */\n      timestamp\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3787:3799  vestedAmount */\n      tag_26\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3787:3824  vestedAmount(uint64(block.timestamp)) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3787:3837  vestedAmount(uint64(block.timestamp)) - released() */\n      tag_133\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5700:6052  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5800:5807  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5835:5842  start() */\n      tag_145\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5835:5840  start */\n      tag_71\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5835:5842  start() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5823:5832  timestamp */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5823:5842  timestamp < start() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5819:6046  if (timestamp < start()) {... */\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5865:5866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5858:5866  return 0 */\n      jump(tag_86)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5819:6046  if (timestamp < start()) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5900:5905  end() */\n      tag_148\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5900:5903  end */\n      tag_75\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5900:5905  end() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5887:5896  timestamp */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5887:5905  timestamp >= end() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5883:6046  if (timestamp >= end()) {... */\n      tag_149\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5928:5943  totalAllocation */\n      dup2\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5921:5943  return totalAllocation */\n      jump(tag_86)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5883:6046  if (timestamp >= end()) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3119:3128  _duration */\n      immutable(\"0x6784108628bb46ca38406981c15d3f445c08955c04dc23f14d7a923bbb24a527\")\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3112:3128  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":6013:6020  start() */\n      tag_152\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":6013:6018  start */\n      tag_71\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":6013:6020  start() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":6001:6020  timestamp - start() */\n      tag_153\n      swap1\n      0xffffffffffffffff\n      dup6\n      and\n      tag_128\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5982:6021  totalAllocation * (timestamp - start()) */\n      tag_154\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5982:5997  totalAllocation */\n      dup6\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5982:6021  totalAllocation * (timestamp - start()) */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5981:6035  (totalAllocation * (timestamp - start())) / duration() */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5974:6035  return (totalAllocation * (timestamp - start())) / duration() */\n      swap1\n      pop\n      jump(tag_86)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2572:2604   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2554:2605   */\n      mstore\n        /* \"#utility.yul\":2621:2639   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2614:2648   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2527:2545   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_159\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_138\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1399:1405  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1396  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1405  address(this).balance < amount */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      mload(0x40)\n      shl(0xe0, 0xcf479181)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1455:1476  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2833:2858   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2867:2901   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2806:2824   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      tag_138\n        /* \"#utility.yul\":2659:2907   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1507:1519  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1521:1544  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1557  recipient */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1562  recipient.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1570:1576  amount */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1581  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_179\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_178)\n    tag_179:\n      0x60\n      swap2\n      pop\n    tag_178:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1506:1581  (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1596:1603  success */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1591:1649  if (!success) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      tag_181\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1627:1637  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1626  _revert */\n      tag_182\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1361:1655  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_184:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_186)\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1357:1389   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_138\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:5993  function _revert(bytes memory returndata) private pure {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:5987  if (returndata.length > 0) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5904  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5888:5905  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5885  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5869:5879  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5886  add(returndata, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5858:5906  revert(add(returndata, 0x20), mload(returndata)) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:5987  if (returndata.length > 0) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5957:5976  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:185   */\n    tag_193:\n        /* \"#utility.yul\":81:101   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":141:159   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":130:160   */\n      dup2\n      and\n        /* \"#utility.yul\":120:161   */\n      dup2\n      eq\n        /* \"#utility.yul\":110:179   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":175:176   */\n      0x00\n        /* \"#utility.yul\":172:173   */\n      dup1\n        /* \"#utility.yul\":165:177   */\n      revert\n        /* \"#utility.yul\":110:179   */\n    tag_198:\n        /* \"#utility.yul\":14:185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":190:374   */\n    tag_25:\n        /* \"#utility.yul\":248:254   */\n      0x00\n        /* \"#utility.yul\":301:303   */\n      0x20\n        /* \"#utility.yul\":289:298   */\n      dup3\n        /* \"#utility.yul\":280:287   */\n      dup5\n        /* \"#utility.yul\":276:299   */\n      sub\n        /* \"#utility.yul\":272:304   */\n      slt\n        /* \"#utility.yul\":269:321   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":269:321   */\n    tag_200:\n        /* \"#utility.yul\":340:368   */\n      tag_106\n        /* \"#utility.yul\":358:367   */\n      dup3\n        /* \"#utility.yul\":340:368   */\n      tag_193\n      jump\t// in\n        /* \"#utility.yul\":561:734   */\n    tag_194:\n        /* \"#utility.yul\":629:649   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:709   */\n      dup2\n      and\n        /* \"#utility.yul\":668:710   */\n      dup2\n      eq\n        /* \"#utility.yul\":658:728   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":721:722   */\n      dup1\n        /* \"#utility.yul\":714:726   */\n      revert\n        /* \"#utility.yul\":739:925   */\n    tag_36:\n        /* \"#utility.yul\":798:804   */\n      0x00\n        /* \"#utility.yul\":851:853   */\n      0x20\n        /* \"#utility.yul\":839:848   */\n      dup3\n        /* \"#utility.yul\":830:837   */\n      dup5\n        /* \"#utility.yul\":826:849   */\n      sub\n        /* \"#utility.yul\":822:854   */\n      slt\n        /* \"#utility.yul\":819:871   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":867:868   */\n      0x00\n        /* \"#utility.yul\":864:865   */\n      dup1\n        /* \"#utility.yul\":857:869   */\n      revert\n        /* \"#utility.yul\":819:871   */\n    tag_206:\n        /* \"#utility.yul\":890:919   */\n      tag_106\n        /* \"#utility.yul\":909:918   */\n      dup3\n        /* \"#utility.yul\":890:919   */\n      tag_194\n      jump\t// in\n        /* \"#utility.yul\":930:1188   */\n    tag_44:\n        /* \"#utility.yul\":997:1003   */\n      0x00\n        /* \"#utility.yul\":1005:1011   */\n      dup1\n        /* \"#utility.yul\":1058:1060   */\n      0x40\n        /* \"#utility.yul\":1046:1055   */\n      dup4\n        /* \"#utility.yul\":1037:1044   */\n      dup6\n        /* \"#utility.yul\":1033:1056   */\n      sub\n        /* \"#utility.yul\":1029:1061   */\n      slt\n        /* \"#utility.yul\":1026:1078   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1074:1075   */\n      0x00\n        /* \"#utility.yul\":1071:1072   */\n      dup1\n        /* \"#utility.yul\":1064:1076   */\n      revert\n        /* \"#utility.yul\":1026:1078   */\n    tag_209:\n        /* \"#utility.yul\":1097:1126   */\n      tag_210\n        /* \"#utility.yul\":1116:1125   */\n      dup4\n        /* \"#utility.yul\":1097:1126   */\n      tag_194\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1087:1126   */\n      swap2\n      pop\n        /* \"#utility.yul\":1145:1182   */\n      tag_211\n        /* \"#utility.yul\":1178:1180   */\n      0x20\n        /* \"#utility.yul\":1167:1176   */\n      dup5\n        /* \"#utility.yul\":1163:1181   */\n      add\n        /* \"#utility.yul\":1145:1182   */\n      tag_193\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1135:1182   */\n      swap1\n      pop\n        /* \"#utility.yul\":930:1188   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1401:1528   */\n    tag_195:\n        /* \"#utility.yul\":1462:1472   */\n      0x4e487b71\n        /* \"#utility.yul\":1457:1460   */\n      0xe0\n        /* \"#utility.yul\":1453:1473   */\n      shl\n        /* \"#utility.yul\":1450:1451   */\n      0x00\n        /* \"#utility.yul\":1443:1474   */\n      mstore\n        /* \"#utility.yul\":1493:1497   */\n      0x11\n        /* \"#utility.yul\":1490:1491   */\n      0x04\n        /* \"#utility.yul\":1483:1498   */\n      mstore\n        /* \"#utility.yul\":1517:1521   */\n      0x24\n        /* \"#utility.yul\":1514:1515   */\n      0x00\n        /* \"#utility.yul\":1507:1522   */\n      revert\n        /* \"#utility.yul\":1533:1658   */\n    tag_89:\n        /* \"#utility.yul\":1598:1607   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1619:1629   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1616:1652   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1632:1650   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1663:1847   */\n    tag_112:\n        /* \"#utility.yul\":1733:1739   */\n      0x00\n        /* \"#utility.yul\":1786:1788   */\n      0x20\n        /* \"#utility.yul\":1774:1783   */\n      dup3\n        /* \"#utility.yul\":1765:1772   */\n      dup5\n        /* \"#utility.yul\":1761:1784   */\n      sub\n        /* \"#utility.yul\":1757:1789   */\n      slt\n        /* \"#utility.yul\":1754:1806   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":1802:1803   */\n      0x00\n        /* \"#utility.yul\":1799:1800   */\n      dup1\n        /* \"#utility.yul\":1792:1804   */\n      revert\n        /* \"#utility.yul\":1754:1806   */\n    tag_218:\n      pop\n        /* \"#utility.yul\":1825:1841   */\n      mload\n      swap2\n        /* \"#utility.yul\":1663:1847   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:1980   */\n    tag_128:\n        /* \"#utility.yul\":1919:1928   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1940:1951   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1937:1974   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1954:1972   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1985:2153   */\n    tag_155:\n        /* \"#utility.yul\":2058:2067   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2089:2098   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2106:2121   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2100:2122   */\n      dup5\n      eq\n        /* \"#utility.yul\":2086:2123   */\n      or\n        /* \"#utility.yul\":2076:2147   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2127:2145   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":2158:2375   */\n    tag_157:\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2224:2225   */\n      dup3\n        /* \"#utility.yul\":2214:2346   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2268:2278   */\n      0x4e487b71\n        /* \"#utility.yul\":2263:2266   */\n      0xe0\n        /* \"#utility.yul\":2259:2279   */\n      shl\n        /* \"#utility.yul\":2256:2257   */\n      0x00\n        /* \"#utility.yul\":2249:2280   */\n      mstore\n        /* \"#utility.yul\":2303:2307   */\n      0x12\n        /* \"#utility.yul\":2300:2301   */\n      0x04\n        /* \"#utility.yul\":2293:2308   */\n      mstore\n        /* \"#utility.yul\":2331:2335   */\n      0x24\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2321:2336   */\n      revert\n        /* \"#utility.yul\":2214:2346   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":2360:2369   */\n      div\n      swap1\n        /* \"#utility.yul\":2158:2375   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e79cdbcaaf07311bf07311bdb60ae12279d1f729073fee96109569419fcbc00a64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 114,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint64_fromMemory": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:860:12",
										"nodeType": "YulBlock",
										"src": "0:860:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "73:116:12",
													"nodeType": "YulBlock",
													"src": "73:116:12",
													"statements": [
														{
															"nativeSrc": "83:22:12",
															"nodeType": "YulAssignment",
															"src": "83:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "98:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "98:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "92:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:12"
																},
																"nativeSrc": "92:13:12",
																"nodeType": "YulFunctionCall",
																"src": "92:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "83:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "83:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "167:16:12",
																"nodeType": "YulBlock",
																"src": "167:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "176:1:12",
																					"nodeType": "YulLiteral",
																					"src": "176:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "179:1:12",
																					"nodeType": "YulLiteral",
																					"src": "179:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "169:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:12"
																			},
																			"nativeSrc": "169:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:12"
																		},
																		"nativeSrc": "169:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "127:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "127:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "138:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "138:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "153:2:12",
																										"nodeType": "YulLiteral",
																										"src": "153:2:12",
																										"type": "",
																										"value": "64"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "157:1:12",
																										"nodeType": "YulLiteral",
																										"src": "157:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "149:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "149:3:12"
																								},
																								"nativeSrc": "149:10:12",
																								"nodeType": "YulFunctionCall",
																								"src": "149:10:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "161:1:12",
																								"nodeType": "YulLiteral",
																								"src": "161:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "145:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "145:3:12"
																						},
																						"nativeSrc": "145:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "145:18:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "134:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "134:3:12"
																				},
																				"nativeSrc": "134:30:12",
																				"nodeType": "YulFunctionCall",
																				"src": "134:30:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "124:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "124:2:12"
																		},
																		"nativeSrc": "124:41:12",
																		"nodeType": "YulFunctionCall",
																		"src": "124:41:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "117:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "117:6:12"
																},
																"nativeSrc": "117:49:12",
																"nodeType": "YulFunctionCall",
																"src": "117:49:12"
															},
															"nativeSrc": "114:69:12",
															"nodeType": "YulIf",
															"src": "114:69:12"
														}
													]
												},
												"name": "abi_decode_uint64_fromMemory",
												"nativeSrc": "14:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "52:6:12",
														"nodeType": "YulTypedName",
														"src": "52:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "63:5:12",
														"nodeType": "YulTypedName",
														"src": "63:5:12",
														"type": ""
													}
												],
												"src": "14:175:12"
											},
											{
												"body": {
													"nativeSrc": "307:343:12",
													"nodeType": "YulBlock",
													"src": "307:343:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "353:16:12",
																"nodeType": "YulBlock",
																"src": "353:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "362:1:12",
																					"nodeType": "YulLiteral",
																					"src": "362:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "365:1:12",
																					"nodeType": "YulLiteral",
																					"src": "365:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "355:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "355:6:12"
																			},
																			"nativeSrc": "355:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "355:12:12"
																		},
																		"nativeSrc": "355:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "355:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "328:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "328:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "337:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "337:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "324:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "324:3:12"
																		},
																		"nativeSrc": "324:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "324:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "349:2:12",
																		"nodeType": "YulLiteral",
																		"src": "349:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "320:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "320:3:12"
																},
																"nativeSrc": "320:32:12",
																"nodeType": "YulFunctionCall",
																"src": "320:32:12"
															},
															"nativeSrc": "317:52:12",
															"nodeType": "YulIf",
															"src": "317:52:12"
														},
														{
															"nativeSrc": "378:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "378:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "397:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "397:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "391:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "391:5:12"
																},
																"nativeSrc": "391:16:12",
																"nodeType": "YulFunctionCall",
																"src": "391:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "382:5:12",
																	"nodeType": "YulTypedName",
																	"src": "382:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "470:16:12",
																"nodeType": "YulBlock",
																"src": "470:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "479:1:12",
																					"nodeType": "YulLiteral",
																					"src": "479:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "482:1:12",
																					"nodeType": "YulLiteral",
																					"src": "482:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "472:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "472:6:12"
																			},
																			"nativeSrc": "472:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "472:12:12"
																		},
																		"nativeSrc": "472:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "472:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "429:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "429:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "440:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "440:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "455:3:12",
																										"nodeType": "YulLiteral",
																										"src": "455:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "460:1:12",
																										"nodeType": "YulLiteral",
																										"src": "460:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "451:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "451:3:12"
																								},
																								"nativeSrc": "451:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "451:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "464:1:12",
																								"nodeType": "YulLiteral",
																								"src": "464:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "447:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "447:3:12"
																						},
																						"nativeSrc": "447:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "447:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "436:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "436:3:12"
																				},
																				"nativeSrc": "436:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "436:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "426:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "426:2:12"
																		},
																		"nativeSrc": "426:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "426:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "419:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:12"
																},
																"nativeSrc": "419:50:12",
																"nodeType": "YulFunctionCall",
																"src": "419:50:12"
															},
															"nativeSrc": "416:70:12",
															"nodeType": "YulIf",
															"src": "416:70:12"
														},
														{
															"nativeSrc": "495:15:12",
															"nodeType": "YulAssignment",
															"src": "495:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "505:5:12",
																"nodeType": "YulIdentifier",
																"src": "505:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "495:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:12"
																}
															]
														},
														{
															"nativeSrc": "519:58:12",
															"nodeType": "YulAssignment",
															"src": "519:58:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "573:2:12",
																				"nodeType": "YulLiteral",
																				"src": "573:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:12"
																		},
																		"nativeSrc": "558:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "558:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nativeSrc": "529:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "529:28:12"
																},
																"nativeSrc": "529:48:12",
																"nodeType": "YulFunctionCall",
																"src": "529:48:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "519:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:12"
																}
															]
														},
														{
															"nativeSrc": "586:58:12",
															"nodeType": "YulAssignment",
															"src": "586:58:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "629:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "629:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "640:2:12",
																				"nodeType": "YulLiteral",
																				"src": "640:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "625:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "625:3:12"
																		},
																		"nativeSrc": "625:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "625:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nativeSrc": "596:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "596:28:12"
																},
																"nativeSrc": "596:48:12",
																"nodeType": "YulFunctionCall",
																"src": "596:48:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "586:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory",
												"nativeSrc": "194:456:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "257:9:12",
														"nodeType": "YulTypedName",
														"src": "257:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "268:7:12",
														"nodeType": "YulTypedName",
														"src": "268:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "280:6:12",
														"nodeType": "YulTypedName",
														"src": "280:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "288:6:12",
														"nodeType": "YulTypedName",
														"src": "288:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "296:6:12",
														"nodeType": "YulTypedName",
														"src": "296:6:12",
														"type": ""
													}
												],
												"src": "194:456:12"
											},
											{
												"body": {
													"nativeSrc": "756:102:12",
													"nodeType": "YulBlock",
													"src": "756:102:12",
													"statements": [
														{
															"nativeSrc": "766:26:12",
															"nodeType": "YulAssignment",
															"src": "766:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "778:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "778:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "789:2:12",
																		"nodeType": "YulLiteral",
																		"src": "789:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "774:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "774:3:12"
																},
																"nativeSrc": "774:18:12",
																"nodeType": "YulFunctionCall",
																"src": "774:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "766:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "766:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "808:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "808:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "823:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "839:3:12",
																								"nodeType": "YulLiteral",
																								"src": "839:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "844:1:12",
																								"nodeType": "YulLiteral",
																								"src": "844:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "835:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "835:3:12"
																						},
																						"nativeSrc": "835:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "835:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "848:1:12",
																						"nodeType": "YulLiteral",
																						"src": "848:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "831:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "831:3:12"
																				},
																				"nativeSrc": "831:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "831:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "819:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:12"
																		},
																		"nativeSrc": "819:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "819:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "801:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "801:6:12"
																},
																"nativeSrc": "801:51:12",
																"nodeType": "YulFunctionCall",
																"src": "801:51:12"
															},
															"nativeSrc": "801:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "801:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "655:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "725:9:12",
														"nodeType": "YulTypedName",
														"src": "725:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "736:6:12",
														"nodeType": "YulTypedName",
														"src": "736:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "747:4:12",
														"nodeType": "YulTypedName",
														"src": "747:4:12",
														"type": ""
													}
												],
												"src": "655:203:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_uint64_fromMemory(add(headStart, 32))\n        value2 := abi_decode_uint64_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c0604052604051610ab4380380610ab4833981016040819052610022916100dc565b826001600160a01b03811661005057604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005981610072565b506001600160401b039182166080521660a05250610129565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160401b03811681146100d7575f80fd5b919050565b5f805f606084860312156100ee575f80fd5b83516001600160a01b0381168114610104575f80fd5b9250610112602085016100c1565b9150610120604085016100c1565b90509250925092565b60805160a05161095c6101585f395f8181610127015281816104d401526105b201525f6104ae015261095c5ff3fe6080604052600436106100dc575f3560e01c8063961325211161007c578063be9a655511610057578063be9a65551461024a578063efbe1c1c1461025e578063f2fde38b14610272578063fbccedae14610291575f80fd5b806396132521146101e35780639852595c146101f7578063a3f8eace1461022b575f80fd5b8063715018a6116100b7578063715018a614610176578063810ec23b1461018a57806386d1a69f146101a95780638da5cb5b146101bd575f80fd5b80630a17b06b146100e75780630fb5a6b4146101195780631916558714610155575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b50610106610101366004610826565b6102a5565b6040519081526020015b60405180910390f35b348015610124575f80fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610106565b348015610160575f80fd5b5061017461016f366004610855565b6102c8565b005b348015610181575f80fd5b50610174610360565b348015610195575f80fd5b506101066101a436600461086e565b610373565b3480156101b4575f80fd5b50610174610406565b3480156101c8575f80fd5b505f546040516001600160a01b039091168152602001610110565b3480156101ee575f80fd5b50600154610106565b348015610202575f80fd5b50610106610211366004610855565b6001600160a01b03165f9081526002602052604090205490565b348015610236575f80fd5b50610106610245366004610855565b610477565b348015610255575f80fd5b506101066104a3565b348015610269575f80fd5b506101066104d1565b34801561027d575f80fd5b5061017461028c366004610855565b610514565b34801561029c575f80fd5b50610106610553565b5f6102c26102b260015490565b6102bc90476108b3565b83610570565b92915050565b5f6102d282610477565b6001600160a01b0383165f908152600260205260408120805492935083929091906102fe9084906108b3565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a261035c826103565f546001600160a01b031690565b83610612565b5050565b610368610669565b6103715f610695565b565b6001600160a01b0382165f908152600260205260408120546103ff906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103d1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f591906108c6565b6102bc91906108b3565b9392505050565b5f61040f610553565b90508060015f82825461042291906108b3565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161047461046e5f546001600160a01b031690565b826106e4565b50565b6001600160a01b0381165f908152600260205260408120546104998342610373565b6102c291906108dd565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b5f7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105056104a3565b61050f91906108b3565b905090565b61051c610669565b6001600160a01b03811661054a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61047481610695565b5f61055d60015490565b610566426102a5565b61050f91906108dd565b5f6105796104a3565b8267ffffffffffffffff16101561059157505f6102c2565b6105996104d1565b8267ffffffffffffffff16106105b05750816102c2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105e36104a3565b6105f79067ffffffffffffffff85166108dd565b61060190856108f0565b61060b9190610907565b90506102c2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610664908490610776565b505050565b5f546001600160a01b031633146103715760405163118cdaa760e01b8152336004820152602401610541565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8047101561070e5760405163cf47918160e01b815247600482015260248101829052604401610541565b5f80836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610758576040519150601f19603f3d011682016040523d82523d5f602084013e61075d565b606091505b50915091508161077057610770816107e2565b50505050565b5f8060205f8451602086015f885af180610795576040513d5f823e3d81fd5b50505f513d915081156107ac5780600114156107b9565b6001600160a01b0384163b155b1561077057604051635274afe760e01b81526001600160a01b0385166004820152602401610541565b8051156107f157805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b803567ffffffffffffffff81168114610821575f80fd5b919050565b5f60208284031215610836575f80fd5b6103ff8261080a565b80356001600160a01b0381168114610821575f80fd5b5f60208284031215610865575f80fd5b6103ff8261083f565b5f806040838503121561087f575f80fd5b6108888361083f565b91506108966020840161080a565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102c2576102c261089f565b5f602082840312156108d6575f80fd5b5051919050565b818103818111156102c2576102c261089f565b80820281158282048414176102c2576102c261089f565b5f8261092157634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220e79cdbcaaf07311bf07311bdb60ae12279d1f729073fee96109569419fcbc00a64736f6c63430008180033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xAB4 CODESIZE SUB DUP1 PUSH2 0xAB4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59 DUP2 PUSH2 0x72 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE POP PUSH2 0x129 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x104 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x112 PUSH1 0x20 DUP6 ADD PUSH2 0xC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x120 PUSH1 0x40 DUP6 ADD PUSH2 0xC1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x95C PUSH2 0x158 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x127 ADD MSTORE DUP2 DUP2 PUSH2 0x4D4 ADD MSTORE PUSH2 0x5B2 ADD MSTORE PUSH0 PUSH2 0x4AE ADD MSTORE PUSH2 0x95C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xE3 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x360 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x553 JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x2B2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BC SWAP1 SELFBALANCE PUSH2 0x8B3 JUMP JUMPDEST DUP4 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2 DUP3 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x35C DUP3 PUSH2 0x356 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x612 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x371 PUSH0 PUSH2 0x695 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x40F PUSH2 0x553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x474 PUSH2 0x46E PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x499 DUP4 TIMESTAMP PUSH2 0x373 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x505 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x695 JUMP JUMPDEST PUSH0 PUSH2 0x55D PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x566 TIMESTAMP PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH2 0x579 PUSH2 0x4A3 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x591 JUMPI POP PUSH0 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x599 PUSH2 0x4D1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x5B0 JUMPI POP DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5E3 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5F7 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x664 SWAP1 DUP5 SWAP1 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7AC JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x7F1 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x80A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP4 PUSH2 0x83F JUMP JUMPDEST SWAP2 POP PUSH2 0x896 PUSH1 0x20 DUP5 ADD PUSH2 0x80A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x921 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 SWAP13 0xDB 0xCA 0xAF SMOD BALANCE SHL CREATE PUSH20 0x11BDB60AE12279D1F729073FEE96109569419FCB 0xC0 EXP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "2053:4001:1:-:0;;;2525:186;;;;;;;;;;;;;;;;;;:::i;:::-;2621:11;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;801:51:12;774:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;2644:23:1;;::::1;;::::0;2677:27:::1;;::::0;-1:-1:-1;2053:4001:1;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:175:12:-;92:13;;-1:-1:-1;;;;;134:30:12;;124:41;;114:69;;179:1;176;169:12;114:69;14:175;;;:::o;194:456::-;280:6;288;296;349:2;337:9;328:7;324:23;320:32;317:52;;;365:1;362;355:12;317:52;391:16;;-1:-1:-1;;;;;436:31:12;;426:42;;416:70;;482:1;479;472:12;416:70;505:5;-1:-1:-1;529:48:12;573:2;558:18;;529:48;:::i;:::-;519:58;;596:48;640:2;629:9;625:18;596:48;:::i;:::-;586:58;;194:456;;;;;:::o;655:203::-;2053:4001:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1048": {
									"entryPoint": 1910,
									"id": 1048,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1641,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1362": {
									"entryPoint": null,
									"id": 1362,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1349": {
									"entryPoint": 2018,
									"id": 1349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1685,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_vestingSchedule_457": {
									"entryPoint": 1392,
									"id": 457,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@duration_229": {
									"entryPoint": null,
									"id": 229,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@end_242": {
									"entryPoint": 1233,
									"id": 242,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_282": {
									"entryPoint": 1363,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_304": {
									"entryPoint": 1143,
									"id": 304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@release_333": {
									"entryPoint": 1030,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@release_368": {
									"entryPoint": 712,
									"id": 368,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@released_251": {
									"entryPoint": null,
									"id": 251,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@released_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 864,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_671": {
									"entryPoint": 1554,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendValue_1148": {
									"entryPoint": 1764,
									"id": 1148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@start_220": {
									"entryPoint": 1187,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1300,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vestedAmount_389": {
									"entryPoint": 677,
									"id": 389,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vestedAmount_417": {
									"entryPoint": 883,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint64": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3119:12",
										"nodeType": "YulBlock",
										"src": "0:3119:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "62:123:12",
													"nodeType": "YulBlock",
													"src": "62:123:12",
													"statements": [
														{
															"nativeSrc": "72:29:12",
															"nodeType": "YulAssignment",
															"src": "72:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "94:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "94:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "81:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "81:12:12"
																},
																"nativeSrc": "81:20:12",
																"nodeType": "YulFunctionCall",
																"src": "81:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "72:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "72:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "163:16:12",
																"nodeType": "YulBlock",
																"src": "163:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "172:1:12",
																					"nodeType": "YulLiteral",
																					"src": "172:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "175:1:12",
																					"nodeType": "YulLiteral",
																					"src": "175:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "165:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "165:6:12"
																			},
																			"nativeSrc": "165:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "165:12:12"
																		},
																		"nativeSrc": "165:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "165:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "123:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "123:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "134:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "134:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "141:18:12",
																						"nodeType": "YulLiteral",
																						"src": "141:18:12",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "130:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "130:3:12"
																				},
																				"nativeSrc": "130:30:12",
																				"nodeType": "YulFunctionCall",
																				"src": "130:30:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "120:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "120:2:12"
																		},
																		"nativeSrc": "120:41:12",
																		"nodeType": "YulFunctionCall",
																		"src": "120:41:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "113:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:12"
																},
																"nativeSrc": "113:49:12",
																"nodeType": "YulFunctionCall",
																"src": "113:49:12"
															},
															"nativeSrc": "110:69:12",
															"nodeType": "YulIf",
															"src": "110:69:12"
														}
													]
												},
												"name": "abi_decode_uint64",
												"nativeSrc": "14:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "41:6:12",
														"nodeType": "YulTypedName",
														"src": "41:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "52:5:12",
														"nodeType": "YulTypedName",
														"src": "52:5:12",
														"type": ""
													}
												],
												"src": "14:171:12"
											},
											{
												"body": {
													"nativeSrc": "259:115:12",
													"nodeType": "YulBlock",
													"src": "259:115:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "305:16:12",
																"nodeType": "YulBlock",
																"src": "305:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "314:1:12",
																					"nodeType": "YulLiteral",
																					"src": "314:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:12",
																					"nodeType": "YulLiteral",
																					"src": "317:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "307:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:12"
																			},
																			"nativeSrc": "307:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:12"
																		},
																		"nativeSrc": "307:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "280:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "280:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "289:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "289:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "276:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:12"
																		},
																		"nativeSrc": "276:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "276:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "301:2:12",
																		"nodeType": "YulLiteral",
																		"src": "301:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "272:3:12"
																},
																"nativeSrc": "272:32:12",
																"nodeType": "YulFunctionCall",
																"src": "272:32:12"
															},
															"nativeSrc": "269:52:12",
															"nodeType": "YulIf",
															"src": "269:52:12"
														},
														{
															"nativeSrc": "330:38:12",
															"nodeType": "YulAssignment",
															"src": "330:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "358:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "358:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "340:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "340:17:12"
																},
																"nativeSrc": "340:28:12",
																"nodeType": "YulFunctionCall",
																"src": "340:28:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "330:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64",
												"nativeSrc": "190:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "225:9:12",
														"nodeType": "YulTypedName",
														"src": "225:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "236:7:12",
														"nodeType": "YulTypedName",
														"src": "236:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "248:6:12",
														"nodeType": "YulTypedName",
														"src": "248:6:12",
														"type": ""
													}
												],
												"src": "190:184:12"
											},
											{
												"body": {
													"nativeSrc": "480:76:12",
													"nodeType": "YulBlock",
													"src": "480:76:12",
													"statements": [
														{
															"nativeSrc": "490:26:12",
															"nodeType": "YulAssignment",
															"src": "490:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "502:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "502:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "513:2:12",
																		"nodeType": "YulLiteral",
																		"src": "513:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "498:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:12"
																},
																"nativeSrc": "498:18:12",
																"nodeType": "YulFunctionCall",
																"src": "498:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "490:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "490:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "532:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "532:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "543:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "543:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "525:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:12"
																},
																"nativeSrc": "525:25:12",
																"nodeType": "YulFunctionCall",
																"src": "525:25:12"
															},
															"nativeSrc": "525:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "525:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "379:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "449:9:12",
														"nodeType": "YulTypedName",
														"src": "449:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "460:6:12",
														"nodeType": "YulTypedName",
														"src": "460:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "471:4:12",
														"nodeType": "YulTypedName",
														"src": "471:4:12",
														"type": ""
													}
												],
												"src": "379:177:12"
											},
											{
												"body": {
													"nativeSrc": "610:124:12",
													"nodeType": "YulBlock",
													"src": "610:124:12",
													"statements": [
														{
															"nativeSrc": "620:29:12",
															"nodeType": "YulAssignment",
															"src": "620:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "642:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "629:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:12"
																},
																"nativeSrc": "629:20:12",
																"nodeType": "YulFunctionCall",
																"src": "629:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "620:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "712:16:12",
																"nodeType": "YulBlock",
																"src": "712:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "721:1:12",
																					"nodeType": "YulLiteral",
																					"src": "721:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:12",
																					"nodeType": "YulLiteral",
																					"src": "724:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "714:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "714:6:12"
																			},
																			"nativeSrc": "714:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "714:12:12"
																		},
																		"nativeSrc": "714:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "714:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "671:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "671:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "682:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "682:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "697:3:12",
																										"nodeType": "YulLiteral",
																										"src": "697:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "702:1:12",
																										"nodeType": "YulLiteral",
																										"src": "702:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "693:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "693:3:12"
																								},
																								"nativeSrc": "693:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "693:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "706:1:12",
																								"nodeType": "YulLiteral",
																								"src": "706:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "689:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "689:3:12"
																						},
																						"nativeSrc": "689:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "689:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "678:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "678:3:12"
																				},
																				"nativeSrc": "678:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "678:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "668:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:2:12"
																		},
																		"nativeSrc": "668:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "661:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "661:6:12"
																},
																"nativeSrc": "661:50:12",
																"nodeType": "YulFunctionCall",
																"src": "661:50:12"
															},
															"nativeSrc": "658:70:12",
															"nodeType": "YulIf",
															"src": "658:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "561:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "589:6:12",
														"nodeType": "YulTypedName",
														"src": "589:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "600:5:12",
														"nodeType": "YulTypedName",
														"src": "600:5:12",
														"type": ""
													}
												],
												"src": "561:173:12"
											},
											{
												"body": {
													"nativeSrc": "809:116:12",
													"nodeType": "YulBlock",
													"src": "809:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "855:16:12",
																"nodeType": "YulBlock",
																"src": "855:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "864:1:12",
																					"nodeType": "YulLiteral",
																					"src": "864:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "867:1:12",
																					"nodeType": "YulLiteral",
																					"src": "867:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "857:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "857:6:12"
																			},
																			"nativeSrc": "857:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "857:12:12"
																		},
																		"nativeSrc": "857:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "857:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "830:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "830:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "839:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "839:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "826:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:12"
																		},
																		"nativeSrc": "826:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "826:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "851:2:12",
																		"nodeType": "YulLiteral",
																		"src": "851:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "822:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:12"
																},
																"nativeSrc": "822:32:12",
																"nodeType": "YulFunctionCall",
																"src": "822:32:12"
															},
															"nativeSrc": "819:52:12",
															"nodeType": "YulIf",
															"src": "819:52:12"
														},
														{
															"nativeSrc": "880:39:12",
															"nodeType": "YulAssignment",
															"src": "880:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "909:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "890:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "890:18:12"
																},
																"nativeSrc": "890:29:12",
																"nodeType": "YulFunctionCall",
																"src": "890:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "880:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "880:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "739:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "775:9:12",
														"nodeType": "YulTypedName",
														"src": "775:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "786:7:12",
														"nodeType": "YulTypedName",
														"src": "786:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "798:6:12",
														"nodeType": "YulTypedName",
														"src": "798:6:12",
														"type": ""
													}
												],
												"src": "739:186:12"
											},
											{
												"body": {
													"nativeSrc": "1016:172:12",
													"nodeType": "YulBlock",
													"src": "1016:172:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1062:16:12",
																"nodeType": "YulBlock",
																"src": "1062:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1071:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1071:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1074:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1064:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1064:6:12"
																			},
																			"nativeSrc": "1064:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1064:12:12"
																		},
																		"nativeSrc": "1064:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1064:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1046:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1033:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1033:3:12"
																		},
																		"nativeSrc": "1033:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1033:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1058:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1029:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1029:3:12"
																},
																"nativeSrc": "1029:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1029:32:12"
															},
															"nativeSrc": "1026:52:12",
															"nodeType": "YulIf",
															"src": "1026:52:12"
														},
														{
															"nativeSrc": "1087:39:12",
															"nodeType": "YulAssignment",
															"src": "1087:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1116:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1116:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1097:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1097:18:12"
																},
																"nativeSrc": "1097:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1097:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1087:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:12"
																}
															]
														},
														{
															"nativeSrc": "1135:47:12",
															"nodeType": "YulAssignment",
															"src": "1135:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1167:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1167:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1178:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1178:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:12"
																		},
																		"nativeSrc": "1163:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "1145:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1145:17:12"
																},
																"nativeSrc": "1145:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1145:37:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1135:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64",
												"nativeSrc": "930:258:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "974:9:12",
														"nodeType": "YulTypedName",
														"src": "974:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "985:7:12",
														"nodeType": "YulTypedName",
														"src": "985:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "997:6:12",
														"nodeType": "YulTypedName",
														"src": "997:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1005:6:12",
														"nodeType": "YulTypedName",
														"src": "1005:6:12",
														"type": ""
													}
												],
												"src": "930:258:12"
											},
											{
												"body": {
													"nativeSrc": "1294:102:12",
													"nodeType": "YulBlock",
													"src": "1294:102:12",
													"statements": [
														{
															"nativeSrc": "1304:26:12",
															"nodeType": "YulAssignment",
															"src": "1304:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1316:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1316:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1327:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1327:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1312:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:12"
																},
																"nativeSrc": "1312:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1312:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1304:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1304:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1346:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1346:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1361:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1377:3:12",
																								"nodeType": "YulLiteral",
																								"src": "1377:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1382:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1382:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1373:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1373:3:12"
																						},
																						"nativeSrc": "1373:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1373:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1386:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1386:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1369:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1369:3:12"
																				},
																				"nativeSrc": "1369:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1369:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1357:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:12"
																		},
																		"nativeSrc": "1357:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1357:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1339:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:12"
																},
																"nativeSrc": "1339:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1339:51:12"
															},
															"nativeSrc": "1339:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1339:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1193:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1263:9:12",
														"nodeType": "YulTypedName",
														"src": "1263:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1274:6:12",
														"nodeType": "YulTypedName",
														"src": "1274:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1285:4:12",
														"nodeType": "YulTypedName",
														"src": "1285:4:12",
														"type": ""
													}
												],
												"src": "1193:203:12"
											},
											{
												"body": {
													"nativeSrc": "1433:95:12",
													"nodeType": "YulBlock",
													"src": "1433:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1450:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1457:3:12",
																				"nodeType": "YulLiteral",
																				"src": "1457:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1462:10:12",
																				"nodeType": "YulLiteral",
																				"src": "1462:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1453:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1453:3:12"
																		},
																		"nativeSrc": "1453:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1453:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1443:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1443:6:12"
																},
																"nativeSrc": "1443:31:12",
																"nodeType": "YulFunctionCall",
																"src": "1443:31:12"
															},
															"nativeSrc": "1443:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "1443:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1490:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1490:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1493:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1493:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1483:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:12"
																},
																"nativeSrc": "1483:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1483:15:12"
															},
															"nativeSrc": "1483:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1483:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1514:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1514:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1517:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1517:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1507:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:12"
																},
																"nativeSrc": "1507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1507:15:12"
															},
															"nativeSrc": "1507:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1507:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1401:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1401:127:12"
											},
											{
												"body": {
													"nativeSrc": "1581:77:12",
													"nodeType": "YulBlock",
													"src": "1581:77:12",
													"statements": [
														{
															"nativeSrc": "1591:16:12",
															"nodeType": "YulAssignment",
															"src": "1591:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1602:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1602:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1605:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1605:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:12"
																},
																"nativeSrc": "1598:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1591:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1591:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1630:22:12",
																"nodeType": "YulBlock",
																"src": "1630:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1632:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1632:16:12"
																			},
																			"nativeSrc": "1632:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1632:18:12"
																		},
																		"nativeSrc": "1632:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1632:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1622:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1622:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1625:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1625:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1619:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1619:2:12"
																},
																"nativeSrc": "1619:10:12",
																"nodeType": "YulFunctionCall",
																"src": "1619:10:12"
															},
															"nativeSrc": "1616:36:12",
															"nodeType": "YulIf",
															"src": "1616:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1533:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1564:1:12",
														"nodeType": "YulTypedName",
														"src": "1564:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1567:1:12",
														"nodeType": "YulTypedName",
														"src": "1567:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1573:3:12",
														"nodeType": "YulTypedName",
														"src": "1573:3:12",
														"type": ""
													}
												],
												"src": "1533:125:12"
											},
											{
												"body": {
													"nativeSrc": "1744:103:12",
													"nodeType": "YulBlock",
													"src": "1744:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1790:16:12",
																"nodeType": "YulBlock",
																"src": "1790:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1799:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1802:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1802:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1792:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:12"
																			},
																			"nativeSrc": "1792:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1792:12:12"
																		},
																		"nativeSrc": "1792:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1765:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1765:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1774:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1774:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1761:3:12"
																		},
																		"nativeSrc": "1761:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1761:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1786:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1786:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1757:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:12"
																},
																"nativeSrc": "1757:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1757:32:12"
															},
															"nativeSrc": "1754:52:12",
															"nodeType": "YulIf",
															"src": "1754:52:12"
														},
														{
															"nativeSrc": "1815:26:12",
															"nodeType": "YulAssignment",
															"src": "1815:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1831:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1831:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1825:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1825:5:12"
																},
																"nativeSrc": "1825:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1825:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1815:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "1663:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1710:9:12",
														"nodeType": "YulTypedName",
														"src": "1710:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1721:7:12",
														"nodeType": "YulTypedName",
														"src": "1721:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1733:6:12",
														"nodeType": "YulTypedName",
														"src": "1733:6:12",
														"type": ""
													}
												],
												"src": "1663:184:12"
											},
											{
												"body": {
													"nativeSrc": "1901:79:12",
													"nodeType": "YulBlock",
													"src": "1901:79:12",
													"statements": [
														{
															"nativeSrc": "1911:17:12",
															"nodeType": "YulAssignment",
															"src": "1911:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1923:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1923:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1926:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1926:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1919:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1919:3:12"
																},
																"nativeSrc": "1919:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1919:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1911:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1911:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1952:22:12",
																"nodeType": "YulBlock",
																"src": "1952:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1954:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1954:16:12"
																			},
																			"nativeSrc": "1954:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1954:18:12"
																		},
																		"nativeSrc": "1954:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1954:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1943:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1943:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1949:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1949:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1940:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1940:2:12"
																},
																"nativeSrc": "1940:11:12",
																"nodeType": "YulFunctionCall",
																"src": "1940:11:12"
															},
															"nativeSrc": "1937:37:12",
															"nodeType": "YulIf",
															"src": "1937:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1852:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1883:1:12",
														"nodeType": "YulTypedName",
														"src": "1883:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1886:1:12",
														"nodeType": "YulTypedName",
														"src": "1886:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1892:4:12",
														"nodeType": "YulTypedName",
														"src": "1892:4:12",
														"type": ""
													}
												],
												"src": "1852:128:12"
											},
											{
												"body": {
													"nativeSrc": "2037:116:12",
													"nodeType": "YulBlock",
													"src": "2037:116:12",
													"statements": [
														{
															"nativeSrc": "2047:20:12",
															"nodeType": "YulAssignment",
															"src": "2047:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2062:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2062:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2065:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2065:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2058:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2058:3:12"
																},
																"nativeSrc": "2058:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2058:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2047:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2047:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2125:22:12",
																"nodeType": "YulBlock",
																"src": "2125:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2127:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2127:16:12"
																			},
																			"nativeSrc": "2127:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2127:18:12"
																		},
																		"nativeSrc": "2127:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2127:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2096:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "2096:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2089:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2089:6:12"
																				},
																				"nativeSrc": "2089:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2089:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2103:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "2103:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2110:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "2110:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2119:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "2119:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2106:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2106:3:12"
																						},
																						"nativeSrc": "2106:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2106:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2100:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2100:2:12"
																				},
																				"nativeSrc": "2100:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2100:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2086:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2086:2:12"
																		},
																		"nativeSrc": "2086:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2086:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2079:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2079:6:12"
																},
																"nativeSrc": "2079:45:12",
																"nodeType": "YulFunctionCall",
																"src": "2079:45:12"
															},
															"nativeSrc": "2076:71:12",
															"nodeType": "YulIf",
															"src": "2076:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1985:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2016:1:12",
														"nodeType": "YulTypedName",
														"src": "2016:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2019:1:12",
														"nodeType": "YulTypedName",
														"src": "2019:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2025:7:12",
														"nodeType": "YulTypedName",
														"src": "2025:7:12",
														"type": ""
													}
												],
												"src": "1985:168:12"
											},
											{
												"body": {
													"nativeSrc": "2204:171:12",
													"nodeType": "YulBlock",
													"src": "2204:171:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2235:111:12",
																"nodeType": "YulBlock",
																"src": "2235:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2256:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2256:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2263:3:12",
																							"nodeType": "YulLiteral",
																							"src": "2263:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2268:10:12",
																							"nodeType": "YulLiteral",
																							"src": "2268:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2259:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2259:3:12"
																					},
																					"nativeSrc": "2259:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2259:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2249:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2249:6:12"
																			},
																			"nativeSrc": "2249:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2249:31:12"
																		},
																		"nativeSrc": "2249:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2249:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2300:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2300:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2303:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2303:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2293:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:12"
																			},
																			"nativeSrc": "2293:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2293:15:12"
																		},
																		"nativeSrc": "2293:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2293:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2328:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2331:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2331:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2321:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2321:6:12"
																			},
																			"nativeSrc": "2321:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2321:15:12"
																		},
																		"nativeSrc": "2321:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2321:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2224:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2224:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2217:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:12"
																},
																"nativeSrc": "2217:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2217:9:12"
															},
															"nativeSrc": "2214:132:12",
															"nodeType": "YulIf",
															"src": "2214:132:12"
														},
														{
															"nativeSrc": "2355:14:12",
															"nodeType": "YulAssignment",
															"src": "2355:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2364:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2364:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2367:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2367:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2360:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2360:3:12"
																},
																"nativeSrc": "2360:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2360:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2355:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "2355:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2158:217:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2189:1:12",
														"nodeType": "YulTypedName",
														"src": "2189:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2192:1:12",
														"nodeType": "YulTypedName",
														"src": "2192:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2198:1:12",
														"nodeType": "YulTypedName",
														"src": "2198:1:12",
														"type": ""
													}
												],
												"src": "2158:217:12"
											},
											{
												"body": {
													"nativeSrc": "2509:145:12",
													"nodeType": "YulBlock",
													"src": "2509:145:12",
													"statements": [
														{
															"nativeSrc": "2519:26:12",
															"nodeType": "YulAssignment",
															"src": "2519:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2531:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2531:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2542:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2542:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2527:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:12"
																},
																"nativeSrc": "2527:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2527:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2519:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2519:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2561:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2561:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2576:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2576:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2592:3:12",
																								"nodeType": "YulLiteral",
																								"src": "2592:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2597:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2597:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2588:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2588:3:12"
																						},
																						"nativeSrc": "2588:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2588:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2601:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2601:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2584:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2584:3:12"
																				},
																				"nativeSrc": "2584:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2572:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:12"
																		},
																		"nativeSrc": "2572:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2554:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:12"
																},
																"nativeSrc": "2554:51:12",
																"nodeType": "YulFunctionCall",
																"src": "2554:51:12"
															},
															"nativeSrc": "2554:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "2554:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2625:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2625:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2636:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2636:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2621:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2621:3:12"
																		},
																		"nativeSrc": "2621:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2621:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2641:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2641:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2614:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:12"
																},
																"nativeSrc": "2614:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2614:34:12"
															},
															"nativeSrc": "2614:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2614:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2380:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2470:9:12",
														"nodeType": "YulTypedName",
														"src": "2470:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2481:6:12",
														"nodeType": "YulTypedName",
														"src": "2481:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2489:6:12",
														"nodeType": "YulTypedName",
														"src": "2489:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2500:4:12",
														"nodeType": "YulTypedName",
														"src": "2500:4:12",
														"type": ""
													}
												],
												"src": "2380:274:12"
											},
											{
												"body": {
													"nativeSrc": "2788:119:12",
													"nodeType": "YulBlock",
													"src": "2788:119:12",
													"statements": [
														{
															"nativeSrc": "2798:26:12",
															"nodeType": "YulAssignment",
															"src": "2798:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2810:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2810:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2821:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2821:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2806:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:12"
																},
																"nativeSrc": "2806:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2806:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2798:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2798:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2840:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2840:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2851:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2851:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2833:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:12"
																},
																"nativeSrc": "2833:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2833:25:12"
															},
															"nativeSrc": "2833:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "2833:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2878:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2889:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2889:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2874:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:12"
																		},
																		"nativeSrc": "2874:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2874:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2894:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2894:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2867:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:12"
																},
																"nativeSrc": "2867:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2867:34:12"
															},
															"nativeSrc": "2867:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2867:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2659:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2749:9:12",
														"nodeType": "YulTypedName",
														"src": "2749:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2760:6:12",
														"nodeType": "YulTypedName",
														"src": "2760:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2768:6:12",
														"nodeType": "YulTypedName",
														"src": "2768:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2779:4:12",
														"nodeType": "YulTypedName",
														"src": "2779:4:12",
														"type": ""
													}
												],
												"src": "2659:248:12"
											},
											{
												"body": {
													"nativeSrc": "3103:14:12",
													"nodeType": "YulBlock",
													"src": "3103:14:12",
													"statements": [
														{
															"nativeSrc": "3105:10:12",
															"nodeType": "YulAssignment",
															"src": "3105:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "3112:3:12",
																"nodeType": "YulIdentifier",
																"src": "3112:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3105:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3105:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2912:205:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3087:3:12",
														"nodeType": "YulTypedName",
														"src": "3087:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3095:3:12",
														"nodeType": "YulTypedName",
														"src": "3095:3:12",
														"type": ""
													}
												],
												"src": "2912:205:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"182": [
									{
										"length": 32,
										"start": 1198
									}
								],
								"184": [
									{
										"length": 32,
										"start": 295
									},
									{
										"length": 32,
										"start": 1236
									},
									{
										"length": 32,
										"start": 1458
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100dc575f3560e01c8063961325211161007c578063be9a655511610057578063be9a65551461024a578063efbe1c1c1461025e578063f2fde38b14610272578063fbccedae14610291575f80fd5b806396132521146101e35780639852595c146101f7578063a3f8eace1461022b575f80fd5b8063715018a6116100b7578063715018a614610176578063810ec23b1461018a57806386d1a69f146101a95780638da5cb5b146101bd575f80fd5b80630a17b06b146100e75780630fb5a6b4146101195780631916558714610155575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b50610106610101366004610826565b6102a5565b6040519081526020015b60405180910390f35b348015610124575f80fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610106565b348015610160575f80fd5b5061017461016f366004610855565b6102c8565b005b348015610181575f80fd5b50610174610360565b348015610195575f80fd5b506101066101a436600461086e565b610373565b3480156101b4575f80fd5b50610174610406565b3480156101c8575f80fd5b505f546040516001600160a01b039091168152602001610110565b3480156101ee575f80fd5b50600154610106565b348015610202575f80fd5b50610106610211366004610855565b6001600160a01b03165f9081526002602052604090205490565b348015610236575f80fd5b50610106610245366004610855565b610477565b348015610255575f80fd5b506101066104a3565b348015610269575f80fd5b506101066104d1565b34801561027d575f80fd5b5061017461028c366004610855565b610514565b34801561029c575f80fd5b50610106610553565b5f6102c26102b260015490565b6102bc90476108b3565b83610570565b92915050565b5f6102d282610477565b6001600160a01b0383165f908152600260205260408120805492935083929091906102fe9084906108b3565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a261035c826103565f546001600160a01b031690565b83610612565b5050565b610368610669565b6103715f610695565b565b6001600160a01b0382165f908152600260205260408120546103ff906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103d1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f591906108c6565b6102bc91906108b3565b9392505050565b5f61040f610553565b90508060015f82825461042291906108b3565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161047461046e5f546001600160a01b031690565b826106e4565b50565b6001600160a01b0381165f908152600260205260408120546104998342610373565b6102c291906108dd565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b5f7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105056104a3565b61050f91906108b3565b905090565b61051c610669565b6001600160a01b03811661054a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61047481610695565b5f61055d60015490565b610566426102a5565b61050f91906108dd565b5f6105796104a3565b8267ffffffffffffffff16101561059157505f6102c2565b6105996104d1565b8267ffffffffffffffff16106105b05750816102c2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105e36104a3565b6105f79067ffffffffffffffff85166108dd565b61060190856108f0565b61060b9190610907565b90506102c2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610664908490610776565b505050565b5f546001600160a01b031633146103715760405163118cdaa760e01b8152336004820152602401610541565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8047101561070e5760405163cf47918160e01b815247600482015260248101829052604401610541565b5f80836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610758576040519150601f19603f3d011682016040523d82523d5f602084013e61075d565b606091505b50915091508161077057610770816107e2565b50505050565b5f8060205f8451602086015f885af180610795576040513d5f823e3d81fd5b50505f513d915081156107ac5780600114156107b9565b6001600160a01b0384163b155b1561077057604051635274afe760e01b81526001600160a01b0385166004820152602401610541565b8051156107f157805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b803567ffffffffffffffff81168114610821575f80fd5b919050565b5f60208284031215610836575f80fd5b6103ff8261080a565b80356001600160a01b0381168114610821575f80fd5b5f60208284031215610865575f80fd5b6103ff8261083f565b5f806040838503121561087f575f80fd5b6108888361083f565b91506108966020840161080a565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102c2576102c261089f565b5f602082840312156108d6575f80fd5b5051919050565b818103818111156102c2576102c261089f565b80820281158282048414176102c2576102c261089f565b5f8261092157634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220e79cdbcaaf07311bf07311bdb60ae12279d1f729073fee96109569419fcbc00a64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xE3 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x360 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x553 JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x2B2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BC SWAP1 SELFBALANCE PUSH2 0x8B3 JUMP JUMPDEST DUP4 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2 DUP3 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x35C DUP3 PUSH2 0x356 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x612 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x371 PUSH0 PUSH2 0x695 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x40F PUSH2 0x553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x474 PUSH2 0x46E PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x499 DUP4 TIMESTAMP PUSH2 0x373 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x505 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x695 JUMP JUMPDEST PUSH0 PUSH2 0x55D PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x566 TIMESTAMP PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH2 0x579 PUSH2 0x4A3 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x591 JUMPI POP PUSH0 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x599 PUSH2 0x4D1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x5B0 JUMPI POP DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5E3 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5F7 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x664 SWAP1 DUP5 SWAP1 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7AC JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x7F1 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x80A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP4 PUSH2 0x83F JUMP JUMPDEST SWAP2 POP PUSH2 0x896 PUSH1 0x20 DUP5 ADD PUSH2 0x80A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x921 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 SWAP13 0xDB 0xCA 0xAF SMOD BALANCE SHL CREATE PUSH20 0x11BDB60AE12279D1F729073FEE96109569419FCB 0xC0 EXP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "2053:4001:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4997:165;;;;;;;;;;-1:-1:-1;4997:165:1;;;;;:::i;:::-;;:::i;:::-;;;525:25:12;;;513:2;498:18;4997:165:1;;;;;;;;3044:91;;;;;;;;;;-1:-1:-1;3119:9:1;3112:16;;3044:91;;4611:246;;;;;;;;;;-1:-1:-1;4611:246:1;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;5303:202:1:-;;;;;;;;;;-1:-1:-1;5303:202:1;;;;;:::i;:::-;;:::i;4289:198::-;;;;;;;;;;;;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;1339:51:12;;1327:2;1312:18;1638:85:0;1193:203:12;3361:91:1;;;;;;;;;;-1:-1:-1;3436:9:1;;3361:91;;3519:116;;;;;;;;;;-1:-1:-1;3519:116:1;;;;;:::i;:::-;-1:-1:-1;;;;;3607:21:1;3581:7;3607:21;;;:14;:21;;;;;;;3519:116;3992:159;;;;;;;;;;-1:-1:-1;3992:159:1;;;;;:::i;:::-;;:::i;2892:85::-;;;;;;;;;;;;;:::i;3199:97::-;;;;;;;;;;;;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;3710:134:1:-;;;;;;;;;;;;;:::i;4997:165::-;5066:7;5092:63;5133:10;3436:9;;;3361:91;5133:10;5109:34;;:21;:34;:::i;:::-;5145:9;5092:16;:63::i;:::-;5085:70;4997:165;-1:-1:-1;;4997:165:1:o;4611:246::-;4668:14;4685:17;4696:5;4685:10;:17::i;:::-;-1:-1:-1;;;;;4712:21:1;;;;;;:14;:21;;;;;:31;;4668:34;;-1:-1:-1;4668:34:1;;4712:21;;;:31;;4668:34;;4712:31;:::i;:::-;;;;-1:-1:-1;;4758:28:1;;525:25:12;;;-1:-1:-1;;;;;4758:28:1;;;;;513:2:12;498:18;4758:28:1;;;;;;;4796:54;4826:5;4834:7;1684::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;4834:7:1;4843:6;4796:22;:54::i;:::-;4658:199;4611:246;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5303:202:1:-;-1:-1:-1;;;;;3607:21:1;;5387:7;3607:21;;;:14;:21;;;;;;5413:85;;5430:38;;-1:-1:-1;;;5430:38:1;;5462:4;5430:38;;;1339:51:12;-1:-1:-1;;;;;5430:23:1;;;;;1312:18:12;;5430:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;5413:85::-;5406:92;5303:202;-1:-1:-1;;;5303:202:1:o;4289:198::-;4333:14;4350:12;:10;:12::i;:::-;4333:29;;4385:6;4372:9;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;4406:21:1;;525:25:12;;;4406:21:1;;513:2:12;498:18;4406:21:1;;;;;;;4437:43;4463:7;1684::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;4463:7:1;4473:6;4437:17;:43::i;:::-;4323:164;4289:198::o;3992:159::-;-1:-1:-1;;;;;3607:21:1;;4056:7;3607:21;;;:14;:21;;;;;;4082:44;4095:5;4109:15;4082:12;:44::i;:::-;:62;;;;:::i;2892:85::-;2957:13;2964:6;2957:13;;2892:85::o;3199:97::-;3243:7;3119:9;3112:16;;3269:7;:5;:7::i;:::-;:20;;;;:::i;:::-;3262:27;;3199:97;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1339:51:12::0;1312:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;3710:134:1:-:0;3761:7;3827:10;3436:9;;;3361:91;3827:10;3787:37;3807:15;3787:12;:37::i;:::-;:50;;;;:::i;5700:352::-;5800:7;5835;:5;:7::i;:::-;5823:9;:19;;;5819:227;;;-1:-1:-1;5865:1:1;5858:8;;5819:227;5900:5;:3;:5::i;:::-;5887:9;:18;;;5883:163;;-1:-1:-1;5928:15:1;5921:22;;5883:163;3119:9;3112:16;;6013:7;:5;:7::i;:::-;6001:19;;;;;;:::i;:::-;5982:39;;:15;:39;:::i;:::-;5981:54;;;;:::i;:::-;5974:61;;;;1219:160:6;1328:43;;;-1:-1:-1;;;;;2572:32:12;;1328:43:6;;;2554:51:12;2621:18;;;;2614:34;;;1328:43:6;;;;;;;;;;2527:18:12;;;;1328:43:6;;;;;;;;-1:-1:-1;;;;;1328:43:6;-1:-1:-1;;;1328:43:6;;;1301:71;;1321:5;;1301:19;:71::i;:::-;1219:160;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;1339:51:12;1312:18;;1901:40:0;1193:203:12;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1290:365:7:-;1399:6;1375:21;:30;1371:125;;;1428:57;;-1:-1:-1;;;1428:57:7;;1455:21;1428:57;;;2833:25:12;2874:18;;;2867:34;;;2806:18;;1428:57:7;2659:248:12;1371:125:7;1507:12;1521:23;1548:9;-1:-1:-1;;;;;1548:14:7;1570:6;1548:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:75;;;;1596:7;1591:58;;1619:19;1627:10;1619:7;:19::i;:::-;1361:294;;1290:365;;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:6;8910:8;8866:16;;-1:-1:-1;8942:15:6;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:6;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:6;;-1:-1:-1;;;;;1357:32:12;;9033:40:6;;;1339:51:12;1312:18;;9033:40:6;1193:203:12;5559:434:7;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:7;;;;;;;;;;;14:171:12;81:20;;141:18;130:30;;120:41;;110:69;;175:1;172;165:12;110:69;14:171;;;:::o;190:184::-;248:6;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;340:28;358:9;340:28;:::i;561:173::-;629:20;;-1:-1:-1;;;;;678:31:12;;668:42;;658:70;;724:1;721;714:12;739:186;798:6;851:2;839:9;830:7;826:23;822:32;819:52;;;867:1;864;857:12;819:52;890:29;909:9;890:29;:::i;930:258::-;997:6;1005;1058:2;1046:9;1037:7;1033:23;1029:32;1026:52;;;1074:1;1071;1064:12;1026:52;1097:29;1116:9;1097:29;:::i;:::-;1087:39;;1145:37;1178:2;1167:9;1163:18;1145:37;:::i;:::-;1135:47;;930:258;;;;;:::o;1401:127::-;1462:10;1457:3;1453:20;1450:1;1443:31;1493:4;1490:1;1483:15;1517:4;1514:1;1507:15;1533:125;1598:9;;;1619:10;;;1616:36;;;1632:18;;:::i;1663:184::-;1733:6;1786:2;1774:9;1765:7;1761:23;1757:32;1754:52;;;1802:1;1799;1792:12;1754:52;-1:-1:-1;1825:16:12;;1663:184;-1:-1:-1;1663:184:12:o;1852:128::-;1919:9;;;1940:11;;;1937:37;;;1954:18;;:::i;1985:168::-;2058:9;;;2089;;2106:15;;;2100:22;;2086:37;2076:71;;2127:18;;:::i;2158:217::-;2198:1;2224;2214:132;;2268:10;2263:3;2259:20;2256:1;2249:31;2303:4;2300:1;2293:15;2331:4;2328:1;2321:15;2214:132;-1:-1:-1;2360:9:12;;2158:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "479200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"duration()": "infinite",
								"end()": "infinite",
								"owner()": "2388",
								"releasable()": "infinite",
								"releasable(address)": "infinite",
								"release()": "infinite",
								"release(address)": "infinite",
								"released()": "2303",
								"released(address)": "2568",
								"renounceOwnership()": "infinite",
								"start()": "infinite",
								"transferOwnership(address)": "28395",
								"vestedAmount(address,uint64)": "infinite",
								"vestedAmount(uint64)": "infinite"
							},
							"internal": {
								"_vestingSchedule(uint256,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2525,
									"end": 2711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2525,
									"end": 2711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2621,
									"end": 2632,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 801,
									"end": 852,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 774,
									"end": 792,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 774,
									"end": 792,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2644,
									"end": 2667,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2644,
									"end": 2667,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2644,
									"end": 2667,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2644,
									"end": 2667,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2644,
									"end": 2667,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2704,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2677,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 189,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 14,
									"end": 189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 92,
									"end": 105,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 92,
									"end": 105,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 134,
									"end": 164,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 134,
									"end": 164,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 124,
									"end": 165,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 124,
									"end": 165,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 114,
									"end": 183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 179,
									"end": 180,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 177,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 169,
									"end": 181,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 114,
									"end": 183,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14,
									"end": 189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 194,
									"end": 650,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 280,
									"end": 286,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 294,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 296,
									"end": 302,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 351,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 337,
									"end": 346,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 328,
									"end": 335,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 324,
									"end": 347,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 320,
									"end": 352,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 317,
									"end": 369,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 317,
									"end": 369,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 365,
									"end": 366,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 363,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 355,
									"end": 367,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 317,
									"end": 369,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 391,
									"end": 407,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 391,
									"end": 407,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 436,
									"end": 467,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 436,
									"end": 467,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 426,
									"end": 468,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 426,
									"end": 468,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 416,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 482,
									"end": 483,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 480,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 472,
									"end": 484,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 416,
									"end": 486,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 505,
									"end": 510,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 558,
									"end": 576,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 558,
									"end": 576,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 529,
									"end": 577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 529,
									"end": 577,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 529,
									"end": 577,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 519,
									"end": 577,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 519,
									"end": 577,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 629,
									"end": 638,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 625,
									"end": 643,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 596,
									"end": 644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 596,
									"end": 644,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 596,
									"end": 644,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 586,
									"end": 644,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 586,
									"end": 644,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 655,
									"end": 858,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 655,
									"end": 858,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2053,
									"end": 6054,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e79cdbcaaf07311bf07311bdb60ae12279d1f729073fee96109569419fcbc00a64736f6c63430008180033",
									".code": [
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "96132521"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "BE9A6555"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "BE9A6555"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "EFBE1C1C"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "FBCCEDAE"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "96132521"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "9852595C"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "A3F8EACE"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "810EC23B"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "86D1A69F"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "A17B06B"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "FB5A6B4"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "19165587"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 6054,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4997,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4997,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4611,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4611,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5303,
											"end": 5505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5303,
											"end": 5505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4289,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3519,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3992,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3992,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2892,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3199,
											"end": 3296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3710,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5133,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5143,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5133,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5130,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5109,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5092,
											"end": 5155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5155,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5092,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5085,
											"end": 5155,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4997,
											"end": 5162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4696,
											"end": 4701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4685,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4702,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4685,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4712,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "C0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4796,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4850,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4796,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5413,
											"end": 5498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5466,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5430,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5430,
											"end": 5486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5430,
											"end": 5486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5498,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5413,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5498,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5303,
											"end": 5505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4350,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4372,
											"end": 4391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "DA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4463,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4470,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4463,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4437,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4480,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4437,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4095,
											"end": 4100,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4124,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4082,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4126,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4082,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4082,
											"end": 4144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4082,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2964,
											"end": 2970,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3269,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3276,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3269,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3269,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3262,
											"end": 3289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3262,
											"end": 3289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3827,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3807,
											"end": 3822,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3787,
											"end": 3824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3787,
											"end": 3837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3787,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 6052,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5700,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5835,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5835,
											"end": 5842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5823,
											"end": 5842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5900,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5883,
											"end": 6046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5928,
											"end": 5943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5921,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5921,
											"end": 5943,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5883,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6013,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6013,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6020,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6013,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6001,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 5997,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5982,
											"end": 6021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5981,
											"end": 6035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5974,
											"end": 6035,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2604,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2604,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2605,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1396,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1405,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF479181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1476,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2858,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2659,
											"end": 2907,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1627,
											"end": 1637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1619,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5559,
											"end": 5993,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5559,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 5904,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5905,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5885,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5906,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14,
											"end": 185,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 14,
											"end": 185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 81,
											"end": 101,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 81,
											"end": 101,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 141,
											"end": 159,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 130,
											"end": 160,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 130,
											"end": 160,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 120,
											"end": 161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 120,
											"end": 161,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 110,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 173,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 165,
											"end": 177,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 110,
											"end": 179,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 190,
											"end": 374,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 190,
											"end": 374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 248,
											"end": 254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 303,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 298,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 280,
											"end": 287,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 276,
											"end": 299,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 272,
											"end": 304,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 269,
											"end": 321,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 269,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 269,
											"end": 321,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 358,
											"end": 367,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 340,
											"end": 368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 734,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 561,
											"end": 734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 629,
											"end": 649,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 678,
											"end": 709,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 668,
											"end": 710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 668,
											"end": 710,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 658,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 658,
											"end": 728,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 714,
											"end": 726,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 739,
											"end": 925,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 798,
											"end": 804,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 853,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 830,
											"end": 837,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 826,
											"end": 849,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 822,
											"end": 854,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 819,
											"end": 871,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 819,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 819,
											"end": 871,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 867,
											"end": 868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 857,
											"end": 869,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 819,
											"end": 871,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 819,
											"end": 871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 890,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 909,
											"end": 918,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 890,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 890,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1064,
											"end": 1076,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1097,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1176,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 1145,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1135,
											"end": 1182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1135,
											"end": 1182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1528,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1401,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1453,
											"end": 1473,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1474,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1493,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1483,
											"end": 1498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1514,
											"end": 1515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1533,
											"end": 1658,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1533,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1632,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1765,
											"end": 1772,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1789,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1803,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1792,
											"end": 1804,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1663,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1980,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1852,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1954,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2153,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1985,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2100,
											"end": 2122,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2100,
											"end": 2122,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2127,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2375,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2158,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2259,
											"end": 2279,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 2300,
											"end": 2301,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2331,
											"end": 2335,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/finance/VestingWallet.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SpageroTokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"duration()": "0fb5a6b4",
							"end()": "efbe1c1c",
							"owner()": "8da5cb5b",
							"releasable()": "fbccedae",
							"releasable(address)": "a3f8eace",
							"release()": "86d1a69f",
							"release(address)": "19165587",
							"released()": "96132521",
							"released(address)": "9852595c",
							"renounceOwnership()": "715018a6",
							"start()": "be9a6555",
							"transferOwnership(address)": "f2fde38b",
							"vestedAmount(address,uint64)": "810ec23b",
							"vestedAmount(uint64)": "0a17b06b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A vesting wallet is an ownable contract that can receive native currency and ERC-20 tokens, and release these assets to the wallet owner, also referred to as \\\"beneficiary\\\", according to a vesting schedule. Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable. By setting the duration to 0, one can configure this contract to behave like an asset timelock that holds tokens for a beneficiary until a specified time. NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens. Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the near future. NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended. NOTE: Chains with support for native ERC20s may allow the vesting wallet to withdraw the underlying asset as both an ERC20 and as native currency. For example, if chain C supports token A and the wallet gets deposited 100 A, then at 50% of the vesting period, the beneficiary can withdraw 50 A as ERC20 and 25 A as native currency (totaling 75 A). Consider disabling one of the withdrawal methods.\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the beneficiary (owner), the start timestamp and the vesting duration (in seconds) of the vesting wallet.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an {IERC20} contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/finance/VestingWallet.sol\":\"VestingWallet\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"keccak256\":\"0x79de2c47546e7d9e9785dff775e1cadda15fa877ff956f5b33b7a572e4d43e5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c431f66acb879d3dba4f4e32a21efcad38b49983cfc0a31d49bfa95a738c9f6\",\"dweb:/ipfs/QmQodRbcvFSLc7Cu6XXmGk75CZbsLmL1aZTtjeiDXVagtq\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/finance/VestingWallet.sol:VestingWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 176,
								"contract": "@openzeppelin/contracts/finance/VestingWallet.sol:VestingWallet",
								"label": "_released",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 180,
								"contract": "@openzeppelin/contracts/finance/VestingWallet.sol:VestingWallet",
								"label": "_erc20Released",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208e68451e35fccf729ffb446fb1669a6481eb2448655d4ab562df835fc4459a3564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208e68451e35fccf729ffb446fb1669a6481eb2448655d4ab562df835fc4459a3564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH9 0x451E35FCCF729FFB44 PUSH16 0xB1669A6481EB2448655D4AB562DF835F 0xC4 GASLIMIT SWAP11 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208e68451e35fccf729ffb446fb1669a6481eb2448655d4ab562df835fc4459a3564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH9 0x451E35FCCF729FFB44 PUSH16 0xB1669A6481EB2448655D4AB562DF835F 0xC4 GASLIMIT SWAP11 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e68451e35fccf729ffb446fb1669a6481eb2448655d4ab562df835fc4459a3564736f6c63430008180033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/finance/VestingWallet.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SpageroTokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:5995  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:5995  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206bcd76417c10c35f947e709f87ab1cb11a217802c708a1df36ba4843ab973cdf64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206bcd76417c10c35f947e709f87ab1cb11a217802c708a1df36ba4843ab973cdf64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xCD76417C10C35F947E709F87 0xAB SHR 0xB1 BYTE 0x21 PUSH25 0x2C708A1DF36BA4843AB973CDF64736F6C6343000818003300 ",
							"sourceMap": "233:5762:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5762:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206bcd76417c10c35f947e709f87ab1cb11a217802c708a1df36ba4843ab973cdf64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xCD76417C10C35F947E709F87 0xAB SHR 0xB1 BYTE 0x21 PUSH25 0x2C708A1DF36BA4843AB973CDF64736F6C6343000818003300 ",
							"sourceMap": "233:5762:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bcd76417c10c35f947e709f87ab1cb11a217802c708a1df36ba4843ab973cdf64736f6c63430008180033",
									".code": [
										{
											"begin": 233,
											"end": 5995,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/finance/VestingWallet.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SpageroTokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c64263bd2da4eb3a5ab7ee86ab4878a8039f8fca64d2829d9e96a459fff260d764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c64263bd2da4eb3a5ab7ee86ab4878a8039f8fca64d2829d9e96a459fff260d764736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 TIMESTAMP PUSH4 0xBD2DA4EB GASPRICE GAS 0xB7 0xEE DUP7 0xAB BASEFEE PUSH25 0xA8039F8FCA64D2829D9E96A459FFF260D764736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c64263bd2da4eb3a5ab7ee86ab4878a8039f8fca64d2829d9e96a459fff260d764736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 TIMESTAMP PUSH4 0xBD2DA4EB GASPRICE GAS 0xB7 0xEE DUP7 0xAB BASEFEE PUSH25 0xA8039F8FCA64D2829D9E96A459FFF260D764736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c64263bd2da4eb3a5ab7ee86ab4878a8039f8fca64d2829d9e96a459fff260d764736f6c63430008180033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/finance/VestingWallet.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SpageroTokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SpageroTokenVesting.sol": {
				"SpageroTokenVesting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiaryAddress",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "startTimestamp",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "durationSeconds",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EtherReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "end",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"duration()": {
								"details": "Getter for the vesting duration."
							},
							"end()": {
								"details": "Getter for the end timestamp."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"releasable()": {
								"details": "Getter for the amount of releasable eth."
							},
							"releasable(address)": {
								"details": "Getter for the amount of releasable `token` tokens. `token` should be the address of an {IERC20} contract."
							},
							"release()": {
								"details": "Release the native token (ether) that have already vested. Emits a {EtherReleased} event."
							},
							"release(address)": {
								"details": "Release the tokens that have already vested. Emits a {ERC20Released} event."
							},
							"released()": {
								"details": "Amount of eth already released"
							},
							"released(address)": {
								"details": "Amount of token already released"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"start()": {
								"details": "Getter for the start timestamp."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"vestedAmount(address,uint64)": {
								"details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
							},
							"vestedAmount(uint64)": {
								"details": "Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroTokenVesting.sol\":124:431  contract SpageroTokenVesting is VestingWallet {... */\n  mstore(0x40, 0xc0)\n    /* \"SpageroTokenVesting.sol\":238:428  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SpageroTokenVesting.sol\":373:391  beneficiaryAddress */\n  dup3\n    /* \"SpageroTokenVesting.sol\":393:407  startTimestamp */\n  dup3\n    /* \"SpageroTokenVesting.sol\":409:424  durationSeconds */\n  dup3\n    /* \"SpageroTokenVesting.sol\":373:391  beneficiaryAddress */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":801:852   */\n  mstore\n    /* \"#utility.yul\":774:792   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2644:2667  _start = startTimestamp */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2677:2704  _duration = durationSeconds */\n  and\n  0xa0\n  mstore\n  pop\n    /* \"SpageroTokenVesting.sol\":124:431  contract SpageroTokenVesting is VestingWallet {... */\n  tag_18\n  swap3\n  pop\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:189   */\ntag_17:\n    /* \"#utility.yul\":92:105   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":134:164   */\n  dup2\n  and\n    /* \"#utility.yul\":124:165   */\n  dup2\n  eq\n    /* \"#utility.yul\":114:183   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":179:180   */\n  0x00\n    /* \"#utility.yul\":176:177   */\n  dup1\n    /* \"#utility.yul\":169:181   */\n  revert\n    /* \"#utility.yul\":114:183   */\ntag_20:\n    /* \"#utility.yul\":14:189   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":194:650   */\ntag_3:\n    /* \"#utility.yul\":280:286   */\n  0x00\n    /* \"#utility.yul\":288:294   */\n  dup1\n    /* \"#utility.yul\":296:302   */\n  0x00\n    /* \"#utility.yul\":349:351   */\n  0x60\n    /* \"#utility.yul\":337:346   */\n  dup5\n    /* \"#utility.yul\":328:335   */\n  dup7\n    /* \"#utility.yul\":324:347   */\n  sub\n    /* \"#utility.yul\":320:352   */\n  slt\n    /* \"#utility.yul\":317:369   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":365:366   */\n  0x00\n    /* \"#utility.yul\":362:363   */\n  dup1\n    /* \"#utility.yul\":355:367   */\n  revert\n    /* \"#utility.yul\":317:369   */\ntag_22:\n    /* \"#utility.yul\":391:407   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":436:467   */\n  dup2\n  and\n    /* \"#utility.yul\":426:468   */\n  dup2\n  eq\n    /* \"#utility.yul\":416:486   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":482:483   */\n  0x00\n    /* \"#utility.yul\":479:480   */\n  dup1\n    /* \"#utility.yul\":472:484   */\n  revert\n    /* \"#utility.yul\":416:486   */\ntag_23:\n    /* \"#utility.yul\":505:510   */\n  swap3\n  pop\n    /* \"#utility.yul\":529:577   */\n  tag_24\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":558:576   */\n  dup6\n  add\n    /* \"#utility.yul\":529:577   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":519:577   */\n  swap2\n  pop\n    /* \"#utility.yul\":596:644   */\n  tag_25\n    /* \"#utility.yul\":640:642   */\n  0x40\n    /* \"#utility.yul\":629:638   */\n  dup6\n    /* \"#utility.yul\":625:643   */\n  add\n    /* \"#utility.yul\":596:644   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":586:644   */\n  swap1\n  pop\n    /* \"#utility.yul\":194:650   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":655:858   */\ntag_18:\n    /* \"SpageroTokenVesting.sol\":124:431  contract SpageroTokenVesting is VestingWallet {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6784108628bb46ca38406981c15d3f445c08955c04dc23f14d7a923bbb24a527\")\n  0x00\n  assignImmutable(\"0x87e4a1e230d69aed738e0c9dbdd11ea7f3dbad5efaf4648a5c527fab26e0c43e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"SpageroTokenVesting.sol\":124:431  contract SpageroTokenVesting is VestingWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x96132521\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbe9a6555\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xefbe1c1c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfbccedae\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x96132521\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa3f8eace\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x810ec23b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x86d1a69f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x0a17b06b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4997:5162  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4997:5162  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3044:3135  function duration() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3119:3128  _duration */\n      immutable(\"0x6784108628bb46ca38406981c15d3f445c08955c04dc23f14d7a923bbb24a527\")\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3112:3128  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3044:3135  function duration() public view virtual returns (uint256) {... */\n      jump(tag_23)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4611:4857  function release(address token) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_34\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5303:5505  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_23\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4289:4487  function release() public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_34\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1339:1390   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1327:1329   */\n      0x20\n        /* \"#utility.yul\":1312:1330   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3361:3452  function released() public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3436:3445  _released */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3361:3452  function released() public view virtual returns (uint256) {... */\n      jump(tag_23)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3519:3635  function released(address token) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_23\n      tag_61\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3581:3588  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3621  _erc20Released */\n      0x02\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3519:3635  function released(address token) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3992:4151  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_23\n      tag_66\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2892:2977  function start() public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_23\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3199:3296  function end() public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_23\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_34\n      tag_79\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3710:3844  function releasable() public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_23\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4997:5162  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5066:5073  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5092:5155  _vestingSchedule(address(this).balance + released(), timestamp) */\n      tag_86\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5133:5143  released() */\n      tag_87\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3436:3445  _released */\n      sload(0x01)\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3361:3452  function released() public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5133:5143  released() */\n    tag_87:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5109:5143  address(this).balance + released() */\n      tag_88\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5109:5130  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5109:5143  address(this).balance + released() */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5145:5154  timestamp */\n      dup4\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5092:5108  _vestingSchedule */\n      tag_90\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5092:5155  _vestingSchedule(address(this).balance + released(), timestamp) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5085:5155  return _vestingSchedule(address(this).balance + released(), timestamp) */\n      swap3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4997:5162  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4611:4857  function release(address token) public virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4668:4682  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4685:4702  releasable(token) */\n      tag_93\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4696:4701  token */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4685:4695  releasable */\n      tag_67\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4685:4702  releasable(token) */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4733  _erc20Released[token] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4726  _erc20Released */\n      0x02\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4733  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4743  _erc20Released[token] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4668:4702  uint256 amount = releasable(token) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4733  _erc20Released[token] */\n      swap1\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4743  _erc20Released[token] += amount */\n      tag_94\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4668:4702  uint256 amount = releasable(token) */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4712:4743  _erc20Released[token] += amount */\n      tag_89\n      jump\t// in\n    tag_94:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4758:4786  ERC20Released(token, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4758:4786  ERC20Released(token, amount) */\n      dup4\n      and\n      swap1\n      0xc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4758:4786  ERC20Released(token, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4796:4850  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      tag_96\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4826:4831  token */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4834:4841  owner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4834:4841  owner() */\n    tag_97:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4843:4849  amount */\n      dup4\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4796:4818  SafeERC20.safeTransfer */\n      tag_98\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4796:4850  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4658:4857  {... */\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4611:4857  function release(address token) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5303:5505  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5387:5394  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3621  _erc20Released */\n      0x02\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5413:5498  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5468  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5462:5466  this */\n      address\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5468  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5453  IERC20(token).balanceOf */\n      dup7\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5468  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5430:5486  IERC20(token).balanceOf(address(this)) + released(token) */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5413:5498  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n    tag_106:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5406:5498  return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      swap4\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5303:5505  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4289:4487  function release() public virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4333:4347  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4350:4362  releasable() */\n      tag_115\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4350:4360  releasable */\n      tag_83\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4350:4362  releasable() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4333:4362  uint256 amount = releasable() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4385:4391  amount */\n      dup1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4372:4381  _released */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4372:4391  _released += amount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_116:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4406:4427  EtherReleased(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":525:550   */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4406:4427  EtherReleased(amount) */\n      0xda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b\n      swap1\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":498:516   */\n      add\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4406:4427  EtherReleased(amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4437:4480  Address.sendValue(payable(owner()), amount) */\n      tag_118\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4463:4470  owner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4463:4470  owner() */\n    tag_119:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4473:4479  amount */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4437:4454  Address.sendValue */\n      tag_120\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4437:4480  Address.sendValue(payable(owner()), amount) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4323:4487  {... */\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4289:4487  function release() public virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3992:4151  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4056:4063  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3621  _erc20Released */\n      0x02\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3607:3628  _erc20Released[token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4082:4126  vestedAmount(token, uint64(block.timestamp)) */\n      tag_126\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4095:4100  token */\n      dup4\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4109:4124  block.timestamp */\n      timestamp\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4082:4094  vestedAmount */\n      tag_45\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4082:4126  vestedAmount(token, uint64(block.timestamp)) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":4082:4144  vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      tag_86\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2892:2977  function start() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2957:2970  return _start */\n      0xffffffffffffffff\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2964:2970  _start */\n      immutable(\"0x87e4a1e230d69aed738e0c9dbdd11ea7f3dbad5efaf4648a5c527fab26e0c43e\")\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2957:2970  return _start */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":2892:2977  function start() public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3199:3296  function end() public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3243:3250  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3119:3128  _duration */\n      immutable(\"0x6784108628bb46ca38406981c15d3f445c08955c04dc23f14d7a923bbb24a527\")\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3112:3128  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3269:3276  start() */\n      tag_132\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3269:3274  start */\n      tag_71\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3269:3276  start() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3269:3289  start() + duration() */\n      tag_133\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3262:3289  return start() + duration() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3199:3296  function end() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3710:3844  function releasable() public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3761:3768  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3827:3837  released() */\n      tag_141\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3436:3445  _released */\n      sload(0x01)\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3361:3452  function released() public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3827:3837  released() */\n    tag_141:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3787:3824  vestedAmount(uint64(block.timestamp)) */\n      tag_142\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3807:3822  block.timestamp */\n      timestamp\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3787:3799  vestedAmount */\n      tag_26\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3787:3824  vestedAmount(uint64(block.timestamp)) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3787:3837  vestedAmount(uint64(block.timestamp)) - released() */\n      tag_133\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5700:6052  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5800:5807  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5835:5842  start() */\n      tag_145\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5835:5840  start */\n      tag_71\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5835:5842  start() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5823:5832  timestamp */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5823:5842  timestamp < start() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5819:6046  if (timestamp < start()) {... */\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5865:5866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5858:5866  return 0 */\n      jump(tag_86)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5819:6046  if (timestamp < start()) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5900:5905  end() */\n      tag_148\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5900:5903  end */\n      tag_75\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5900:5905  end() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5887:5896  timestamp */\n      dup3\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5887:5905  timestamp >= end() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5883:6046  if (timestamp >= end()) {... */\n      tag_149\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5928:5943  totalAllocation */\n      dup2\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5921:5943  return totalAllocation */\n      jump(tag_86)\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5883:6046  if (timestamp >= end()) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3119:3128  _duration */\n      immutable(\"0x6784108628bb46ca38406981c15d3f445c08955c04dc23f14d7a923bbb24a527\")\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":3112:3128  return _duration */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":6013:6020  start() */\n      tag_152\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":6013:6018  start */\n      tag_71\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":6013:6020  start() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":6001:6020  timestamp - start() */\n      tag_153\n      swap1\n      0xffffffffffffffff\n      dup6\n      and\n      tag_128\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5982:6021  totalAllocation * (timestamp - start()) */\n      tag_154\n      swap1\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5982:5997  totalAllocation */\n      dup6\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5982:6021  totalAllocation * (timestamp - start()) */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5981:6035  (totalAllocation * (timestamp - start())) / duration() */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/finance/VestingWallet.sol\":5974:6035  return (totalAllocation * (timestamp - start())) / duration() */\n      swap1\n      pop\n      jump(tag_86)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2572:2604   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2554:2605   */\n      mstore\n        /* \"#utility.yul\":2621:2639   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2614:2648   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2527:2545   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_159\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_138\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1399:1405  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1396  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1405  address(this).balance < amount */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      mload(0x40)\n      shl(0xe0, 0xcf479181)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1455:1476  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2833:2858   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2867:2901   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2806:2824   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      tag_138\n        /* \"#utility.yul\":2659:2907   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1507:1519  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1521:1544  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1557  recipient */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1562  recipient.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1570:1576  amount */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1581  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_179\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_178)\n    tag_179:\n      0x60\n      swap2\n      pop\n    tag_178:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1506:1581  (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1596:1603  success */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1591:1649  if (!success) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      tag_181\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1627:1637  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1626  _revert */\n      tag_182\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1361:1655  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_184:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_186)\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1357:1389   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1390   */\n      mstore\n        /* \"#utility.yul\":1312:1330   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_138\n        /* \"#utility.yul\":1193:1396   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:5993  function _revert(bytes memory returndata) private pure {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:5987  if (returndata.length > 0) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5904  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5888:5905  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5885  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5869:5879  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5886  add(returndata, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5858:5906  revert(add(returndata, 0x20), mload(returndata)) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:5987  if (returndata.length > 0) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5957:5976  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:185   */\n    tag_193:\n        /* \"#utility.yul\":81:101   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":141:159   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":130:160   */\n      dup2\n      and\n        /* \"#utility.yul\":120:161   */\n      dup2\n      eq\n        /* \"#utility.yul\":110:179   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":175:176   */\n      0x00\n        /* \"#utility.yul\":172:173   */\n      dup1\n        /* \"#utility.yul\":165:177   */\n      revert\n        /* \"#utility.yul\":110:179   */\n    tag_198:\n        /* \"#utility.yul\":14:185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":190:374   */\n    tag_25:\n        /* \"#utility.yul\":248:254   */\n      0x00\n        /* \"#utility.yul\":301:303   */\n      0x20\n        /* \"#utility.yul\":289:298   */\n      dup3\n        /* \"#utility.yul\":280:287   */\n      dup5\n        /* \"#utility.yul\":276:299   */\n      sub\n        /* \"#utility.yul\":272:304   */\n      slt\n        /* \"#utility.yul\":269:321   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":269:321   */\n    tag_200:\n        /* \"#utility.yul\":340:368   */\n      tag_106\n        /* \"#utility.yul\":358:367   */\n      dup3\n        /* \"#utility.yul\":340:368   */\n      tag_193\n      jump\t// in\n        /* \"#utility.yul\":561:734   */\n    tag_194:\n        /* \"#utility.yul\":629:649   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":678:709   */\n      dup2\n      and\n        /* \"#utility.yul\":668:710   */\n      dup2\n      eq\n        /* \"#utility.yul\":658:728   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":721:722   */\n      dup1\n        /* \"#utility.yul\":714:726   */\n      revert\n        /* \"#utility.yul\":739:925   */\n    tag_36:\n        /* \"#utility.yul\":798:804   */\n      0x00\n        /* \"#utility.yul\":851:853   */\n      0x20\n        /* \"#utility.yul\":839:848   */\n      dup3\n        /* \"#utility.yul\":830:837   */\n      dup5\n        /* \"#utility.yul\":826:849   */\n      sub\n        /* \"#utility.yul\":822:854   */\n      slt\n        /* \"#utility.yul\":819:871   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":867:868   */\n      0x00\n        /* \"#utility.yul\":864:865   */\n      dup1\n        /* \"#utility.yul\":857:869   */\n      revert\n        /* \"#utility.yul\":819:871   */\n    tag_206:\n        /* \"#utility.yul\":890:919   */\n      tag_106\n        /* \"#utility.yul\":909:918   */\n      dup3\n        /* \"#utility.yul\":890:919   */\n      tag_194\n      jump\t// in\n        /* \"#utility.yul\":930:1188   */\n    tag_44:\n        /* \"#utility.yul\":997:1003   */\n      0x00\n        /* \"#utility.yul\":1005:1011   */\n      dup1\n        /* \"#utility.yul\":1058:1060   */\n      0x40\n        /* \"#utility.yul\":1046:1055   */\n      dup4\n        /* \"#utility.yul\":1037:1044   */\n      dup6\n        /* \"#utility.yul\":1033:1056   */\n      sub\n        /* \"#utility.yul\":1029:1061   */\n      slt\n        /* \"#utility.yul\":1026:1078   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1074:1075   */\n      0x00\n        /* \"#utility.yul\":1071:1072   */\n      dup1\n        /* \"#utility.yul\":1064:1076   */\n      revert\n        /* \"#utility.yul\":1026:1078   */\n    tag_209:\n        /* \"#utility.yul\":1097:1126   */\n      tag_210\n        /* \"#utility.yul\":1116:1125   */\n      dup4\n        /* \"#utility.yul\":1097:1126   */\n      tag_194\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1087:1126   */\n      swap2\n      pop\n        /* \"#utility.yul\":1145:1182   */\n      tag_211\n        /* \"#utility.yul\":1178:1180   */\n      0x20\n        /* \"#utility.yul\":1167:1176   */\n      dup5\n        /* \"#utility.yul\":1163:1181   */\n      add\n        /* \"#utility.yul\":1145:1182   */\n      tag_193\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1135:1182   */\n      swap1\n      pop\n        /* \"#utility.yul\":930:1188   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1401:1528   */\n    tag_195:\n        /* \"#utility.yul\":1462:1472   */\n      0x4e487b71\n        /* \"#utility.yul\":1457:1460   */\n      0xe0\n        /* \"#utility.yul\":1453:1473   */\n      shl\n        /* \"#utility.yul\":1450:1451   */\n      0x00\n        /* \"#utility.yul\":1443:1474   */\n      mstore\n        /* \"#utility.yul\":1493:1497   */\n      0x11\n        /* \"#utility.yul\":1490:1491   */\n      0x04\n        /* \"#utility.yul\":1483:1498   */\n      mstore\n        /* \"#utility.yul\":1517:1521   */\n      0x24\n        /* \"#utility.yul\":1514:1515   */\n      0x00\n        /* \"#utility.yul\":1507:1522   */\n      revert\n        /* \"#utility.yul\":1533:1658   */\n    tag_89:\n        /* \"#utility.yul\":1598:1607   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1619:1629   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1616:1652   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1632:1650   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1663:1847   */\n    tag_112:\n        /* \"#utility.yul\":1733:1739   */\n      0x00\n        /* \"#utility.yul\":1786:1788   */\n      0x20\n        /* \"#utility.yul\":1774:1783   */\n      dup3\n        /* \"#utility.yul\":1765:1772   */\n      dup5\n        /* \"#utility.yul\":1761:1784   */\n      sub\n        /* \"#utility.yul\":1757:1789   */\n      slt\n        /* \"#utility.yul\":1754:1806   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":1802:1803   */\n      0x00\n        /* \"#utility.yul\":1799:1800   */\n      dup1\n        /* \"#utility.yul\":1792:1804   */\n      revert\n        /* \"#utility.yul\":1754:1806   */\n    tag_218:\n      pop\n        /* \"#utility.yul\":1825:1841   */\n      mload\n      swap2\n        /* \"#utility.yul\":1663:1847   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:1980   */\n    tag_128:\n        /* \"#utility.yul\":1919:1928   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1940:1951   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1937:1974   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1954:1972   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":1985:2153   */\n    tag_155:\n        /* \"#utility.yul\":2058:2067   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2089:2098   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2106:2121   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2100:2122   */\n      dup5\n      eq\n        /* \"#utility.yul\":2086:2123   */\n      or\n        /* \"#utility.yul\":2076:2147   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2127:2145   */\n      tag_86\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":2158:2375   */\n    tag_157:\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2224:2225   */\n      dup3\n        /* \"#utility.yul\":2214:2346   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2268:2278   */\n      0x4e487b71\n        /* \"#utility.yul\":2263:2266   */\n      0xe0\n        /* \"#utility.yul\":2259:2279   */\n      shl\n        /* \"#utility.yul\":2256:2257   */\n      0x00\n        /* \"#utility.yul\":2249:2280   */\n      mstore\n        /* \"#utility.yul\":2303:2307   */\n      0x12\n        /* \"#utility.yul\":2300:2301   */\n      0x04\n        /* \"#utility.yul\":2293:2308   */\n      mstore\n        /* \"#utility.yul\":2331:2335   */\n      0x24\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2321:2336   */\n      revert\n        /* \"#utility.yul\":2214:2346   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":2360:2369   */\n      div\n      swap1\n        /* \"#utility.yul\":2158:2375   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206a6644044ca9fedf10333634718e8bde73f7598c8f1920194b6987e8ca89463564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1434": {
									"entryPoint": null,
									"id": 1434,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 133,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint64_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:860:12",
										"nodeType": "YulBlock",
										"src": "0:860:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "73:116:12",
													"nodeType": "YulBlock",
													"src": "73:116:12",
													"statements": [
														{
															"nativeSrc": "83:22:12",
															"nodeType": "YulAssignment",
															"src": "83:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "98:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "98:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "92:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:12"
																},
																"nativeSrc": "92:13:12",
																"nodeType": "YulFunctionCall",
																"src": "92:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "83:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "83:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "167:16:12",
																"nodeType": "YulBlock",
																"src": "167:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "176:1:12",
																					"nodeType": "YulLiteral",
																					"src": "176:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "179:1:12",
																					"nodeType": "YulLiteral",
																					"src": "179:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "169:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:12"
																			},
																			"nativeSrc": "169:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:12"
																		},
																		"nativeSrc": "169:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "127:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "127:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "138:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "138:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "153:2:12",
																										"nodeType": "YulLiteral",
																										"src": "153:2:12",
																										"type": "",
																										"value": "64"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "157:1:12",
																										"nodeType": "YulLiteral",
																										"src": "157:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "149:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "149:3:12"
																								},
																								"nativeSrc": "149:10:12",
																								"nodeType": "YulFunctionCall",
																								"src": "149:10:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "161:1:12",
																								"nodeType": "YulLiteral",
																								"src": "161:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "145:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "145:3:12"
																						},
																						"nativeSrc": "145:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "145:18:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "134:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "134:3:12"
																				},
																				"nativeSrc": "134:30:12",
																				"nodeType": "YulFunctionCall",
																				"src": "134:30:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "124:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "124:2:12"
																		},
																		"nativeSrc": "124:41:12",
																		"nodeType": "YulFunctionCall",
																		"src": "124:41:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "117:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "117:6:12"
																},
																"nativeSrc": "117:49:12",
																"nodeType": "YulFunctionCall",
																"src": "117:49:12"
															},
															"nativeSrc": "114:69:12",
															"nodeType": "YulIf",
															"src": "114:69:12"
														}
													]
												},
												"name": "abi_decode_uint64_fromMemory",
												"nativeSrc": "14:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "52:6:12",
														"nodeType": "YulTypedName",
														"src": "52:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "63:5:12",
														"nodeType": "YulTypedName",
														"src": "63:5:12",
														"type": ""
													}
												],
												"src": "14:175:12"
											},
											{
												"body": {
													"nativeSrc": "307:343:12",
													"nodeType": "YulBlock",
													"src": "307:343:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "353:16:12",
																"nodeType": "YulBlock",
																"src": "353:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "362:1:12",
																					"nodeType": "YulLiteral",
																					"src": "362:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "365:1:12",
																					"nodeType": "YulLiteral",
																					"src": "365:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "355:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "355:6:12"
																			},
																			"nativeSrc": "355:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "355:12:12"
																		},
																		"nativeSrc": "355:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "355:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "328:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "328:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "337:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "337:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "324:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "324:3:12"
																		},
																		"nativeSrc": "324:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "324:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "349:2:12",
																		"nodeType": "YulLiteral",
																		"src": "349:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "320:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "320:3:12"
																},
																"nativeSrc": "320:32:12",
																"nodeType": "YulFunctionCall",
																"src": "320:32:12"
															},
															"nativeSrc": "317:52:12",
															"nodeType": "YulIf",
															"src": "317:52:12"
														},
														{
															"nativeSrc": "378:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "378:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "397:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "397:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "391:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "391:5:12"
																},
																"nativeSrc": "391:16:12",
																"nodeType": "YulFunctionCall",
																"src": "391:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "382:5:12",
																	"nodeType": "YulTypedName",
																	"src": "382:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "470:16:12",
																"nodeType": "YulBlock",
																"src": "470:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "479:1:12",
																					"nodeType": "YulLiteral",
																					"src": "479:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "482:1:12",
																					"nodeType": "YulLiteral",
																					"src": "482:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "472:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "472:6:12"
																			},
																			"nativeSrc": "472:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "472:12:12"
																		},
																		"nativeSrc": "472:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "472:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "429:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "429:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "440:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "440:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "455:3:12",
																										"nodeType": "YulLiteral",
																										"src": "455:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "460:1:12",
																										"nodeType": "YulLiteral",
																										"src": "460:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "451:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "451:3:12"
																								},
																								"nativeSrc": "451:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "451:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "464:1:12",
																								"nodeType": "YulLiteral",
																								"src": "464:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "447:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "447:3:12"
																						},
																						"nativeSrc": "447:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "447:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "436:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "436:3:12"
																				},
																				"nativeSrc": "436:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "436:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "426:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "426:2:12"
																		},
																		"nativeSrc": "426:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "426:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "419:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:12"
																},
																"nativeSrc": "419:50:12",
																"nodeType": "YulFunctionCall",
																"src": "419:50:12"
															},
															"nativeSrc": "416:70:12",
															"nodeType": "YulIf",
															"src": "416:70:12"
														},
														{
															"nativeSrc": "495:15:12",
															"nodeType": "YulAssignment",
															"src": "495:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "505:5:12",
																"nodeType": "YulIdentifier",
																"src": "505:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "495:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:12"
																}
															]
														},
														{
															"nativeSrc": "519:58:12",
															"nodeType": "YulAssignment",
															"src": "519:58:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "573:2:12",
																				"nodeType": "YulLiteral",
																				"src": "573:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:12"
																		},
																		"nativeSrc": "558:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "558:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nativeSrc": "529:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "529:28:12"
																},
																"nativeSrc": "529:48:12",
																"nodeType": "YulFunctionCall",
																"src": "529:48:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "519:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:12"
																}
															]
														},
														{
															"nativeSrc": "586:58:12",
															"nodeType": "YulAssignment",
															"src": "586:58:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "629:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "629:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "640:2:12",
																				"nodeType": "YulLiteral",
																				"src": "640:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "625:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "625:3:12"
																		},
																		"nativeSrc": "625:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "625:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64_fromMemory",
																	"nativeSrc": "596:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "596:28:12"
																},
																"nativeSrc": "596:48:12",
																"nodeType": "YulFunctionCall",
																"src": "596:48:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "586:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory",
												"nativeSrc": "194:456:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "257:9:12",
														"nodeType": "YulTypedName",
														"src": "257:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "268:7:12",
														"nodeType": "YulTypedName",
														"src": "268:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "280:6:12",
														"nodeType": "YulTypedName",
														"src": "280:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "288:6:12",
														"nodeType": "YulTypedName",
														"src": "288:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "296:6:12",
														"nodeType": "YulTypedName",
														"src": "296:6:12",
														"type": ""
													}
												],
												"src": "194:456:12"
											},
											{
												"body": {
													"nativeSrc": "756:102:12",
													"nodeType": "YulBlock",
													"src": "756:102:12",
													"statements": [
														{
															"nativeSrc": "766:26:12",
															"nodeType": "YulAssignment",
															"src": "766:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "778:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "778:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "789:2:12",
																		"nodeType": "YulLiteral",
																		"src": "789:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "774:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "774:3:12"
																},
																"nativeSrc": "774:18:12",
																"nodeType": "YulFunctionCall",
																"src": "774:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "766:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "766:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "808:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "808:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "823:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "839:3:12",
																								"nodeType": "YulLiteral",
																								"src": "839:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "844:1:12",
																								"nodeType": "YulLiteral",
																								"src": "844:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "835:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "835:3:12"
																						},
																						"nativeSrc": "835:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "835:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "848:1:12",
																						"nodeType": "YulLiteral",
																						"src": "848:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "831:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "831:3:12"
																				},
																				"nativeSrc": "831:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "831:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "819:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:12"
																		},
																		"nativeSrc": "819:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "819:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "801:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "801:6:12"
																},
																"nativeSrc": "801:51:12",
																"nodeType": "YulFunctionCall",
																"src": "801:51:12"
															},
															"nativeSrc": "801:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "801:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "655:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "725:9:12",
														"nodeType": "YulTypedName",
														"src": "725:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "736:6:12",
														"nodeType": "YulTypedName",
														"src": "736:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "747:4:12",
														"nodeType": "YulTypedName",
														"src": "747:4:12",
														"type": ""
													}
												],
												"src": "655:203:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_uint64_fromMemory(add(headStart, 32))\n        value2 := abi_decode_uint64_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051610ac7380380610ac783398101604081905261002e916100ef565b828282826001600160a01b03811661005f57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006881610085565b506001600160401b039182166080521660a0525061013c92505050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160401b03811681146100ea575f80fd5b919050565b5f805f60608486031215610101575f80fd5b83516001600160a01b0381168114610117575f80fd5b9250610125602085016100d4565b9150610133604085016100d4565b90509250925092565b60805160a05161095c61016b5f395f8181610127015281816104d401526105b201525f6104ae015261095c5ff3fe6080604052600436106100dc575f3560e01c8063961325211161007c578063be9a655511610057578063be9a65551461024a578063efbe1c1c1461025e578063f2fde38b14610272578063fbccedae14610291575f80fd5b806396132521146101e35780639852595c146101f7578063a3f8eace1461022b575f80fd5b8063715018a6116100b7578063715018a614610176578063810ec23b1461018a57806386d1a69f146101a95780638da5cb5b146101bd575f80fd5b80630a17b06b146100e75780630fb5a6b4146101195780631916558714610155575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b50610106610101366004610826565b6102a5565b6040519081526020015b60405180910390f35b348015610124575f80fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610106565b348015610160575f80fd5b5061017461016f366004610855565b6102c8565b005b348015610181575f80fd5b50610174610360565b348015610195575f80fd5b506101066101a436600461086e565b610373565b3480156101b4575f80fd5b50610174610406565b3480156101c8575f80fd5b505f546040516001600160a01b039091168152602001610110565b3480156101ee575f80fd5b50600154610106565b348015610202575f80fd5b50610106610211366004610855565b6001600160a01b03165f9081526002602052604090205490565b348015610236575f80fd5b50610106610245366004610855565b610477565b348015610255575f80fd5b506101066104a3565b348015610269575f80fd5b506101066104d1565b34801561027d575f80fd5b5061017461028c366004610855565b610514565b34801561029c575f80fd5b50610106610553565b5f6102c26102b260015490565b6102bc90476108b3565b83610570565b92915050565b5f6102d282610477565b6001600160a01b0383165f908152600260205260408120805492935083929091906102fe9084906108b3565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a261035c826103565f546001600160a01b031690565b83610612565b5050565b610368610669565b6103715f610695565b565b6001600160a01b0382165f908152600260205260408120546103ff906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103d1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f591906108c6565b6102bc91906108b3565b9392505050565b5f61040f610553565b90508060015f82825461042291906108b3565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161047461046e5f546001600160a01b031690565b826106e4565b50565b6001600160a01b0381165f908152600260205260408120546104998342610373565b6102c291906108dd565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b5f7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105056104a3565b61050f91906108b3565b905090565b61051c610669565b6001600160a01b03811661054a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61047481610695565b5f61055d60015490565b610566426102a5565b61050f91906108dd565b5f6105796104a3565b8267ffffffffffffffff16101561059157505f6102c2565b6105996104d1565b8267ffffffffffffffff16106105b05750816102c2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105e36104a3565b6105f79067ffffffffffffffff85166108dd565b61060190856108f0565b61060b9190610907565b90506102c2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610664908490610776565b505050565b5f546001600160a01b031633146103715760405163118cdaa760e01b8152336004820152602401610541565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8047101561070e5760405163cf47918160e01b815247600482015260248101829052604401610541565b5f80836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610758576040519150601f19603f3d011682016040523d82523d5f602084013e61075d565b606091505b50915091508161077057610770816107e2565b50505050565b5f8060205f8451602086015f885af180610795576040513d5f823e3d81fd5b50505f513d915081156107ac5780600114156107b9565b6001600160a01b0384163b155b1561077057604051635274afe760e01b81526001600160a01b0385166004820152602401610541565b8051156107f157805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b803567ffffffffffffffff81168114610821575f80fd5b919050565b5f60208284031215610836575f80fd5b6103ff8261080a565b80356001600160a01b0381168114610821575f80fd5b5f60208284031215610865575f80fd5b6103ff8261083f565b5f806040838503121561087f575f80fd5b6108888361083f565b91506108966020840161080a565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102c2576102c261089f565b5f602082840312156108d6575f80fd5b5051919050565b818103818111156102c2576102c261089f565b80820281158282048414176102c2576102c261089f565b5f8261092157634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212206a6644044ca9fedf10333634718e8bde73f7598c8f1920194b6987e8ca89463564736f6c63430008180033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAC7 CODESIZE SUB DUP1 PUSH2 0xAC7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEF JUMP JUMPDEST DUP3 DUP3 DUP3 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68 DUP2 PUSH2 0x85 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE POP PUSH2 0x13C SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x117 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x125 PUSH1 0x20 DUP6 ADD PUSH2 0xD4 JUMP JUMPDEST SWAP2 POP PUSH2 0x133 PUSH1 0x40 DUP6 ADD PUSH2 0xD4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x95C PUSH2 0x16B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x127 ADD MSTORE DUP2 DUP2 PUSH2 0x4D4 ADD MSTORE PUSH2 0x5B2 ADD MSTORE PUSH0 PUSH2 0x4AE ADD MSTORE PUSH2 0x95C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xE3 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x360 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x553 JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x2B2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BC SWAP1 SELFBALANCE PUSH2 0x8B3 JUMP JUMPDEST DUP4 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2 DUP3 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x35C DUP3 PUSH2 0x356 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x612 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x371 PUSH0 PUSH2 0x695 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x40F PUSH2 0x553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x474 PUSH2 0x46E PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x499 DUP4 TIMESTAMP PUSH2 0x373 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x505 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x695 JUMP JUMPDEST PUSH0 PUSH2 0x55D PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x566 TIMESTAMP PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH2 0x579 PUSH2 0x4A3 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x591 JUMPI POP PUSH0 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x599 PUSH2 0x4D1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x5B0 JUMPI POP DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5E3 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5F7 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x664 SWAP1 DUP5 SWAP1 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7AC JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x7F1 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x80A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP4 PUSH2 0x83F JUMP JUMPDEST SWAP2 POP PUSH2 0x896 PUSH1 0x20 DUP5 ADD PUSH2 0x80A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x921 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x6644044CA9FEDF10333634 PUSH18 0x8E8BDE73F7598C8F1920194B6987E8CA8946 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "124:307:11:-:0;;;238:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;373:18;393:14;409:15;373:18;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;801:51:12;774:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;2644:23:1;;::::1;;::::0;2677:27:::1;;::::0;-1:-1:-1;124:307:11;;-1:-1:-1;;;124:307:11;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:175:12:-;92:13;;-1:-1:-1;;;;;134:30:12;;124:41;;114:69;;179:1;176;169:12;114:69;14:175;;;:::o;194:456::-;280:6;288;296;349:2;337:9;328:7;324:23;320:32;317:52;;;365:1;362;355:12;317:52;391:16;;-1:-1:-1;;;;;436:31:12;;426:42;;416:70;;482:1;479;472:12;416:70;505:5;-1:-1:-1;529:48:12;573:2;558:18;;529:48;:::i;:::-;519:58;;596:48;640:2;629:9;625:18;596:48;:::i;:::-;586:58;;194:456;;;;;:::o;655:203::-;124:307:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1048": {
									"entryPoint": 1910,
									"id": 1048,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1641,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1362": {
									"entryPoint": null,
									"id": 1362,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1349": {
									"entryPoint": 2018,
									"id": 1349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1685,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_vestingSchedule_457": {
									"entryPoint": 1392,
									"id": 457,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@duration_229": {
									"entryPoint": null,
									"id": 229,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@end_242": {
									"entryPoint": 1233,
									"id": 242,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_282": {
									"entryPoint": 1363,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_304": {
									"entryPoint": 1143,
									"id": 304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@release_333": {
									"entryPoint": 1030,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@release_368": {
									"entryPoint": 712,
									"id": 368,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@released_251": {
									"entryPoint": null,
									"id": 251,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@released_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 864,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_671": {
									"entryPoint": 1554,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendValue_1148": {
									"entryPoint": 1764,
									"id": 1148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@start_220": {
									"entryPoint": 1187,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1300,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vestedAmount_389": {
									"entryPoint": 677,
									"id": 389,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vestedAmount_417": {
									"entryPoint": 883,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint64": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3119:12",
										"nodeType": "YulBlock",
										"src": "0:3119:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "62:123:12",
													"nodeType": "YulBlock",
													"src": "62:123:12",
													"statements": [
														{
															"nativeSrc": "72:29:12",
															"nodeType": "YulAssignment",
															"src": "72:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "94:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "94:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "81:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "81:12:12"
																},
																"nativeSrc": "81:20:12",
																"nodeType": "YulFunctionCall",
																"src": "81:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "72:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "72:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "163:16:12",
																"nodeType": "YulBlock",
																"src": "163:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "172:1:12",
																					"nodeType": "YulLiteral",
																					"src": "172:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "175:1:12",
																					"nodeType": "YulLiteral",
																					"src": "175:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "165:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "165:6:12"
																			},
																			"nativeSrc": "165:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "165:12:12"
																		},
																		"nativeSrc": "165:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "165:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "123:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "123:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "134:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "134:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "141:18:12",
																						"nodeType": "YulLiteral",
																						"src": "141:18:12",
																						"type": "",
																						"value": "0xffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "130:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "130:3:12"
																				},
																				"nativeSrc": "130:30:12",
																				"nodeType": "YulFunctionCall",
																				"src": "130:30:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "120:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "120:2:12"
																		},
																		"nativeSrc": "120:41:12",
																		"nodeType": "YulFunctionCall",
																		"src": "120:41:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "113:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:12"
																},
																"nativeSrc": "113:49:12",
																"nodeType": "YulFunctionCall",
																"src": "113:49:12"
															},
															"nativeSrc": "110:69:12",
															"nodeType": "YulIf",
															"src": "110:69:12"
														}
													]
												},
												"name": "abi_decode_uint64",
												"nativeSrc": "14:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "41:6:12",
														"nodeType": "YulTypedName",
														"src": "41:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "52:5:12",
														"nodeType": "YulTypedName",
														"src": "52:5:12",
														"type": ""
													}
												],
												"src": "14:171:12"
											},
											{
												"body": {
													"nativeSrc": "259:115:12",
													"nodeType": "YulBlock",
													"src": "259:115:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "305:16:12",
																"nodeType": "YulBlock",
																"src": "305:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "314:1:12",
																					"nodeType": "YulLiteral",
																					"src": "314:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:12",
																					"nodeType": "YulLiteral",
																					"src": "317:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "307:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:12"
																			},
																			"nativeSrc": "307:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:12"
																		},
																		"nativeSrc": "307:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "280:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "280:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "289:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "289:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "276:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:12"
																		},
																		"nativeSrc": "276:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "276:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "301:2:12",
																		"nodeType": "YulLiteral",
																		"src": "301:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "272:3:12"
																},
																"nativeSrc": "272:32:12",
																"nodeType": "YulFunctionCall",
																"src": "272:32:12"
															},
															"nativeSrc": "269:52:12",
															"nodeType": "YulIf",
															"src": "269:52:12"
														},
														{
															"nativeSrc": "330:38:12",
															"nodeType": "YulAssignment",
															"src": "330:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "358:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "358:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "340:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "340:17:12"
																},
																"nativeSrc": "340:28:12",
																"nodeType": "YulFunctionCall",
																"src": "340:28:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "330:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64",
												"nativeSrc": "190:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "225:9:12",
														"nodeType": "YulTypedName",
														"src": "225:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "236:7:12",
														"nodeType": "YulTypedName",
														"src": "236:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "248:6:12",
														"nodeType": "YulTypedName",
														"src": "248:6:12",
														"type": ""
													}
												],
												"src": "190:184:12"
											},
											{
												"body": {
													"nativeSrc": "480:76:12",
													"nodeType": "YulBlock",
													"src": "480:76:12",
													"statements": [
														{
															"nativeSrc": "490:26:12",
															"nodeType": "YulAssignment",
															"src": "490:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "502:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "502:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "513:2:12",
																		"nodeType": "YulLiteral",
																		"src": "513:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "498:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:12"
																},
																"nativeSrc": "498:18:12",
																"nodeType": "YulFunctionCall",
																"src": "498:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "490:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "490:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "532:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "532:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "543:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "543:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "525:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:12"
																},
																"nativeSrc": "525:25:12",
																"nodeType": "YulFunctionCall",
																"src": "525:25:12"
															},
															"nativeSrc": "525:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "525:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "379:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "449:9:12",
														"nodeType": "YulTypedName",
														"src": "449:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "460:6:12",
														"nodeType": "YulTypedName",
														"src": "460:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "471:4:12",
														"nodeType": "YulTypedName",
														"src": "471:4:12",
														"type": ""
													}
												],
												"src": "379:177:12"
											},
											{
												"body": {
													"nativeSrc": "610:124:12",
													"nodeType": "YulBlock",
													"src": "610:124:12",
													"statements": [
														{
															"nativeSrc": "620:29:12",
															"nodeType": "YulAssignment",
															"src": "620:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "642:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "629:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:12"
																},
																"nativeSrc": "629:20:12",
																"nodeType": "YulFunctionCall",
																"src": "629:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "620:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "712:16:12",
																"nodeType": "YulBlock",
																"src": "712:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "721:1:12",
																					"nodeType": "YulLiteral",
																					"src": "721:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:12",
																					"nodeType": "YulLiteral",
																					"src": "724:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "714:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "714:6:12"
																			},
																			"nativeSrc": "714:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "714:12:12"
																		},
																		"nativeSrc": "714:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "714:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "671:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "671:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "682:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "682:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "697:3:12",
																										"nodeType": "YulLiteral",
																										"src": "697:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "702:1:12",
																										"nodeType": "YulLiteral",
																										"src": "702:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "693:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "693:3:12"
																								},
																								"nativeSrc": "693:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "693:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "706:1:12",
																								"nodeType": "YulLiteral",
																								"src": "706:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "689:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "689:3:12"
																						},
																						"nativeSrc": "689:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "689:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "678:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "678:3:12"
																				},
																				"nativeSrc": "678:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "678:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "668:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "668:2:12"
																		},
																		"nativeSrc": "668:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "668:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "661:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "661:6:12"
																},
																"nativeSrc": "661:50:12",
																"nodeType": "YulFunctionCall",
																"src": "661:50:12"
															},
															"nativeSrc": "658:70:12",
															"nodeType": "YulIf",
															"src": "658:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "561:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "589:6:12",
														"nodeType": "YulTypedName",
														"src": "589:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "600:5:12",
														"nodeType": "YulTypedName",
														"src": "600:5:12",
														"type": ""
													}
												],
												"src": "561:173:12"
											},
											{
												"body": {
													"nativeSrc": "809:116:12",
													"nodeType": "YulBlock",
													"src": "809:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "855:16:12",
																"nodeType": "YulBlock",
																"src": "855:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "864:1:12",
																					"nodeType": "YulLiteral",
																					"src": "864:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "867:1:12",
																					"nodeType": "YulLiteral",
																					"src": "867:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "857:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "857:6:12"
																			},
																			"nativeSrc": "857:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "857:12:12"
																		},
																		"nativeSrc": "857:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "857:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "830:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "830:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "839:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "839:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "826:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:12"
																		},
																		"nativeSrc": "826:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "826:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "851:2:12",
																		"nodeType": "YulLiteral",
																		"src": "851:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "822:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:12"
																},
																"nativeSrc": "822:32:12",
																"nodeType": "YulFunctionCall",
																"src": "822:32:12"
															},
															"nativeSrc": "819:52:12",
															"nodeType": "YulIf",
															"src": "819:52:12"
														},
														{
															"nativeSrc": "880:39:12",
															"nodeType": "YulAssignment",
															"src": "880:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "909:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "890:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "890:18:12"
																},
																"nativeSrc": "890:29:12",
																"nodeType": "YulFunctionCall",
																"src": "890:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "880:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "880:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "739:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "775:9:12",
														"nodeType": "YulTypedName",
														"src": "775:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "786:7:12",
														"nodeType": "YulTypedName",
														"src": "786:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "798:6:12",
														"nodeType": "YulTypedName",
														"src": "798:6:12",
														"type": ""
													}
												],
												"src": "739:186:12"
											},
											{
												"body": {
													"nativeSrc": "1016:172:12",
													"nodeType": "YulBlock",
													"src": "1016:172:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1062:16:12",
																"nodeType": "YulBlock",
																"src": "1062:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1071:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1071:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1074:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1064:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1064:6:12"
																			},
																			"nativeSrc": "1064:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1064:12:12"
																		},
																		"nativeSrc": "1064:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1064:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1046:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1033:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1033:3:12"
																		},
																		"nativeSrc": "1033:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1033:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1058:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1029:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1029:3:12"
																},
																"nativeSrc": "1029:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1029:32:12"
															},
															"nativeSrc": "1026:52:12",
															"nodeType": "YulIf",
															"src": "1026:52:12"
														},
														{
															"nativeSrc": "1087:39:12",
															"nodeType": "YulAssignment",
															"src": "1087:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1116:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1116:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1097:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1097:18:12"
																},
																"nativeSrc": "1097:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1097:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1087:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:12"
																}
															]
														},
														{
															"nativeSrc": "1135:47:12",
															"nodeType": "YulAssignment",
															"src": "1135:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1167:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1167:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1178:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1178:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:12"
																		},
																		"nativeSrc": "1163:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint64",
																	"nativeSrc": "1145:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1145:17:12"
																},
																"nativeSrc": "1145:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1145:37:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1135:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64",
												"nativeSrc": "930:258:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "974:9:12",
														"nodeType": "YulTypedName",
														"src": "974:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "985:7:12",
														"nodeType": "YulTypedName",
														"src": "985:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "997:6:12",
														"nodeType": "YulTypedName",
														"src": "997:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1005:6:12",
														"nodeType": "YulTypedName",
														"src": "1005:6:12",
														"type": ""
													}
												],
												"src": "930:258:12"
											},
											{
												"body": {
													"nativeSrc": "1294:102:12",
													"nodeType": "YulBlock",
													"src": "1294:102:12",
													"statements": [
														{
															"nativeSrc": "1304:26:12",
															"nodeType": "YulAssignment",
															"src": "1304:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1316:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1316:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1327:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1327:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1312:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:12"
																},
																"nativeSrc": "1312:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1312:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1304:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1304:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1346:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1346:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1361:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1377:3:12",
																								"nodeType": "YulLiteral",
																								"src": "1377:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1382:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1382:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1373:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1373:3:12"
																						},
																						"nativeSrc": "1373:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1373:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1386:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1386:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1369:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1369:3:12"
																				},
																				"nativeSrc": "1369:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1369:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1357:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:12"
																		},
																		"nativeSrc": "1357:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1357:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1339:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:12"
																},
																"nativeSrc": "1339:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1339:51:12"
															},
															"nativeSrc": "1339:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1339:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1193:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1263:9:12",
														"nodeType": "YulTypedName",
														"src": "1263:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1274:6:12",
														"nodeType": "YulTypedName",
														"src": "1274:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1285:4:12",
														"nodeType": "YulTypedName",
														"src": "1285:4:12",
														"type": ""
													}
												],
												"src": "1193:203:12"
											},
											{
												"body": {
													"nativeSrc": "1433:95:12",
													"nodeType": "YulBlock",
													"src": "1433:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1450:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1457:3:12",
																				"nodeType": "YulLiteral",
																				"src": "1457:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1462:10:12",
																				"nodeType": "YulLiteral",
																				"src": "1462:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1453:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1453:3:12"
																		},
																		"nativeSrc": "1453:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1453:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1443:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1443:6:12"
																},
																"nativeSrc": "1443:31:12",
																"nodeType": "YulFunctionCall",
																"src": "1443:31:12"
															},
															"nativeSrc": "1443:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "1443:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1490:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1490:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1493:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1493:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1483:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:12"
																},
																"nativeSrc": "1483:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1483:15:12"
															},
															"nativeSrc": "1483:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1483:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1514:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1514:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1517:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1517:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1507:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:12"
																},
																"nativeSrc": "1507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1507:15:12"
															},
															"nativeSrc": "1507:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1507:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1401:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1401:127:12"
											},
											{
												"body": {
													"nativeSrc": "1581:77:12",
													"nodeType": "YulBlock",
													"src": "1581:77:12",
													"statements": [
														{
															"nativeSrc": "1591:16:12",
															"nodeType": "YulAssignment",
															"src": "1591:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1602:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1602:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1605:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1605:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:12"
																},
																"nativeSrc": "1598:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1591:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1591:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1630:22:12",
																"nodeType": "YulBlock",
																"src": "1630:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1632:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1632:16:12"
																			},
																			"nativeSrc": "1632:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1632:18:12"
																		},
																		"nativeSrc": "1632:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1632:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1622:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1622:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1625:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1625:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1619:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1619:2:12"
																},
																"nativeSrc": "1619:10:12",
																"nodeType": "YulFunctionCall",
																"src": "1619:10:12"
															},
															"nativeSrc": "1616:36:12",
															"nodeType": "YulIf",
															"src": "1616:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1533:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1564:1:12",
														"nodeType": "YulTypedName",
														"src": "1564:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1567:1:12",
														"nodeType": "YulTypedName",
														"src": "1567:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1573:3:12",
														"nodeType": "YulTypedName",
														"src": "1573:3:12",
														"type": ""
													}
												],
												"src": "1533:125:12"
											},
											{
												"body": {
													"nativeSrc": "1744:103:12",
													"nodeType": "YulBlock",
													"src": "1744:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1790:16:12",
																"nodeType": "YulBlock",
																"src": "1790:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1799:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1802:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1802:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1792:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:12"
																			},
																			"nativeSrc": "1792:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1792:12:12"
																		},
																		"nativeSrc": "1792:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1765:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1765:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1774:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1774:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1761:3:12"
																		},
																		"nativeSrc": "1761:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1761:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1786:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1786:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1757:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:12"
																},
																"nativeSrc": "1757:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1757:32:12"
															},
															"nativeSrc": "1754:52:12",
															"nodeType": "YulIf",
															"src": "1754:52:12"
														},
														{
															"nativeSrc": "1815:26:12",
															"nodeType": "YulAssignment",
															"src": "1815:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1831:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1831:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1825:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1825:5:12"
																},
																"nativeSrc": "1825:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1825:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1815:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "1663:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1710:9:12",
														"nodeType": "YulTypedName",
														"src": "1710:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1721:7:12",
														"nodeType": "YulTypedName",
														"src": "1721:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1733:6:12",
														"nodeType": "YulTypedName",
														"src": "1733:6:12",
														"type": ""
													}
												],
												"src": "1663:184:12"
											},
											{
												"body": {
													"nativeSrc": "1901:79:12",
													"nodeType": "YulBlock",
													"src": "1901:79:12",
													"statements": [
														{
															"nativeSrc": "1911:17:12",
															"nodeType": "YulAssignment",
															"src": "1911:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1923:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1923:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1926:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1926:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1919:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1919:3:12"
																},
																"nativeSrc": "1919:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1919:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1911:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1911:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1952:22:12",
																"nodeType": "YulBlock",
																"src": "1952:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1954:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1954:16:12"
																			},
																			"nativeSrc": "1954:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1954:18:12"
																		},
																		"nativeSrc": "1954:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1954:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1943:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1943:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1949:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1949:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1940:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1940:2:12"
																},
																"nativeSrc": "1940:11:12",
																"nodeType": "YulFunctionCall",
																"src": "1940:11:12"
															},
															"nativeSrc": "1937:37:12",
															"nodeType": "YulIf",
															"src": "1937:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1852:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1883:1:12",
														"nodeType": "YulTypedName",
														"src": "1883:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1886:1:12",
														"nodeType": "YulTypedName",
														"src": "1886:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1892:4:12",
														"nodeType": "YulTypedName",
														"src": "1892:4:12",
														"type": ""
													}
												],
												"src": "1852:128:12"
											},
											{
												"body": {
													"nativeSrc": "2037:116:12",
													"nodeType": "YulBlock",
													"src": "2037:116:12",
													"statements": [
														{
															"nativeSrc": "2047:20:12",
															"nodeType": "YulAssignment",
															"src": "2047:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2062:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2062:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2065:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2065:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2058:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2058:3:12"
																},
																"nativeSrc": "2058:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2058:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2047:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2047:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2125:22:12",
																"nodeType": "YulBlock",
																"src": "2125:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2127:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2127:16:12"
																			},
																			"nativeSrc": "2127:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2127:18:12"
																		},
																		"nativeSrc": "2127:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2127:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2096:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "2096:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2089:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2089:6:12"
																				},
																				"nativeSrc": "2089:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2089:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2103:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "2103:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2110:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "2110:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2119:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "2119:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2106:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2106:3:12"
																						},
																						"nativeSrc": "2106:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2106:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2100:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2100:2:12"
																				},
																				"nativeSrc": "2100:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2100:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2086:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2086:2:12"
																		},
																		"nativeSrc": "2086:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2086:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2079:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2079:6:12"
																},
																"nativeSrc": "2079:45:12",
																"nodeType": "YulFunctionCall",
																"src": "2079:45:12"
															},
															"nativeSrc": "2076:71:12",
															"nodeType": "YulIf",
															"src": "2076:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1985:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2016:1:12",
														"nodeType": "YulTypedName",
														"src": "2016:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2019:1:12",
														"nodeType": "YulTypedName",
														"src": "2019:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2025:7:12",
														"nodeType": "YulTypedName",
														"src": "2025:7:12",
														"type": ""
													}
												],
												"src": "1985:168:12"
											},
											{
												"body": {
													"nativeSrc": "2204:171:12",
													"nodeType": "YulBlock",
													"src": "2204:171:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2235:111:12",
																"nodeType": "YulBlock",
																"src": "2235:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2256:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2256:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2263:3:12",
																							"nodeType": "YulLiteral",
																							"src": "2263:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2268:10:12",
																							"nodeType": "YulLiteral",
																							"src": "2268:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2259:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2259:3:12"
																					},
																					"nativeSrc": "2259:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2259:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2249:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2249:6:12"
																			},
																			"nativeSrc": "2249:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2249:31:12"
																		},
																		"nativeSrc": "2249:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2249:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2300:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2300:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2303:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2303:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2293:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:12"
																			},
																			"nativeSrc": "2293:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2293:15:12"
																		},
																		"nativeSrc": "2293:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2293:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2328:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2331:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2331:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2321:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2321:6:12"
																			},
																			"nativeSrc": "2321:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2321:15:12"
																		},
																		"nativeSrc": "2321:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2321:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2224:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2224:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2217:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:12"
																},
																"nativeSrc": "2217:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2217:9:12"
															},
															"nativeSrc": "2214:132:12",
															"nodeType": "YulIf",
															"src": "2214:132:12"
														},
														{
															"nativeSrc": "2355:14:12",
															"nodeType": "YulAssignment",
															"src": "2355:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2364:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2364:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2367:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2367:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2360:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2360:3:12"
																},
																"nativeSrc": "2360:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2360:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2355:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "2355:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2158:217:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2189:1:12",
														"nodeType": "YulTypedName",
														"src": "2189:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2192:1:12",
														"nodeType": "YulTypedName",
														"src": "2192:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2198:1:12",
														"nodeType": "YulTypedName",
														"src": "2198:1:12",
														"type": ""
													}
												],
												"src": "2158:217:12"
											},
											{
												"body": {
													"nativeSrc": "2509:145:12",
													"nodeType": "YulBlock",
													"src": "2509:145:12",
													"statements": [
														{
															"nativeSrc": "2519:26:12",
															"nodeType": "YulAssignment",
															"src": "2519:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2531:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2531:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2542:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2542:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2527:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:12"
																},
																"nativeSrc": "2527:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2527:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2519:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2519:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2561:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2561:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2576:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2576:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2592:3:12",
																								"nodeType": "YulLiteral",
																								"src": "2592:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2597:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2597:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2588:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2588:3:12"
																						},
																						"nativeSrc": "2588:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2588:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2601:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2601:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2584:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2584:3:12"
																				},
																				"nativeSrc": "2584:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2572:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:12"
																		},
																		"nativeSrc": "2572:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2554:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:12"
																},
																"nativeSrc": "2554:51:12",
																"nodeType": "YulFunctionCall",
																"src": "2554:51:12"
															},
															"nativeSrc": "2554:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "2554:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2625:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2625:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2636:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2636:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2621:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2621:3:12"
																		},
																		"nativeSrc": "2621:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2621:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2641:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2641:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2614:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:12"
																},
																"nativeSrc": "2614:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2614:34:12"
															},
															"nativeSrc": "2614:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2614:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2380:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2470:9:12",
														"nodeType": "YulTypedName",
														"src": "2470:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2481:6:12",
														"nodeType": "YulTypedName",
														"src": "2481:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2489:6:12",
														"nodeType": "YulTypedName",
														"src": "2489:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2500:4:12",
														"nodeType": "YulTypedName",
														"src": "2500:4:12",
														"type": ""
													}
												],
												"src": "2380:274:12"
											},
											{
												"body": {
													"nativeSrc": "2788:119:12",
													"nodeType": "YulBlock",
													"src": "2788:119:12",
													"statements": [
														{
															"nativeSrc": "2798:26:12",
															"nodeType": "YulAssignment",
															"src": "2798:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2810:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2810:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2821:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2821:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2806:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:12"
																},
																"nativeSrc": "2806:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2806:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2798:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2798:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2840:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2840:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2851:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2851:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2833:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:12"
																},
																"nativeSrc": "2833:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2833:25:12"
															},
															"nativeSrc": "2833:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "2833:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2878:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2889:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2889:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2874:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:12"
																		},
																		"nativeSrc": "2874:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2874:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2894:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2894:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2867:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:12"
																},
																"nativeSrc": "2867:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2867:34:12"
															},
															"nativeSrc": "2867:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2867:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2659:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2749:9:12",
														"nodeType": "YulTypedName",
														"src": "2749:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2760:6:12",
														"nodeType": "YulTypedName",
														"src": "2760:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2768:6:12",
														"nodeType": "YulTypedName",
														"src": "2768:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2779:4:12",
														"nodeType": "YulTypedName",
														"src": "2779:4:12",
														"type": ""
													}
												],
												"src": "2659:248:12"
											},
											{
												"body": {
													"nativeSrc": "3103:14:12",
													"nodeType": "YulBlock",
													"src": "3103:14:12",
													"statements": [
														{
															"nativeSrc": "3105:10:12",
															"nodeType": "YulAssignment",
															"src": "3105:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "3112:3:12",
																"nodeType": "YulIdentifier",
																"src": "3112:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3105:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3105:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2912:205:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3087:3:12",
														"nodeType": "YulTypedName",
														"src": "3087:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3095:3:12",
														"nodeType": "YulTypedName",
														"src": "3095:3:12",
														"type": ""
													}
												],
												"src": "2912:205:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"182": [
									{
										"length": 32,
										"start": 1198
									}
								],
								"184": [
									{
										"length": 32,
										"start": 295
									},
									{
										"length": 32,
										"start": 1236
									},
									{
										"length": 32,
										"start": 1458
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100dc575f3560e01c8063961325211161007c578063be9a655511610057578063be9a65551461024a578063efbe1c1c1461025e578063f2fde38b14610272578063fbccedae14610291575f80fd5b806396132521146101e35780639852595c146101f7578063a3f8eace1461022b575f80fd5b8063715018a6116100b7578063715018a614610176578063810ec23b1461018a57806386d1a69f146101a95780638da5cb5b146101bd575f80fd5b80630a17b06b146100e75780630fb5a6b4146101195780631916558714610155575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b50610106610101366004610826565b6102a5565b6040519081526020015b60405180910390f35b348015610124575f80fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610106565b348015610160575f80fd5b5061017461016f366004610855565b6102c8565b005b348015610181575f80fd5b50610174610360565b348015610195575f80fd5b506101066101a436600461086e565b610373565b3480156101b4575f80fd5b50610174610406565b3480156101c8575f80fd5b505f546040516001600160a01b039091168152602001610110565b3480156101ee575f80fd5b50600154610106565b348015610202575f80fd5b50610106610211366004610855565b6001600160a01b03165f9081526002602052604090205490565b348015610236575f80fd5b50610106610245366004610855565b610477565b348015610255575f80fd5b506101066104a3565b348015610269575f80fd5b506101066104d1565b34801561027d575f80fd5b5061017461028c366004610855565b610514565b34801561029c575f80fd5b50610106610553565b5f6102c26102b260015490565b6102bc90476108b3565b83610570565b92915050565b5f6102d282610477565b6001600160a01b0383165f908152600260205260408120805492935083929091906102fe9084906108b3565b90915550506040518181526001600160a01b038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a261035c826103565f546001600160a01b031690565b83610612565b5050565b610368610669565b6103715f610695565b565b6001600160a01b0382165f908152600260205260408120546103ff906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103d1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f591906108c6565b6102bc91906108b3565b9392505050565b5f61040f610553565b90508060015f82825461042291906108b3565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161047461046e5f546001600160a01b031690565b826106e4565b50565b6001600160a01b0381165f908152600260205260408120546104998342610373565b6102c291906108dd565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b5f7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105056104a3565b61050f91906108b3565b905090565b61051c610669565b6001600160a01b03811661054a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61047481610695565b5f61055d60015490565b610566426102a5565b61050f91906108dd565b5f6105796104a3565b8267ffffffffffffffff16101561059157505f6102c2565b6105996104d1565b8267ffffffffffffffff16106105b05750816102c2565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166105e36104a3565b6105f79067ffffffffffffffff85166108dd565b61060190856108f0565b61060b9190610907565b90506102c2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610664908490610776565b505050565b5f546001600160a01b031633146103715760405163118cdaa760e01b8152336004820152602401610541565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8047101561070e5760405163cf47918160e01b815247600482015260248101829052604401610541565b5f80836001600160a01b0316836040515f6040518083038185875af1925050503d805f8114610758576040519150601f19603f3d011682016040523d82523d5f602084013e61075d565b606091505b50915091508161077057610770816107e2565b50505050565b5f8060205f8451602086015f885af180610795576040513d5f823e3d81fd5b50505f513d915081156107ac5780600114156107b9565b6001600160a01b0384163b155b1561077057604051635274afe760e01b81526001600160a01b0385166004820152602401610541565b8051156107f157805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b803567ffffffffffffffff81168114610821575f80fd5b919050565b5f60208284031215610836575f80fd5b6103ff8261080a565b80356001600160a01b0381168114610821575f80fd5b5f60208284031215610865575f80fd5b6103ff8261083f565b5f806040838503121561087f575f80fd5b6108888361083f565b91506108966020840161080a565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102c2576102c261089f565b5f602082840312156108d6575f80fd5b5051919050565b818103818111156102c2576102c261089f565b80820281158282048414176102c2576102c261089f565b5f8261092157634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212206a6644044ca9fedf10333634718e8bde73f7598c8f1920194b6987e8ca89463564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xE3 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x360 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x4D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x553 JUMP JUMPDEST PUSH0 PUSH2 0x2C2 PUSH2 0x2B2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2BC SWAP1 SELFBALANCE PUSH2 0x8B3 JUMP JUMPDEST DUP4 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2 DUP3 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x35C DUP3 PUSH2 0x356 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x612 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x368 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x371 PUSH0 PUSH2 0x695 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x40F PUSH2 0x553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x474 PUSH2 0x46E PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x6E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x499 DUP4 TIMESTAMP PUSH2 0x373 JUMP JUMPDEST PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x505 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51C PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x695 JUMP JUMPDEST PUSH0 PUSH2 0x55D PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x566 TIMESTAMP PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH2 0x579 PUSH2 0x4A3 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x591 JUMPI POP PUSH0 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x599 PUSH2 0x4D1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x5B0 JUMPI POP DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x5E3 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x5F7 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP6 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x664 SWAP1 DUP5 SWAP1 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x770 JUMPI PUSH2 0x770 DUP2 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7AC JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x541 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x7F1 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x80A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x821 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3FF DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP4 PUSH2 0x83F JUMP JUMPDEST SWAP2 POP PUSH2 0x896 PUSH1 0x20 DUP5 ADD PUSH2 0x80A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2C2 JUMPI PUSH2 0x2C2 PUSH2 0x89F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x921 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x6644044CA9FEDF10333634 PUSH18 0x8E8BDE73F7598C8F1920194B6987E8CA8946 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "124:307:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4997:165:1;;;;;;;;;;-1:-1:-1;4997:165:1;;;;;:::i;:::-;;:::i;:::-;;;525:25:12;;;513:2;498:18;4997:165:1;;;;;;;;3044:91;;;;;;;;;;-1:-1:-1;3119:9:1;3112:16;;3044:91;;4611:246;;;;;;;;;;-1:-1:-1;4611:246:1;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;5303:202:1:-;;;;;;;;;;-1:-1:-1;5303:202:1;;;;;:::i;:::-;;:::i;4289:198::-;;;;;;;;;;;;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;1339:51:12;;1327:2;1312:18;1638:85:0;1193:203:12;3361:91:1;;;;;;;;;;-1:-1:-1;3436:9:1;;3361:91;;3519:116;;;;;;;;;;-1:-1:-1;3519:116:1;;;;;:::i;:::-;-1:-1:-1;;;;;3607:21:1;3581:7;3607:21;;;:14;:21;;;;;;;3519:116;3992:159;;;;;;;;;;-1:-1:-1;3992:159:1;;;;;:::i;:::-;;:::i;2892:85::-;;;;;;;;;;;;;:::i;3199:97::-;;;;;;;;;;;;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;3710:134:1:-;;;;;;;;;;;;;:::i;4997:165::-;5066:7;5092:63;5133:10;3436:9;;;3361:91;5133:10;5109:34;;:21;:34;:::i;:::-;5145:9;5092:16;:63::i;:::-;5085:70;4997:165;-1:-1:-1;;4997:165:1:o;4611:246::-;4668:14;4685:17;4696:5;4685:10;:17::i;:::-;-1:-1:-1;;;;;4712:21:1;;;;;;:14;:21;;;;;:31;;4668:34;;-1:-1:-1;4668:34:1;;4712:21;;;:31;;4668:34;;4712:31;:::i;:::-;;;;-1:-1:-1;;4758:28:1;;525:25:12;;;-1:-1:-1;;;;;4758:28:1;;;;;513:2:12;498:18;4758:28:1;;;;;;;4796:54;4826:5;4834:7;1684::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;4834:7:1;4843:6;4796:22;:54::i;:::-;4658:199;4611:246;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5303:202:1:-;-1:-1:-1;;;;;3607:21:1;;5387:7;3607:21;;;:14;:21;;;;;;5413:85;;5430:38;;-1:-1:-1;;;5430:38:1;;5462:4;5430:38;;;1339:51:12;-1:-1:-1;;;;;5430:23:1;;;;;1312:18:12;;5430:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;5413:85::-;5406:92;5303:202;-1:-1:-1;;;5303:202:1:o;4289:198::-;4333:14;4350:12;:10;:12::i;:::-;4333:29;;4385:6;4372:9;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;4406:21:1;;525:25:12;;;4406:21:1;;513:2:12;498:18;4406:21:1;;;;;;;4437:43;4463:7;1684::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;4463:7:1;4473:6;4437:17;:43::i;:::-;4323:164;4289:198::o;3992:159::-;-1:-1:-1;;;;;3607:21:1;;4056:7;3607:21;;;:14;:21;;;;;;4082:44;4095:5;4109:15;4082:12;:44::i;:::-;:62;;;;:::i;2892:85::-;2957:13;2964:6;2957:13;;2892:85::o;3199:97::-;3243:7;3119:9;3112:16;;3269:7;:5;:7::i;:::-;:20;;;;:::i;:::-;3262:27;;3199:97;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1339:51:12::0;1312:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;3710:134:1:-:0;3761:7;3827:10;3436:9;;;3361:91;3827:10;3787:37;3807:15;3787:12;:37::i;:::-;:50;;;;:::i;5700:352::-;5800:7;5835;:5;:7::i;:::-;5823:9;:19;;;5819:227;;;-1:-1:-1;5865:1:1;5858:8;;5819:227;5900:5;:3;:5::i;:::-;5887:9;:18;;;5883:163;;-1:-1:-1;5928:15:1;5921:22;;5883:163;3119:9;3112:16;;6013:7;:5;:7::i;:::-;6001:19;;;;;;:::i;:::-;5982:39;;:15;:39;:::i;:::-;5981:54;;;;:::i;:::-;5974:61;;;;1219:160:6;1328:43;;;-1:-1:-1;;;;;2572:32:12;;1328:43:6;;;2554:51:12;2621:18;;;;2614:34;;;1328:43:6;;;;;;;;;;2527:18:12;;;;1328:43:6;;;;;;;;-1:-1:-1;;;;;1328:43:6;-1:-1:-1;;;1328:43:6;;;1301:71;;1321:5;;1301:19;:71::i;:::-;1219:160;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;1339:51:12;1312:18;;1901:40:0;1193:203:12;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1290:365:7:-;1399:6;1375:21;:30;1371:125;;;1428:57;;-1:-1:-1;;;1428:57:7;;1455:21;1428:57;;;2833:25:12;2874:18;;;2867:34;;;2806:18;;1428:57:7;2659:248:12;1371:125:7;1507:12;1521:23;1548:9;-1:-1:-1;;;;;1548:14:7;1570:6;1548:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:75;;;;1596:7;1591:58;;1619:19;1627:10;1619:7;:19::i;:::-;1361:294;;1290:365;;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:6;8910:8;8866:16;;-1:-1:-1;8942:15:6;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:6;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:6;;-1:-1:-1;;;;;1357:32:12;;9033:40:6;;;1339:51:12;1312:18;;9033:40:6;1193:203:12;5559:434:7;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:7;;;;;;;;;;;14:171:12;81:20;;141:18;130:30;;120:41;;110:69;;175:1;172;165:12;110:69;14:171;;;:::o;190:184::-;248:6;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;340:28;358:9;340:28;:::i;561:173::-;629:20;;-1:-1:-1;;;;;678:31:12;;668:42;;658:70;;724:1;721;714:12;739:186;798:6;851:2;839:9;830:7;826:23;822:32;819:52;;;867:1;864;857:12;819:52;890:29;909:9;890:29;:::i;930:258::-;997:6;1005;1058:2;1046:9;1037:7;1033:23;1029:32;1026:52;;;1074:1;1071;1064:12;1026:52;1097:29;1116:9;1097:29;:::i;:::-;1087:39;;1145:37;1178:2;1167:9;1163:18;1145:37;:::i;:::-;1135:47;;930:258;;;;;:::o;1401:127::-;1462:10;1457:3;1453:20;1450:1;1443:31;1493:4;1490:1;1483:15;1517:4;1514:1;1507:15;1533:125;1598:9;;;1619:10;;;1616:36;;;1632:18;;:::i;1663:184::-;1733:6;1786:2;1774:9;1765:7;1761:23;1757:32;1754:52;;;1802:1;1799;1792:12;1754:52;-1:-1:-1;1825:16:12;;1663:184;-1:-1:-1;1663:184:12:o;1852:128::-;1919:9;;;1940:11;;;1937:37;;;1954:18;;:::i;1985:168::-;2058:9;;;2089;;2106:15;;;2100:22;;2086:37;2076:71;;2127:18;;:::i;2158:217::-;2198:1;2224;2214:132;;2268:10;2263:3;2259:20;2256:1;2249:31;2303:4;2300:1;2293:15;2331:4;2328:1;2321:15;2214:132;-1:-1:-1;2360:9:12;;2158:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "479200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"duration()": "infinite",
								"end()": "infinite",
								"owner()": "2388",
								"releasable()": "infinite",
								"releasable(address)": "infinite",
								"release()": "infinite",
								"release(address)": "infinite",
								"released()": "2303",
								"released(address)": "2568",
								"renounceOwnership()": "infinite",
								"start()": "infinite",
								"transferOwnership(address)": "28395",
								"vestedAmount(address,uint64)": "infinite",
								"vestedAmount(uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 238,
									"end": 428,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 428,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 238,
									"end": 428,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 238,
									"end": 428,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 238,
									"end": 428,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 238,
									"end": 428,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 238,
									"end": 428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 238,
									"end": 428,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 238,
									"end": 428,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 373,
									"end": 391,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 393,
									"end": 407,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 409,
									"end": 424,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 373,
									"end": 391,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 801,
									"end": 852,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 774,
									"end": 792,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 774,
									"end": 792,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2644,
									"end": 2667,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2644,
									"end": 2667,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2644,
									"end": 2667,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2644,
									"end": 2667,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2644,
									"end": 2667,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2704,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2677,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 124,
									"end": 431,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 189,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 189,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 92,
									"end": 105,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 92,
									"end": 105,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 134,
									"end": 164,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 134,
									"end": 164,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 124,
									"end": 165,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 124,
									"end": 165,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 114,
									"end": 183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 179,
									"end": 180,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 177,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 169,
									"end": 181,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 114,
									"end": 183,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 114,
									"end": 183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14,
									"end": 189,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14,
									"end": 189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 194,
									"end": 650,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 280,
									"end": 286,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 294,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 296,
									"end": 302,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 351,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 337,
									"end": 346,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 328,
									"end": 335,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 324,
									"end": 347,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 320,
									"end": 352,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 317,
									"end": 369,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 317,
									"end": 369,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 365,
									"end": 366,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 363,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 355,
									"end": 367,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 317,
									"end": 369,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 317,
									"end": 369,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 391,
									"end": 407,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 391,
									"end": 407,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 436,
									"end": 467,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 436,
									"end": 467,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 426,
									"end": 468,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 426,
									"end": 468,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 416,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 482,
									"end": 483,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 480,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 472,
									"end": 484,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 416,
									"end": 486,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 416,
									"end": 486,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 505,
									"end": 510,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 558,
									"end": 576,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 558,
									"end": 576,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 529,
									"end": 577,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 529,
									"end": 577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 529,
									"end": 577,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 529,
									"end": 577,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 519,
									"end": 577,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 519,
									"end": 577,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 629,
									"end": 638,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 625,
									"end": 643,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 596,
									"end": 644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 596,
									"end": 644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 596,
									"end": 644,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 596,
									"end": 644,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 586,
									"end": 644,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 586,
									"end": 644,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 194,
									"end": 650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 655,
									"end": 858,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 655,
									"end": 858,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "184"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "182"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 431,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a6644044ca9fedf10333634718e8bde73f7598c8f1920194b6987e8ca89463564736f6c63430008180033",
									".code": [
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "96132521"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "BE9A6555"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "BE9A6555"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "EFBE1C1C"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "FBCCEDAE"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "96132521"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "9852595C"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "A3F8EACE"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "810EC23B"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "86D1A69F"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "A17B06B"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "FB5A6B4"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "19165587"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 124,
											"end": 431,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4997,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4997,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3044,
											"end": 3135,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4611,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4611,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5303,
											"end": 5505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5303,
											"end": 5505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4289,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3519,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3992,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3992,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2892,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3199,
											"end": 3296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3710,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5133,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5143,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5133,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5130,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5109,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5109,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5092,
											"end": 5155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5155,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5092,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5085,
											"end": 5155,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4997,
											"end": 5162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4696,
											"end": 4701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4685,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4702,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4685,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4712,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "C0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4786,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4796,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4850,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4796,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5413,
											"end": 5498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5466,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5430,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5430,
											"end": 5486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5430,
											"end": 5486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5498,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5413,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5498,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5303,
											"end": 5505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4289,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4350,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4372,
											"end": 4391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4391,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 550,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "DA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4463,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4470,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4463,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4437,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4480,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4437,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3992,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4095,
											"end": 4100,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4124,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4082,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4126,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4082,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4082,
											"end": 4144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4082,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2892,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2964,
											"end": 2970,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3269,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3276,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3269,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3269,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3262,
											"end": 3289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3262,
											"end": 3289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3710,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3452,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3827,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3807,
											"end": 3822,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3787,
											"end": 3824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3787,
											"end": 3837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3787,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 6052,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5700,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5835,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5835,
											"end": 5842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5835,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5823,
											"end": 5842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5858,
											"end": 5866,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5819,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5900,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5883,
											"end": 6046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5928,
											"end": 5943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5921,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5921,
											"end": 5943,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5883,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6013,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6013,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6020,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6013,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6001,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6001,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 5997,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5982,
											"end": 6021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5981,
											"end": 6035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5974,
											"end": 6035,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2604,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2604,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2605,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1396,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1405,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF479181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1476,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2858,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2867,
											"end": 2901,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2659,
											"end": 2907,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1627,
											"end": 1637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1619,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1193,
											"end": 1396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5559,
											"end": 5993,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5559,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 5904,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5905,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5885,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5906,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14,
											"end": 185,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 14,
											"end": 185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 81,
											"end": 101,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 81,
											"end": 101,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 141,
											"end": 159,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 130,
											"end": 160,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 130,
											"end": 160,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 120,
											"end": 161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 120,
											"end": 161,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 110,
											"end": 179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 175,
											"end": 176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 173,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 165,
											"end": 177,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 110,
											"end": 179,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 110,
											"end": 179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 190,
											"end": 374,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 190,
											"end": 374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 248,
											"end": 254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 303,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 298,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 280,
											"end": 287,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 276,
											"end": 299,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 272,
											"end": 304,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 269,
											"end": 321,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 269,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 269,
											"end": 321,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 269,
											"end": 321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 358,
											"end": 367,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 340,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 340,
											"end": 368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 734,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 561,
											"end": 734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 629,
											"end": 649,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 678,
											"end": 709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 678,
											"end": 709,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 668,
											"end": 710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 668,
											"end": 710,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 658,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 658,
											"end": 728,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 714,
											"end": 726,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 739,
											"end": 925,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 798,
											"end": 804,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 853,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 830,
											"end": 837,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 826,
											"end": 849,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 822,
											"end": 854,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 819,
											"end": 871,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 819,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 819,
											"end": 871,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 867,
											"end": 868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 857,
											"end": 869,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 819,
											"end": 871,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 819,
											"end": 871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 890,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 909,
											"end": 918,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 890,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 890,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1064,
											"end": 1076,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1097,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 1097,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1176,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 1145,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 1145,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1135,
											"end": 1182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1135,
											"end": 1182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 930,
											"end": 1188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1401,
											"end": 1528,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1401,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1453,
											"end": 1473,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1474,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1493,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1483,
											"end": 1498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1514,
											"end": 1515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1522,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1533,
											"end": 1658,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1533,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1616,
											"end": 1652,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1632,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1765,
											"end": 1772,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1789,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1803,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1792,
											"end": 1804,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 1754,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1841,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1663,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1980,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1852,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1951,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1954,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 2153,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1985,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2100,
											"end": 2122,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2100,
											"end": 2122,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2123,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2076,
											"end": 2147,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2127,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2375,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2158,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2259,
											"end": 2279,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2280,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 2300,
											"end": 2301,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2331,
											"end": 2335,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2214,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/finance/VestingWallet.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SpageroTokenVesting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"duration()": "0fb5a6b4",
							"end()": "efbe1c1c",
							"owner()": "8da5cb5b",
							"releasable()": "fbccedae",
							"releasable(address)": "a3f8eace",
							"release()": "86d1a69f",
							"release(address)": "19165587",
							"released()": "96132521",
							"released(address)": "9852595c",
							"renounceOwnership()": "715018a6",
							"start()": "be9a6555",
							"transferOwnership(address)": "f2fde38b",
							"vestedAmount(address,uint64)": "810ec23b",
							"vestedAmount(uint64)": "0a17b06b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiaryAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an {IERC20} contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroTokenVesting.sol\":\"SpageroTokenVesting\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"keccak256\":\"0x79de2c47546e7d9e9785dff775e1cadda15fa877ff956f5b33b7a572e4d43e5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c431f66acb879d3dba4f4e32a21efcad38b49983cfc0a31d49bfa95a738c9f6\",\"dweb:/ipfs/QmQodRbcvFSLc7Cu6XXmGk75CZbsLmL1aZTtjeiDXVagtq\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"SpageroTokenVesting.sol\":{\"keccak256\":\"0x898340eb42132ec2e4726fe5ec304f18f85b355b86f0d8377dec4683de012158\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5452cd86b6326c78964ee3c2634a1cb955ccc1499ee8f63fd0ecfd8d2d0f426c\",\"dweb:/ipfs/QmVPhzQ5PX9gEfy4m5Bx1q56Ht3DuaGDjRSNMhEzuFr7n2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "SpageroTokenVesting.sol:SpageroTokenVesting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 176,
								"contract": "SpageroTokenVesting.sol:SpageroTokenVesting",
								"label": "_released",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 180,
								"contract": "SpageroTokenVesting.sol:SpageroTokenVesting",
								"label": "_erc20Released",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1380
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1381,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1380,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1380,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1380
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/finance/VestingWallet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/finance/VestingWallet.sol",
					"exportedSymbols": {
						"Address": [
							1350
						],
						"Context": [
							1380
						],
						"IERC20": [
							626
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							1090
						],
						"VestingWallet": [
							458
						]
					},
					"id": 459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 459,
							"sourceUnit": 627,
							"src": "134:49:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 626,
										"src": "142:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../token/ERC20/utils/SafeERC20.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 459,
							"sourceUnit": 1091,
							"src": "184:61:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1090,
										"src": "192:9:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 459,
							"sourceUnit": 1351,
							"src": "246:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1350,
										"src": "254:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 459,
							"sourceUnit": 1381,
							"src": "292:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1380,
										"src": "300:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "../access/Ownable.sol",
							"id": 159,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 459,
							"sourceUnit": 148,
							"src": "338:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 158,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "346:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 161,
										"name": "Context",
										"nameLocations": [
											"2079:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1380,
										"src": "2079:7:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "2079:7:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "Ownable",
										"nameLocations": [
											"2088:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "2088:7:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "2088:7:1"
								}
							],
							"canonicalName": "VestingWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 160,
								"nodeType": "StructuredDocumentation",
								"src": "386:1666:1",
								"text": " @dev A vesting wallet is an ownable contract that can receive native currency and ERC-20 tokens, and release these\n assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n be immediately releasable.\n By setting the duration to 0, one can configure this contract to behave like an asset timelock that holds tokens for\n a beneficiary until a specified time.\n NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n near future.\n NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\n NOTE: Chains with support for native ERC20s may allow the vesting wallet to withdraw the underlying asset as both an\n ERC20 and as native currency. For example, if chain C supports token A and the wallet gets deposited 100 A, then\n at 50% of the vesting period, the beneficiary can withdraw 50 A as ERC20 and 25 A as native currency (totaling 75 A).\n Consider disabling one of the withdrawal methods."
							},
							"fullyImplemented": true,
							"id": 458,
							"linearizedBaseContracts": [
								458,
								147,
								1380
							],
							"name": "VestingWallet",
							"nameLocation": "2062:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "da9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b",
									"id": 168,
									"name": "EtherReleased",
									"nameLocation": "2108:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2130:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2122:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:16:1"
									},
									"src": "2102:36:1"
								},
								{
									"anonymous": false,
									"eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
									"id": 174,
									"name": "ERC20Released",
									"nameLocation": "2149:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2179:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2163:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2163:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2194:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2186:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2162:39:1"
									},
									"src": "2143:59:1"
								},
								{
									"constant": false,
									"id": 176,
									"mutability": "mutable",
									"name": "_released",
									"nameLocation": "2224:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 458,
									"src": "2208:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2208:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 180,
									"mutability": "mutable",
									"name": "_erc20Released",
									"nameLocation": "2281:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 458,
									"src": "2239:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 179,
										"keyName": "token",
										"keyNameLocation": "2255:5:1",
										"keyType": {
											"id": 177,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2247:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2239:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 178,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2264:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 182,
									"mutability": "immutable",
									"name": "_start",
									"nameLocation": "2326:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 458,
									"src": "2301:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 181,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "2301:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "immutable",
									"name": "_duration",
									"nameLocation": "2363:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 458,
									"src": "2338:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 183,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "2338:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2634:77:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2644:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2653:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2644:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2644:23:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "2677:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "durationSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2689:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2677:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2677:27:1"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "2379:141:1",
										"text": " @dev Sets the beneficiary (owner), the start timestamp and the vesting duration (in seconds) of the vesting\n wallet."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 194,
													"name": "beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 187,
													"src": "2621:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 195,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 193,
												"name": "Ownable",
												"nameLocations": [
													"2613:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2613:7:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2613:20:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2545:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2537:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2537:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "startTimestamp",
												"nameLocation": "2565:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2558:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 188,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2558:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "2588:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2581:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 190,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2581:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2536:68:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:1"
									},
									"scope": 458,
									"src": "2525:186:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "2824:2:1",
										"statements": []
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2717:67:1",
										"text": " @dev The contract should be able to receive Eth."
									},
									"id": 211,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2796:2:1"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2824:0:1"
									},
									"scope": 458,
									"src": "2789:37:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2947:30:1",
										"statements": [
											{
												"expression": {
													"id": 217,
													"name": "_start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 182,
													"src": "2964:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 216,
												"id": 218,
												"nodeType": "Return",
												"src": "2957:13:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "2832:55:1",
										"text": " @dev Getter for the start timestamp."
									},
									"functionSelector": "be9a6555",
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "2901:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2906:2:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2938:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2937:9:1"
									},
									"scope": 458,
									"src": "2892:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "3102:33:1",
										"statements": [
											{
												"expression": {
													"id": 226,
													"name": "_duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 184,
													"src": "3119:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 225,
												"id": 227,
												"nodeType": "Return",
												"src": "3112:16:1"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2983:56:1",
										"text": " @dev Getter for the vesting duration."
									},
									"functionSelector": "0fb5a6b4",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "duration",
									"nameLocation": "3053:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3061:2:1"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3093:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3092:9:1"
									},
									"scope": 458,
									"src": "3044:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "3252:44:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 235,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "3269:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3269:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 237,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "3279:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3279:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3269:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 234,
												"id": 240,
												"nodeType": "Return",
												"src": "3262:27:1"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3141:53:1",
										"text": " @dev Getter for the end timestamp."
									},
									"functionSelector": "efbe1c1c",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "end",
									"nameLocation": "3208:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3211:2:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3243:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3242:9:1"
									},
									"scope": 458,
									"src": "3199:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3419:33:1",
										"statements": [
											{
												"expression": {
													"id": 248,
													"name": "_released",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 176,
													"src": "3436:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 249,
												"nodeType": "Return",
												"src": "3429:16:1"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "3302:54:1",
										"text": " @dev Amount of eth already released"
									},
									"functionSelector": "96132521",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "3370:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3378:2:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3410:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3409:9:1"
									},
									"scope": 458,
									"src": "3361:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "3590:45:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 259,
														"name": "_erc20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3607:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 261,
													"indexExpression": {
														"id": 260,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3622:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3607:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 262,
												"nodeType": "Return",
												"src": "3600:28:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3458:56:1",
										"text": " @dev Amount of token already released"
									},
									"functionSelector": "9852595c",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "3528:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3545:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "3537:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:15:1"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "3581:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:9:1"
									},
									"scope": 458,
									"src": "3519:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3770:74:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 273,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3813:9:1",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3807:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3800:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 271,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "3800:6:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3800:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 270,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																389,
																417
															],
															"referencedDeclaration": 389,
															"src": "3787:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (uint64) view returns (uint256)"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3787:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 277,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																251,
																264
															],
															"referencedDeclaration": 251,
															"src": "3827:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3827:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3787:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 269,
												"id": 280,
												"nodeType": "Return",
												"src": "3780:57:1"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "3641:64:1",
										"text": " @dev Getter for the amount of releasable eth."
									},
									"functionSelector": "fbccedae",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasable",
									"nameLocation": "3719:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3729:2:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3761:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3760:9:1"
									},
									"scope": 458,
									"src": "3710:134:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "4065:86:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 291,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "4095:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 294,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4109:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4115:9:1",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4109:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4102:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 292,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "4102:6:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4102:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 290,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																389,
																417
															],
															"referencedDeclaration": 417,
															"src": "4082:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (address,uint64) view returns (uint256)"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4082:44:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 299,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "4138:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 298,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																251,
																264
															],
															"referencedDeclaration": 264,
															"src": "4129:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4129:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4082:62:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 289,
												"id": 302,
												"nodeType": "Return",
												"src": "4075:69:1"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3850:137:1",
										"text": " @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n {IERC20} contract."
									},
									"functionSelector": "a3f8eace",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasable",
									"nameLocation": "4001:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4020:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4012:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4011:15:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4056:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4056:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4055:9:1"
									},
									"scope": 458,
									"src": "3992:159:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "4323:164:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4341:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 332,
														"src": "4333:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4333:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															282,
															304
														],
														"referencedDeclaration": 282,
														"src": "4350:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4350:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4333:29:1"
											},
											{
												"expression": {
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 313,
														"name": "_released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "4372:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 314,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "4385:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4372:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "4372:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 318,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4420:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 317,
														"name": "EtherReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "4406:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4406:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "EmitStatement",
												"src": "4401:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 326,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "4463:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4463:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4455:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 324,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4455:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4455:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 329,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4473:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 321,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "4437:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$1350_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4445:9:1",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1148,
														"src": "4437:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4437:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "4437:43:1"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "4157:127:1",
										"text": " @dev Release the native token (ether) that have already vested.\n Emits a {EtherReleased} event."
									},
									"functionSelector": "86d1a69f",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "4298:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4305:2:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4323:0:1"
									},
									"scope": 458,
									"src": "4289:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "4658:199:1",
										"statements": [
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4676:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "4668:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 339,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"id": 342,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4696:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 341,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															282,
															304
														],
														"referencedDeclaration": 304,
														"src": "4685:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4685:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4668:34:1"
											},
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 345,
															"name": "_erc20Released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4712:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 347,
														"indexExpression": {
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4727:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4712:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 348,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "4737:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4712:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "4712:31:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 352,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4772:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "4779:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 351,
														"name": "ERC20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4758:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4758:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "EmitStatement",
												"src": "4753:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 360,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "4826:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 359,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "4819:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$626_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4819:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 362,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4834:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4834:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "4843:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 356,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "4796:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$1090_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4806:12:1",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 671,
														"src": "4796:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4796:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "4796:54:1"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "4493:113:1",
										"text": " @dev Release the tokens that have already vested.\n Emits a {ERC20Released} event."
									},
									"functionSelector": "19165587",
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "4620:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4636:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4628:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:15:1"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4658:0:1"
									},
									"scope": 458,
									"src": "4611:246:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "5075:87:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 379,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5117:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VestingWallet_$458",
																				"typeString": "contract VestingWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VestingWallet_$458",
																				"typeString": "contract VestingWallet"
																			}
																		],
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5109:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 377,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5109:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5109:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5123:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5109:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		251,
																		264
																	],
																	"referencedDeclaration": 251,
																	"src": "5133:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5133:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5109:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 385,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "5145:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 376,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "5092:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5092:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 375,
												"id": 387,
												"nodeType": "Return",
												"src": "5085:70:1"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "4863:129:1",
										"text": " @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "0a17b06b",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "5006:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5026:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "5019:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 370,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5018:18:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "5066:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5066:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5065:9:1"
									},
									"scope": 458,
									"src": "4997:165:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "5396:109:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 406,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5462:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_VestingWallet_$458",
																					"typeString": "contract VestingWallet"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_VestingWallet_$458",
																					"typeString": "contract VestingWallet"
																				}
																			],
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5454:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 404,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5454:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5454:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 401,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "5437:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 400,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "5430:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$626_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5430:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$626",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5444:9:1",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 583,
																	"src": "5430:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5430:38:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 410,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5480:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 409,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		251,
																		264
																	],
																	"referencedDeclaration": 264,
																	"src": "5471:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5471:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5430:56:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 413,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5488:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 399,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "5413:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5413:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 398,
												"id": 415,
												"nodeType": "Return",
												"src": "5406:92:1"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "5168:130:1",
										"text": " @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "810ec23b",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "5312:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5333:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "5325:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5347:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "5340:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 393,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5340:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:33:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "5387:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5387:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5386:9:1"
									},
									"scope": 458,
									"src": "5303:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "5809:243:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 427,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "5823:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 428,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "5835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5835:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5823:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 434,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "5887:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 435,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "5900:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5900:5:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5887:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 453,
														"nodeType": "Block",
														"src": "5960:86:1",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 441,
																					"name": "totalAllocation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 420,
																					"src": "5982:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 445,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 442,
																								"name": "timestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 422,
																								"src": "6001:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint64",
																									"typeString": "uint64"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 443,
																									"name": "start",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 220,
																									"src": "6013:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																										"typeString": "function () view returns (uint256)"
																									}
																								},
																								"id": 444,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6013:7:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6001:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 446,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6000:21:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5982:39:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 448,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5981:41:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 449,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "6025:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6025:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5981:54:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 426,
																"id": 452,
																"nodeType": "Return",
																"src": "5974:61:1"
															}
														]
													},
													"id": 454,
													"nodeType": "IfStatement",
													"src": "5883:163:1",
													"trueBody": {
														"id": 440,
														"nodeType": "Block",
														"src": "5907:47:1",
														"statements": [
															{
																"expression": {
																	"id": 438,
																	"name": "totalAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "5928:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 426,
																"id": 439,
																"nodeType": "Return",
																"src": "5921:22:1"
															}
														]
													}
												},
												"id": 455,
												"nodeType": "IfStatement",
												"src": "5819:227:1",
												"trueBody": {
													"id": 433,
													"nodeType": "Block",
													"src": "5844:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5865:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 426,
															"id": 432,
															"nodeType": "Return",
															"src": "5858:8:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "5511:184:1",
										"text": " @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n an asset given its total historical allocation."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vestingSchedule",
									"nameLocation": "5709:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "totalAllocation",
												"nameLocation": "5734:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5726:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5758:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5751:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 421,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5751:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:43:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5800:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5799:9:1"
									},
									"scope": 458,
									"src": "5700:352:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 459,
							"src": "2053:4001:1",
							"usedErrors": [
								13,
								18,
								638,
								1390,
								1393
							],
							"usedEvents": [
								24,
								168,
								174
							]
						}
					],
					"src": "108:5947:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							540
						],
						"IERC165": [
							1414
						],
						"IERC20": [
							626
						]
					},
					"id": 541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 460,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 549,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 461,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 626,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 545,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 463,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1414,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 466,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 626,
										"src": "590:6:2"
									},
									"id": 467,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 468,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1414,
										"src": "598:7:2"
									},
									"id": 469,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 465,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 540,
							"linearizedBaseContracts": [
								540,
								1414,
								626
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 540,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 540,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 540,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 540,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 540,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 540,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 541,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								560,
								569
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1414
						]
					},
					"id": 545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 542,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 545,
							"sourceUnit": 1415,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 543,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1414,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							626
						]
					},
					"id": 549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 546,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 627,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 547,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 626,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							626
						]
					},
					"id": 627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 550,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 551,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 626,
							"linearizedBaseContracts": [
								626
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 560,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 569,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 626,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 626,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 590,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 626,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 626,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 610,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 626,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 626,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 627,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								560,
								569
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							540
						],
						"IERC20": [
							626
						],
						"SafeERC20": [
							1090
						]
					},
					"id": 1091,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 630,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1091,
							"sourceUnit": 627,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 629,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 626,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 632,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1091,
							"sourceUnit": 541,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 631,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 540,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 633,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1090,
							"linearizedBaseContracts": [
								1090
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 638,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 647,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 659,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 662,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$626",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 593,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 664,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 653,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 666,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 660,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 658,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$626",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 649,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 626,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 626,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$626",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 1090,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 688,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$626",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 625,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 690,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 691,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 679,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 692,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 693,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 686,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 684,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$626",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 626,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 626,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$626",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 1090,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 712,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 715,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$626",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 593,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 717,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 719,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 713,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 711,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 710,
												"id": 722,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$626",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 701,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 700,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 626,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 626,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$626",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 1090,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 743,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$626",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 625,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 745,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 746,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 732,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 734,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 748,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 741,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 739,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 738,
												"id": 751,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$626",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 726,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 626,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 626,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$626",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 1090,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 774,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 770,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1090",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1090",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 768,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 766,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 776,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 777,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 779,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$626",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$626",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 755,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 626,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 626,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$626",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 1090,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 825,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															796
														],
														"declarations": [
															{
																"constant": false,
																"id": 796,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 825,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 795,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 805,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 801,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1090",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1090",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 799,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 803,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 797,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$626",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 603,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 807,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 816,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 815,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 810,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 790,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 811,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 812,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 809,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 814,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 818,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$626",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 819,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 820,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 821,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$626",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 817,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 824,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$626",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 786,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 626,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 626,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$626",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 1090,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 873,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 838,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 848,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 842,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$626",
																	"typeString": "contract IERC20"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 613,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 844,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 845,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 846,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 840,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 850,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$626",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 851,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$626",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 849,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 855,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$626",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 858,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 831,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$626",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 613,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 860,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 833,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 861,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 862,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 856,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$626",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 854,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 865,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 867,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$626",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 868,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$626",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 866,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$626",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 830,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 829,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 626,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 626,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$626",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 1090,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 887,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 901,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 903,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 899,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$540",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 491,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 914,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 913,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 909,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 878,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$540",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$540",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 907,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 906,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 912,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 915,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 898,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 893,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$540",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 894,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 895,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$540",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 892,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 897,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$540",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 877,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 876,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 540,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$540",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 1090,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 932,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 947,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 948,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 949,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 950,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 945,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$540",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 517,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 961,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 960,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 956,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 921,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$540",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$540",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 954,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 953,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 959,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 944,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 938,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$540",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 939,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 940,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 941,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$540",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 937,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 943,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$540",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 920,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 919,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 540,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$540",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 1090,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 977,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 991,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 992,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 993,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 989,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$540",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1004,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 1003,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 999,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 968,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$540",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$540",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 997,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 996,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1002,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 983,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$540",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 984,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 985,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$540",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 982,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$626_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 987,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$540",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 967,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 966,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 540,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$540",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 1090,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1047,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1018,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1047,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1013,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1013,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1017,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 1020,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 1011,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1022,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1023,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1034,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1028,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1011,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$626",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$626",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1026,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1041,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1011,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$626",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$626",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1039,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1038,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1044,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$626",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1009,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 626,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 626,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$626",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 1090,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1059,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1067,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1054,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1054,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 1063,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 1066,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 1060,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1052,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1068,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1069,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1070,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1081,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1075,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1052,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$626",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$626",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1074,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1073,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1085,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1087,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$626",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1051,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1050,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 626,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 626,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$626",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 1090,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1091,
							"src": "698:9376:6",
							"usedErrors": [
								638,
								647
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1350
						],
						"Errors": [
							1402
						]
					},
					"id": 1351,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1092,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1094,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1351,
							"sourceUnit": 1403,
							"src": "127:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1093,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1402,
										"src": "135:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1095,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1350,
							"linearizedBaseContracts": [
								1350
							],
							"name": "Address",
							"nameLocation": "241:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1100,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:7"
									},
									"src": "335:39:7"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "1361:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1110,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1350",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1350",
																		"typeString": "library Address"
																	}
																],
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1108,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1113,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "1399:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "1371:125:7",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "1407:89:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1120,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1350",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1350",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1118,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1123,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "1478:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1115,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1402_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1390,
																	"src": "1428:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "1421:64:7"
														}
													]
												}
											},
											{
												"assignments": [
													1129,
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "1507:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1128,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "1521:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1130,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1132,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "1548:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1134,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "1570:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:7"
											},
											{
												"condition": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:7",
													"subExpression": {
														"id": 1139,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1596:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1146,
												"nodeType": "IfStatement",
												"src": "1591:58:7",
												"trueBody": {
													"id": 1145,
													"nodeType": "Block",
													"src": "1605:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1142,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "1627:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1141,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "1619:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1144,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1309:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1336:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:7"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:7"
									},
									"scope": 1350,
									"src": "1290:365:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "2589:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1159,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2628:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "2636:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1158,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "2606:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1163,
												"nodeType": "Return",
												"src": "2599:45:7"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2522:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2538:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:7"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2575:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:7"
									},
									"scope": 1350,
									"src": "2500:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "3088:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1179,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1350",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1350",
																		"typeString": "library Address"
																	}
																],
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1177,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1182,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "3126:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "3098:123:7",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "3133:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1189,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1350",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1350",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1187,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1192,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "3204:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1184,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "3154:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1402_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1390,
																	"src": "3154:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1194,
															"nodeType": "RevertStatement",
															"src": "3147:63:7"
														}
													]
												}
											},
											{
												"assignments": [
													1198,
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "3231:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "3245:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1199,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": {
													"arguments": [
														{
															"id": 1205,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "3298:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1201,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "3272:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1203,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "3291:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1209,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "3347:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "3355:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1211,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "3364:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1208,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "3320:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1176,
												"id": 1213,
												"nodeType": "Return",
												"src": "3313:62:7"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "3006:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "3022:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "3041:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:7"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "3074:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:7"
									},
									"scope": 1350,
									"src": "2975:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "3621:154:7",
										"statements": [
											{
												"assignments": [
													1226,
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1226,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1240,
														"src": "3632:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1225,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1240,
														"src": "3646:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1227,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"arguments": [
														{
															"id": 1231,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "3691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1229,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "3673:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1235,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "3740:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "3748:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1237,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "3757:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1234,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "3713:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1239,
												"nodeType": "Return",
												"src": "3706:62:7"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3549:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3565:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:7"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3607:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:7"
									},
									"scope": 1350,
									"src": "3521:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "4013:156:7",
										"statements": [
											{
												"assignments": [
													1252,
													1254
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1266,
														"src": "4024:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1251,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1254,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1266,
														"src": "4038:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1253,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"initialValue": {
													"arguments": [
														{
															"id": 1257,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "4085:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1255,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "4065:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "4134:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "4142:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1263,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "4151:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1260,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "4107:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1250,
												"id": 1265,
												"nodeType": "Return",
												"src": "4100:62:7"
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "3946:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "3962:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:7"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "3999:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:7"
									},
									"scope": 1350,
									"src": "3916:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "4595:424:7",
										"statements": [
											{
												"condition": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:7",
													"subExpression": {
														"id": 1279,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "4610:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "4669:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1286,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "4857:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1290,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1270,
																				"src": "4883:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1301,
															"nodeType": "IfStatement",
															"src": "4853:119:7",
															"trueBody": {
																"id": 1300,
																"nodeType": "Block",
																"src": "4908:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1297,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "4950:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1296,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "4933:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1299,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1302,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "4992:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1278,
															"id": 1303,
															"nodeType": "Return",
															"src": "4985:17:7"
														}
													]
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "4605:408:7",
												"trueBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "4619:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1282,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "4641:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1281,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "4633:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1284,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "4482:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "4506:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "4528:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:7"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "4581:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:7"
									},
									"scope": 1350,
									"src": "4437:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "5323:122:7",
										"statements": [
											{
												"condition": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:7",
													"subExpression": {
														"id": 1317,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "5338:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "5397:42:7",
													"statements": [
														{
															"expression": {
																"id": 1324,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "5418:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1316,
															"id": 1325,
															"nodeType": "Return",
															"src": "5411:17:7"
														}
													]
												},
												"id": 1327,
												"nodeType": "IfStatement",
												"src": "5333:106:7",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "5347:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1320,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "5369:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1319,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "5361:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "5247:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "5261:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:7"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "5309:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:7"
									},
									"scope": 1350,
									"src": "5221:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "5614:379:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1335,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "5690:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1346,
													"nodeType": "Block",
													"src": "5936:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1341,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "5957:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1402_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5964:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1393,
																	"src": "5957:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5957:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1345,
															"nodeType": "RevertStatement",
															"src": "5950:26:7"
														}
													]
												},
												"id": 1347,
												"nodeType": "IfStatement",
												"src": "5686:301:7",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "5713:217:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:80:7",
																"nodeType": "YulBlock",
																"src": "5840:80:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "returndata",
																							"nativeSrc": "5869:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5869:10:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5881:4:7",
																							"nodeType": "YulLiteral",
																							"src": "5881:4:7",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5865:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5865:3:7"
																					},
																					"nativeSrc": "5865:21:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5865:21:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "returndata",
																							"nativeSrc": "5894:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5894:10:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5888:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5888:5:7"
																					},
																					"nativeSrc": "5888:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5888:17:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5858:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5858:6:7"
																			},
																			"nativeSrc": "5858:48:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5858:48:7"
																		},
																		"nativeSrc": "5858:48:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:48:7"
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1332,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5869:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1332,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5894:10:7",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1339,
															"nodeType": "InlineAssembly",
															"src": "5815:105:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5576:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:7"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:7"
									},
									"scope": 1350,
									"src": "5559:434:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1351,
							"src": "233:5762:7",
							"usedErrors": [
								1100
							],
							"usedEvents": []
						}
					],
					"src": "101:5895:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1380
						]
					},
					"id": 1381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1352,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1353,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1380,
							"linearizedBaseContracts": [
								1380
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1358,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1357,
												"id": 1360,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1380,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1367,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1369,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1380,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1375,
												"id": 1377,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1380,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1381,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1402
						]
					},
					"id": 1403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1383,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1402,
							"linearizedBaseContracts": [
								1402
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1390,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1393,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1396,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1401,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1403,
							"src": "411:484:9",
							"usedErrors": [
								1390,
								1393,
								1396,
								1401
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1414
						]
					},
					"id": 1415,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1404,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1405,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1414,
							"linearizedBaseContracts": [
								1414
							],
							"name": "IERC165",
							"nameLocation": "433:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "819:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:10"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "862:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:10"
									},
									"scope": 1414,
									"src": "792:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1415,
							"src": "423:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:10"
				},
				"id": 10
			},
			"SpageroTokenVesting.sol": {
				"ast": {
					"absolutePath": "SpageroTokenVesting.sol",
					"exportedSymbols": {
						"Address": [
							1350
						],
						"Context": [
							1380
						],
						"IERC20": [
							626
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							1090
						],
						"SpageroTokenVesting": [
							1435
						],
						"VestingWallet": [
							458
						]
					},
					"id": 1436,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1416,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/finance/VestingWallet.sol",
							"file": "@openzeppelin/contracts/finance/VestingWallet.sol",
							"id": 1417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1436,
							"sourceUnit": 459,
							"src": "61:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1418,
										"name": "VestingWallet",
										"nameLocations": [
											"156:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 458,
										"src": "156:13:11"
									},
									"id": 1419,
									"nodeType": "InheritanceSpecifier",
									"src": "156:13:11"
								}
							],
							"canonicalName": "SpageroTokenVesting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1435,
							"linearizedBaseContracts": [
								1435,
								458,
								147,
								1380
							],
							"name": "SpageroTokenVesting",
							"nameLocation": "133:19:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "426:2:11",
										"statements": []
									},
									"id": 1434,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1428,
													"name": "beneficiaryAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1421,
													"src": "373:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1429,
													"name": "startTimestamp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1423,
													"src": "393:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												{
													"id": 1430,
													"name": "durationSeconds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1425,
													"src": "409:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												}
											],
											"id": 1431,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1427,
												"name": "VestingWallet",
												"nameLocations": [
													"359:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "359:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "359:66:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "beneficiaryAddress",
												"nameLocation": "268:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "260:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "startTimestamp",
												"nameLocation": "304:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "297:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1422,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "297:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "336:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "329:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1424,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "329:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "249:109:11"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "426:0:11"
									},
									"scope": 1435,
									"src": "238:190:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1436,
							"src": "124:307:11",
							"usedErrors": [
								13,
								18,
								638,
								1390,
								1393
							],
							"usedEvents": [
								24,
								168,
								174
							]
						}
					],
					"src": "33:400:11"
				},
				"id": 11
			}
		}
	}
}