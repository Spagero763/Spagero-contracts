{
	"id": "c30a6e2547cd1221b04ca5df7a517ba5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"SpageroMintableERC20_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: SpageroMintableERC20.sol\n\n\npragma solidity ^0.8.24;\n\n\n\ncontract SpageroMintableERC20 is ERC20Burnable, Ownable {\n    constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_) Ownable(msg.sender) {}\n\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"SpageroMintableERC20_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "SpageroMintableERC20_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 818,
								"contract": "SpageroMintableERC20_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SpageroMintableERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroMintableERC20_flattened.sol\":25983:26248  contract SpageroMintableERC20 is ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"SpageroMintableERC20_flattened.sol\":26045:26145  constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_) Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SpageroMintableERC20_flattened.sol\":26131:26141  msg.sender */\n  caller\n    /* \"SpageroMintableERC20_flattened.sol\":26107:26112  name_ */\n  dup3\n    /* \"SpageroMintableERC20_flattened.sol\":26114:26121  symbol_ */\n  dup3\n    /* \"SpageroMintableERC20_flattened.sol\":12549:12554  _name */\n  0x03\n    /* \"SpageroMintableERC20_flattened.sol\":12549:12562  _name = name_ */\n  tag_8\n    /* \"SpageroMintableERC20_flattened.sol\":26107:26112  name_ */\n  dup4\n    /* \"SpageroMintableERC20_flattened.sol\":12549:12554  _name */\n  dup3\n    /* \"SpageroMintableERC20_flattened.sol\":12549:12562  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"SpageroMintableERC20_flattened.sol\":12572:12579  _symbol */\n  0x04\n    /* \"SpageroMintableERC20_flattened.sol\":12572:12589  _symbol = symbol_ */\n  tag_10\n    /* \"SpageroMintableERC20_flattened.sol\":12582:12589  symbol_ */\n  dup3\n    /* \"SpageroMintableERC20_flattened.sol\":12572:12579  _symbol */\n  dup3\n    /* \"SpageroMintableERC20_flattened.sol\":12572:12589  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SpageroMintableERC20_flattened.sol\":24089:24115  initialOwner == address(0) */\n  dup2\n  and\n    /* \"SpageroMintableERC20_flattened.sol\":24085:24180  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"SpageroMintableERC20_flattened.sol\":24138:24169  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"SpageroMintableERC20_flattened.sol\":24166:24167  0 */\n  0x00\n    /* \"SpageroMintableERC20_flattened.sol\":24138:24169  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4263:4314   */\n  mstore\n    /* \"#utility.yul\":4236:4254   */\n  0x24\n  add\n    /* \"SpageroMintableERC20_flattened.sol\":24138:24169  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"SpageroMintableERC20_flattened.sol\":24085:24180  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"SpageroMintableERC20_flattened.sol\":24189:24221  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"SpageroMintableERC20_flattened.sol\":24208:24220  initialOwner */\n  dup2\n    /* \"SpageroMintableERC20_flattened.sol\":24189:24207  _transferOwnership */\n  tag_16\n    /* \"SpageroMintableERC20_flattened.sol\":24189:24221  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n    /* \"SpageroMintableERC20_flattened.sol\":24041:24228  constructor(address initialOwner) {... */\n  pop\n    /* \"SpageroMintableERC20_flattened.sol\":26045:26145  constructor(string memory name_, string memory symbol_) ERC20(name_, symbol_) Ownable(msg.sender) {} */\n  pop\n  pop\n    /* \"SpageroMintableERC20_flattened.sol\":25983:26248  contract SpageroMintableERC20 is ERC20Burnable, Ownable {... */\n  jump(tag_26)\n    /* \"SpageroMintableERC20_flattened.sol\":25728:25915  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"SpageroMintableERC20_flattened.sol\":25820:25826  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SpageroMintableERC20_flattened.sol\":25836:25853  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"SpageroMintableERC20_flattened.sol\":25868:25908  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"SpageroMintableERC20_flattened.sol\":25820:25826  _owner */\n  swap2\n  and\n  swap2\n    /* \"SpageroMintableERC20_flattened.sol\":25836:25853  _owner = newOwner */\n  swap1\n    /* \"SpageroMintableERC20_flattened.sol\":25820:25826  _owner */\n  dup3\n  swap1\n    /* \"SpageroMintableERC20_flattened.sol\":25868:25908  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"SpageroMintableERC20_flattened.sol\":25801:25817  address oldOwner */\n  0x00\n  swap1\n    /* \"SpageroMintableERC20_flattened.sol\":25868:25908  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"SpageroMintableERC20_flattened.sol\":25791:25915  {... */\n  pop\n    /* \"SpageroMintableERC20_flattened.sol\":25728:25915  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_20:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_21:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_29:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_31\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_33\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_34:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_35:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1557   */\ntag_3:\n    /* \"#utility.yul\":1094:1100   */\n  0x00\n    /* \"#utility.yul\":1102:1108   */\n  dup1\n    /* \"#utility.yul\":1155:1157   */\n  0x40\n    /* \"#utility.yul\":1143:1152   */\n  dup4\n    /* \"#utility.yul\":1134:1141   */\n  dup6\n    /* \"#utility.yul\":1130:1153   */\n  sub\n    /* \"#utility.yul\":1126:1158   */\n  slt\n    /* \"#utility.yul\":1123:1175   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1171:1172   */\n  0x00\n    /* \"#utility.yul\":1168:1169   */\n  dup1\n    /* \"#utility.yul\":1161:1173   */\n  revert\n    /* \"#utility.yul\":1123:1175   */\ntag_39:\n    /* \"#utility.yul\":1198:1214   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1263:1277   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1260:1294   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1290:1291   */\n  0x00\n    /* \"#utility.yul\":1287:1288   */\n  dup1\n    /* \"#utility.yul\":1280:1292   */\n  revert\n    /* \"#utility.yul\":1260:1294   */\ntag_40:\n    /* \"#utility.yul\":1313:1374   */\n  tag_41\n    /* \"#utility.yul\":1366:1373   */\n  dup7\n    /* \"#utility.yul\":1357:1363   */\n  dup4\n    /* \"#utility.yul\":1346:1355   */\n  dup8\n    /* \"#utility.yul\":1342:1364   */\n  add\n    /* \"#utility.yul\":1313:1374   */\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1303:1374   */\n  swap4\n  pop\n    /* \"#utility.yul\":1420:1422   */\n  0x20\n    /* \"#utility.yul\":1409:1418   */\n  dup6\n    /* \"#utility.yul\":1405:1423   */\n  add\n    /* \"#utility.yul\":1399:1424   */\n  mload\n    /* \"#utility.yul\":1383:1424   */\n  swap2\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  dup1\n    /* \"#utility.yul\":1439:1447   */\n  dup3\n    /* \"#utility.yul\":1436:1452   */\n  gt\n    /* \"#utility.yul\":1433:1469   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1465:1466   */\n  0x00\n    /* \"#utility.yul\":1462:1463   */\n  dup1\n    /* \"#utility.yul\":1455:1467   */\n  revert\n    /* \"#utility.yul\":1433:1469   */\ntag_42:\n  pop\n    /* \"#utility.yul\":1488:1551   */\n  tag_43\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1532:1540   */\n  dup3\n    /* \"#utility.yul\":1521:1530   */\n  dup7\n    /* \"#utility.yul\":1517:1541   */\n  add\n    /* \"#utility.yul\":1488:1551   */\n  tag_21\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1478:1551   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":995:1557   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1562:1942   */\ntag_22:\n    /* \"#utility.yul\":1641:1642   */\n  0x01\n    /* \"#utility.yul\":1637:1649   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1684:1696   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1705:1766   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1759:1763   */\n  0x7f\n    /* \"#utility.yul\":1751:1757   */\n  dup3\n    /* \"#utility.yul\":1747:1764   */\n  and\n    /* \"#utility.yul\":1737:1764   */\n  swap2\n  pop\n    /* \"#utility.yul\":1705:1766   */\ntag_45:\n    /* \"#utility.yul\":1812:1814   */\n  0x20\n    /* \"#utility.yul\":1804:1810   */\n  dup3\n    /* \"#utility.yul\":1801:1815   */\n  lt\n    /* \"#utility.yul\":1781:1799   */\n  dup2\n    /* \"#utility.yul\":1778:1816   */\n  sub\n    /* \"#utility.yul\":1775:1936   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1858:1868   */\n  0x4e487b71\n    /* \"#utility.yul\":1853:1856   */\n  0xe0\n    /* \"#utility.yul\":1849:1869   */\n  shl\n    /* \"#utility.yul\":1846:1847   */\n  0x00\n    /* \"#utility.yul\":1839:1870   */\n  mstore\n    /* \"#utility.yul\":1893:1897   */\n  0x22\n    /* \"#utility.yul\":1890:1891   */\n  0x04\n    /* \"#utility.yul\":1883:1898   */\n  mstore\n    /* \"#utility.yul\":1921:1925   */\n  0x24\n    /* \"#utility.yul\":1918:1919   */\n  0x00\n    /* \"#utility.yul\":1911:1926   */\n  revert\n    /* \"#utility.yul\":1775:1936   */\ntag_46:\n  pop\n    /* \"#utility.yul\":1562:1942   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2591   */\ntag_24:\n    /* \"#utility.yul\":2175:2177   */\n  0x1f\n    /* \"#utility.yul\":2170:2173   */\n  dup3\n    /* \"#utility.yul\":2167:2178   */\n  gt\n    /* \"#utility.yul\":2164:2585   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2211:2216   */\n  dup1\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2201:2217   */\n  mstore\n    /* \"#utility.yul\":2255:2259   */\n  0x20\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2242:2260   */\n  keccak256\n    /* \"#utility.yul\":2325:2327   */\n  0x1f\n    /* \"#utility.yul\":2313:2323   */\n  dup5\n    /* \"#utility.yul\":2309:2328   */\n  add\n    /* \"#utility.yul\":2306:2307   */\n  0x05\n    /* \"#utility.yul\":2302:2329   */\n  shr\n    /* \"#utility.yul\":2296:2300   */\n  dup2\n    /* \"#utility.yul\":2292:2330   */\n  add\n    /* \"#utility.yul\":2361:2365   */\n  0x20\n    /* \"#utility.yul\":2349:2359   */\n  dup6\n    /* \"#utility.yul\":2346:2366   */\n  lt\n    /* \"#utility.yul\":2343:2390   */\n  iszero\n  tag_50\n  jumpi\n  pop\n    /* \"#utility.yul\":2384:2388   */\n  dup1\n    /* \"#utility.yul\":2343:2390   */\ntag_50:\n    /* \"#utility.yul\":2439:2441   */\n  0x1f\n    /* \"#utility.yul\":2434:2437   */\n  dup5\n    /* \"#utility.yul\":2430:2442   */\n  add\n    /* \"#utility.yul\":2427:2428   */\n  0x05\n    /* \"#utility.yul\":2423:2443   */\n  shr\n    /* \"#utility.yul\":2417:2421   */\n  dup3\n    /* \"#utility.yul\":2413:2444   */\n  add\n    /* \"#utility.yul\":2403:2444   */\n  swap2\n  pop\n    /* \"#utility.yul\":2494:2575   */\ntag_51:\n    /* \"#utility.yul\":2512:2514   */\n  dup2\n    /* \"#utility.yul\":2505:2510   */\n  dup2\n    /* \"#utility.yul\":2502:2515   */\n  lt\n    /* \"#utility.yul\":2494:2575   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2571:2572   */\n  0x00\n    /* \"#utility.yul\":2557:2573   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2538:2539   */\n  0x01\n    /* \"#utility.yul\":2527:2540   */\n  add\n    /* \"#utility.yul\":2494:2575   */\n  jump(tag_51)\ntag_53:\n    /* \"#utility.yul\":2498:2501   */\n  pop\n  pop\n    /* \"#utility.yul\":2164:2585   */\ntag_49:\n    /* \"#utility.yul\":2073:2591   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:4112   */\ntag_9:\n    /* \"#utility.yul\":2887:2897   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2909:2939   */\n  dup2\n  gt\n    /* \"#utility.yul\":2906:2962   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2942:2960   */\n  tag_57\n  tag_20\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2971:3068   */\n  tag_58\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3021:3059   */\n  tag_59\n    /* \"#utility.yul\":3053:3057   */\n  dup5\n    /* \"#utility.yul\":3047:3058   */\n  sload\n    /* \"#utility.yul\":3021:3059   */\n  tag_22\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3015:3019   */\n  dup5\n    /* \"#utility.yul\":2971:3068   */\n  tag_24\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":3123:3127   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3180:3182   */\n  0x1f\n    /* \"#utility.yul\":3169:3183   */\n  dup4\n  gt\n    /* \"#utility.yul\":3197:3198   */\n  0x01\n    /* \"#utility.yul\":3192:3855   */\n  dup2\n  eq\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup5\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_62\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_62:\n  not(0x00)\n    /* \"#utility.yul\":2724:2725   */\n  0x03\n    /* \"#utility.yul\":2720:2731   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2716:2740   */\n  shr\n    /* \"#utility.yul\":2712:2741   */\n  not\n    /* \"#utility.yul\":2702:2742   */\n  and\n    /* \"#utility.yul\":2748:2749   */\n  0x01\n    /* \"#utility.yul\":2744:2755   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2699:2756   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3162:4106   */\n  jump(tag_60)\n    /* \"#utility.yul\":3192:3855   */\ntag_61:\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2013:2027   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2057:2061   */\n  0x20\n    /* \"#utility.yul\":2044:2062   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3228:3248   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3346:3582   */\ntag_65:\n    /* \"#utility.yul\":3360:3367   */\n  dup3\n    /* \"#utility.yul\":3357:3358   */\n  dup2\n    /* \"#utility.yul\":3354:3368   */\n  lt\n    /* \"#utility.yul\":3346:3582   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":3449:3468   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3443:3469   */\n  mload\n    /* \"#utility.yul\":3428:3470   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3541:3568   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3509:3510   */\n  0x01\n    /* \"#utility.yul\":3497:3511   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3376:3395   */\n  dup5\n  add\n    /* \"#utility.yul\":3346:3582   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":3350:3353   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup6\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_68:\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3833:3839   */\n  dup5\n    /* \"#utility.yul\":3830:3831   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3816:3820   */\n  dup6\n    /* \"#utility.yul\":3809:3845   */\n  sstore\n    /* \"#utility.yul\":3162:4106   */\ntag_60:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2767:4112   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4117:4320   */\ntag_26:\n    /* \"SpageroMintableERC20_flattened.sol\":25983:26248  contract SpageroMintableERC20 is ERC20Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SpageroMintableERC20_flattened.sol\":25983:26248  contract SpageroMintableERC20 is ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x23b872dd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SpageroMintableERC20_flattened.sol\":12661:12750  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SpageroMintableERC20_flattened.sol\":14803:14989  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":14803:14989  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":13704:13801  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"SpageroMintableERC20_flattened.sol\":13782:13794  _totalSupply */\n      sload(0x02)\n        /* \"SpageroMintableERC20_flattened.sol\":13704:13801  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":13704:13801  function totalSupply() public view virtual returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":15581:15825  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_25\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":13589:13671  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"SpageroMintableERC20_flattened.sol\":13662:13664  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":13589:13671  function decimals() public view virtual returns (uint8) {... */\n      tag_23\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":26151:26246  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_8:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"SpageroMintableERC20_flattened.sol\":22275:22362  function burn(uint256 value) public virtual {... */\n    tag_9:\n      tag_44\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":13834:13950  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_31\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":13925:13943  _balances[account] */\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":13899:13906  uint256 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":13925:13943  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"SpageroMintableERC20_flattened.sol\":13834:13950  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":25109:25210  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_44\n      tag_57\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":22678:22836  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_12:\n      tag_44\n      tag_59\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":24454:24539  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"SpageroMintableERC20_flattened.sol\":24526:24532  _owner */\n      sload(0x05)\n        /* \"SpageroMintableERC20_flattened.sol\":24454:24539  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":24526:24532  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":24454:24539  function owner() public view virtual returns (address) {... */\n      tag_23\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":12863:12956  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_21\n      tag_66\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":14145:14323  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_25\n      tag_69\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":14356:14496  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_31\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14480  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":14436:14443  uint256 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14480  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14473  _allowances */\n      0x01\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14480  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14489  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"SpageroMintableERC20_flattened.sol\":14356:14496  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":25359:25574  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_44\n      tag_78\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":12661:12750  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"SpageroMintableERC20_flattened.sol\":12706:12719  string memory */\n      0x60\n        /* \"SpageroMintableERC20_flattened.sol\":12738:12743  _name */\n      0x03\n        /* \"SpageroMintableERC20_flattened.sol\":12731:12743  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"SpageroMintableERC20_flattened.sol\":12661:12750  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":14803:14989  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"SpageroMintableERC20_flattened.sol\":14876:14880  bool */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"SpageroMintableERC20_flattened.sol\":14930:14961  _approve(owner, spender, value) */\n      tag_90\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      dup2\n        /* \"SpageroMintableERC20_flattened.sol\":14946:14953  spender */\n      dup6\n        /* \"SpageroMintableERC20_flattened.sol\":14955:14960  value */\n      dup6\n        /* \"SpageroMintableERC20_flattened.sol\":14930:14938  _approve */\n      tag_91\n        /* \"SpageroMintableERC20_flattened.sol\":14930:14961  _approve(owner, spender, value) */\n      jump\t// in\n    tag_90:\n        /* \"SpageroMintableERC20_flattened.sol\":14978:14982  true */\n      0x01\n        /* \"SpageroMintableERC20_flattened.sol\":14971:14982  return true */\n      swap2\n      pop\n      pop\n        /* \"SpageroMintableERC20_flattened.sol\":14803:14989  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_87:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":15581:15825  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_38:\n        /* \"SpageroMintableERC20_flattened.sol\":15668:15672  bool */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"SpageroMintableERC20_flattened.sol\":15724:15761  _spendAllowance(from, spender, value) */\n      tag_95\n        /* \"SpageroMintableERC20_flattened.sol\":15740:15744  from */\n      dup6\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      dup3\n        /* \"SpageroMintableERC20_flattened.sol\":15755:15760  value */\n      dup6\n        /* \"SpageroMintableERC20_flattened.sol\":15724:15739  _spendAllowance */\n      tag_96\n        /* \"SpageroMintableERC20_flattened.sol\":15724:15761  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_95:\n        /* \"SpageroMintableERC20_flattened.sol\":15771:15797  _transfer(from, to, value) */\n      tag_97\n        /* \"SpageroMintableERC20_flattened.sol\":15781:15785  from */\n      dup6\n        /* \"SpageroMintableERC20_flattened.sol\":15787:15789  to */\n      dup6\n        /* \"SpageroMintableERC20_flattened.sol\":15791:15796  value */\n      dup6\n        /* \"SpageroMintableERC20_flattened.sol\":15771:15780  _transfer */\n      tag_98\n        /* \"SpageroMintableERC20_flattened.sol\":15771:15797  _transfer(from, to, value) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"SpageroMintableERC20_flattened.sol\":15814:15818  true */\n      0x01\n      swap5\n        /* \"SpageroMintableERC20_flattened.sol\":15581:15825  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":26151:26246  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_46:\n        /* \"SpageroMintableERC20_flattened.sol\":24347:24360  _checkOwner() */\n      tag_101\n        /* \"SpageroMintableERC20_flattened.sol\":24347:24358  _checkOwner */\n      tag_102\n        /* \"SpageroMintableERC20_flattened.sol\":24347:24360  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"SpageroMintableERC20_flattened.sol\":26222:26239  _mint(to, amount) */\n      tag_104\n        /* \"SpageroMintableERC20_flattened.sol\":26228:26230  to */\n      dup3\n        /* \"SpageroMintableERC20_flattened.sol\":26232:26238  amount */\n      dup3\n        /* \"SpageroMintableERC20_flattened.sol\":26222:26227  _mint */\n      tag_105\n        /* \"SpageroMintableERC20_flattened.sol\":26222:26239  _mint(to, amount) */\n      jump\t// in\n    tag_104:\n        /* \"SpageroMintableERC20_flattened.sol\":26151:26246  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":22275:22362  function burn(uint256 value) public virtual {... */\n    tag_50:\n        /* \"SpageroMintableERC20_flattened.sol\":22329:22355  _burn(_msgSender(), value) */\n      tag_107\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"SpageroMintableERC20_flattened.sol\":22349:22354  value */\n      dup3\n        /* \"SpageroMintableERC20_flattened.sol\":22329:22334  _burn */\n      tag_109\n        /* \"SpageroMintableERC20_flattened.sol\":22329:22355  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_107:\n        /* \"SpageroMintableERC20_flattened.sol\":22275:22362  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":25109:25210  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"SpageroMintableERC20_flattened.sol\":24347:24360  _checkOwner() */\n      tag_112\n        /* \"SpageroMintableERC20_flattened.sol\":24347:24358  _checkOwner */\n      tag_102\n        /* \"SpageroMintableERC20_flattened.sol\":24347:24360  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"SpageroMintableERC20_flattened.sol\":25173:25203  _transferOwnership(address(0)) */\n      tag_114\n        /* \"SpageroMintableERC20_flattened.sol\":25200:25201  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":25173:25191  _transferOwnership */\n      tag_115\n        /* \"SpageroMintableERC20_flattened.sol\":25173:25203  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_114:\n        /* \"SpageroMintableERC20_flattened.sol\":25109:25210  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":22678:22836  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_60:\n        /* \"SpageroMintableERC20_flattened.sol\":22753:22798  _spendAllowance(account, _msgSender(), value) */\n      tag_117\n        /* \"SpageroMintableERC20_flattened.sol\":22769:22776  account */\n      dup3\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"SpageroMintableERC20_flattened.sol\":22792:22797  value */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":22753:22768  _spendAllowance */\n      tag_96\n        /* \"SpageroMintableERC20_flattened.sol\":22753:22798  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_117:\n        /* \"SpageroMintableERC20_flattened.sol\":22808:22829  _burn(account, value) */\n      tag_104\n        /* \"SpageroMintableERC20_flattened.sol\":22814:22821  account */\n      dup3\n        /* \"SpageroMintableERC20_flattened.sol\":22823:22828  value */\n      dup3\n        /* \"SpageroMintableERC20_flattened.sol\":22808:22813  _burn */\n      tag_109\n        /* \"SpageroMintableERC20_flattened.sol\":22808:22829  _burn(account, value) */\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":12863:12956  function symbol() public view virtual returns (string memory) {... */\n    tag_66:\n        /* \"SpageroMintableERC20_flattened.sol\":12910:12923  string memory */\n      0x60\n        /* \"SpageroMintableERC20_flattened.sol\":12942:12949  _symbol */\n      0x04\n        /* \"SpageroMintableERC20_flattened.sol\":12935:12949  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":14145:14323  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_70:\n        /* \"SpageroMintableERC20_flattened.sol\":14214:14218  bool */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"SpageroMintableERC20_flattened.sol\":14268:14295  _transfer(owner, to, value) */\n      tag_90\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      dup2\n        /* \"SpageroMintableERC20_flattened.sol\":14285:14287  to */\n      dup6\n        /* \"SpageroMintableERC20_flattened.sol\":14289:14294  value */\n      dup6\n        /* \"SpageroMintableERC20_flattened.sol\":14268:14277  _transfer */\n      tag_98\n        /* \"SpageroMintableERC20_flattened.sol\":14268:14295  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":25359:25574  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_79:\n        /* \"SpageroMintableERC20_flattened.sol\":24347:24360  _checkOwner() */\n      tag_132\n        /* \"SpageroMintableERC20_flattened.sol\":24347:24358  _checkOwner */\n      tag_102\n        /* \"SpageroMintableERC20_flattened.sol\":24347:24360  _checkOwner() */\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":25443:25465  newOwner == address(0) */\n      dup2\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":25439:25530  if (newOwner == address(0)) {... */\n      tag_134\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":25488:25519  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":25516:25517  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":25488:25519  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":25488:25519  OwnableInvalidOwner(address(0)) */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SpageroMintableERC20_flattened.sol\":25439:25530  if (newOwner == address(0)) {... */\n    tag_134:\n        /* \"SpageroMintableERC20_flattened.sol\":25539:25567  _transferOwnership(newOwner) */\n      tag_107\n        /* \"SpageroMintableERC20_flattened.sol\":25558:25566  newOwner */\n      dup2\n        /* \"SpageroMintableERC20_flattened.sol\":25539:25557  _transferOwnership */\n      tag_115\n        /* \"SpageroMintableERC20_flattened.sol\":25539:25567  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":19531:19659  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_91:\n        /* \"SpageroMintableERC20_flattened.sol\":19615:19652  _approve(owner, spender, value, true) */\n      tag_139\n        /* \"SpageroMintableERC20_flattened.sol\":19624:19629  owner */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":19631:19638  spender */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":19640:19645  value */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":19647:19651  true */\n      0x01\n        /* \"SpageroMintableERC20_flattened.sol\":19615:19623  _approve */\n      tag_140\n        /* \"SpageroMintableERC20_flattened.sol\":19615:19652  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_139:\n        /* \"SpageroMintableERC20_flattened.sol\":19531:19659  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":21220:21696  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14480  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":21319:21343  uint256 currentAllowance */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14480  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14473  _allowances */\n      0x01\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14480  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SpageroMintableERC20_flattened.sol\":14462:14489  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"SpageroMintableERC20_flattened.sol\":21385:21421  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"SpageroMintableERC20_flattened.sol\":21381:21690  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":21460:21465  value */\n      dup2\n        /* \"SpageroMintableERC20_flattened.sol\":21441:21457  currentAllowance */\n      dup2\n        /* \"SpageroMintableERC20_flattened.sol\":21441:21465  currentAllowance < value */\n      lt\n        /* \"SpageroMintableERC20_flattened.sol\":21437:21567  if (currentAllowance < value) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":21492:21552  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3354:3386   */\n      dup5\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":21492:21552  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3336:3387   */\n      mstore\n        /* \"#utility.yul\":3403:3421   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3396:3430   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3446:3464   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3439:3473   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3309:3327   */\n      0x64\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":21492:21552  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_135\n        /* \"#utility.yul\":3134:3479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":21437:21567  if (currentAllowance < value) {... */\n    tag_144:\n        /* \"SpageroMintableERC20_flattened.sol\":21608:21665  _approve(owner, spender, currentAllowance - value, false) */\n      tag_147\n        /* \"SpageroMintableERC20_flattened.sol\":21617:21622  owner */\n      dup5\n        /* \"SpageroMintableERC20_flattened.sol\":21624:21631  spender */\n      dup5\n        /* \"SpageroMintableERC20_flattened.sol\":21652:21657  value */\n      dup5\n        /* \"SpageroMintableERC20_flattened.sol\":21633:21649  currentAllowance */\n      dup5\n        /* \"SpageroMintableERC20_flattened.sol\":21633:21657  currentAllowance - value */\n      sub\n        /* \"SpageroMintableERC20_flattened.sol\":21659:21664  false */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":21608:21616  _approve */\n      tag_140\n        /* \"SpageroMintableERC20_flattened.sol\":21608:21665  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_147:\n        /* \"SpageroMintableERC20_flattened.sol\":21309:21696  {... */\n      pop\n        /* \"SpageroMintableERC20_flattened.sol\":21220:21696  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":16198:16498  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":16281:16299  from == address(0) */\n      dup4\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":16277:16363  if (from == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":16322:16352  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":16349:16350  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":16322:16352  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":16322:16352  ERC20InvalidSender(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":16277:16363  if (from == address(0)) {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":16376:16392  to == address(0) */\n      dup3\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":16372:16458  if (to == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":16415:16447  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":16444:16445  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":16415:16447  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":16415:16447  ERC20InvalidReceiver(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":16372:16458  if (to == address(0)) {... */\n    tag_151:\n        /* \"SpageroMintableERC20_flattened.sol\":16467:16491  _update(from, to, value) */\n      tag_139\n        /* \"SpageroMintableERC20_flattened.sol\":16475:16479  from */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":16481:16483  to */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":16485:16490  value */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":16467:16474  _update */\n      tag_154\n        /* \"SpageroMintableERC20_flattened.sol\":16467:16491  _update(from, to, value) */\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":24612:24774  function _checkOwner() internal view virtual {... */\n    tag_102:\n        /* \"SpageroMintableERC20_flattened.sol\":24526:24532  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"SpageroMintableERC20_flattened.sol\":24671:24694  owner() != _msgSender() */\n      eq\n        /* \"SpageroMintableERC20_flattened.sol\":24667:24768  if (owner() != _msgSender()) {... */\n      tag_114\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":24717:24757  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":4288:4298  msg.sender */\n      caller\n        /* \"SpageroMintableERC20_flattened.sol\":24717:24757  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":24717:24757  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_135\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":18263:18471  function _mint(address account, uint256 value) internal {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":18333:18354  account == address(0) */\n      dup3\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":18329:18420  if (account == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":18377:18409  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":18406:18407  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":18377:18409  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":18377:18409  ERC20InvalidReceiver(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":18329:18420  if (account == address(0)) {... */\n    tag_162:\n        /* \"SpageroMintableERC20_flattened.sol\":18429:18464  _update(address(0), account, value) */\n      tag_104\n        /* \"SpageroMintableERC20_flattened.sol\":18445:18446  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":18449:18456  account */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":18458:18463  value */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":18429:18436  _update */\n      tag_154\n        /* \"SpageroMintableERC20_flattened.sol\":18429:18464  _update(address(0), account, value) */\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":18789:18995  function _burn(address account, uint256 value) internal {... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":18859:18880  account == address(0) */\n      dup3\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":18855:18944  if (account == address(0)) {... */\n      tag_166\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":18903:18933  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":18930:18931  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":18903:18933  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":18903:18933  ERC20InvalidSender(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":18855:18944  if (account == address(0)) {... */\n    tag_166:\n        /* \"SpageroMintableERC20_flattened.sol\":18953:18988  _update(account, address(0), value) */\n      tag_104\n        /* \"SpageroMintableERC20_flattened.sol\":18961:18968  account */\n      dup3\n        /* \"SpageroMintableERC20_flattened.sol\":18978:18979  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":18982:18987  value */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":18953:18960  _update */\n      tag_154\n        /* \"SpageroMintableERC20_flattened.sol\":18953:18988  _update(account, address(0), value) */\n      jump\t// in\n        /* \"SpageroMintableERC20_flattened.sol\":25728:25915  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_115:\n        /* \"SpageroMintableERC20_flattened.sol\":25820:25826  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":25836:25853  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"SpageroMintableERC20_flattened.sol\":25868:25908  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"SpageroMintableERC20_flattened.sol\":25820:25826  _owner */\n      swap2\n      and\n      swap2\n        /* \"SpageroMintableERC20_flattened.sol\":25836:25853  _owner = newOwner */\n      swap1\n        /* \"SpageroMintableERC20_flattened.sol\":25820:25826  _owner */\n      dup3\n      swap1\n        /* \"SpageroMintableERC20_flattened.sol\":25868:25908  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"SpageroMintableERC20_flattened.sol\":25801:25817  address oldOwner */\n      0x00\n      swap1\n        /* \"SpageroMintableERC20_flattened.sol\":25868:25908  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"SpageroMintableERC20_flattened.sol\":25791:25915  {... */\n      pop\n        /* \"SpageroMintableERC20_flattened.sol\":25728:25915  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":20506:20938  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":20618:20637  owner == address(0) */\n      dup5\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":20614:20703  if (owner == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":20660:20692  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":20689:20690  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":20660:20692  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":20660:20692  ERC20InvalidApprover(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":20614:20703  if (owner == address(0)) {... */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":20716:20737  spender == address(0) */\n      dup4\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":20712:20802  if (spender == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":20760:20791  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":20788:20789  0 */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":20760:20791  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":20760:20791  ERC20InvalidSpender(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":20712:20802  if (spender == address(0)) {... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":20811:20829  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SpageroMintableERC20_flattened.sol\":20811:20822  _allowances */\n      0x01\n        /* \"SpageroMintableERC20_flattened.sol\":20811:20829  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SpageroMintableERC20_flattened.sol\":20811:20838  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"SpageroMintableERC20_flattened.sol\":20811:20846  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"SpageroMintableERC20_flattened.sol\":20856:20932  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_147\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":20906:20913  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":20890:20921  Approval(owner, spender, value) */\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":20899:20904  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":20890:20921  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"SpageroMintableERC20_flattened.sol\":20915:20920  value */\n      dup5\n        /* \"SpageroMintableERC20_flattened.sol\":20890:20921  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_176\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":20890:20921  Approval(owner, spender, value) */\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SpageroMintableERC20_flattened.sol\":20506:20938  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroMintableERC20_flattened.sol\":16813:17920  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":16902:16920  from == address(0) */\n      dup4\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":16898:17438  if (from == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":17054:17059  value */\n      dup1\n        /* \"SpageroMintableERC20_flattened.sol\":17038:17050  _totalSupply */\n      0x02\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":17038:17059  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SpageroMintableERC20_flattened.sol\":16898:17438  if (from == address(0)) {... */\n      tag_181\n      swap1\n      pop\n      jump\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":17112:17127  _balances[from] */\n      dup4\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":17090:17109  uint256 fromBalance */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":17112:17127  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"SpageroMintableERC20_flattened.sol\":17145:17164  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"SpageroMintableERC20_flattened.sol\":17141:17256  if (fromBalance < value) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":17191:17241  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3354:3386   */\n      dup6\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":17191:17241  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3336:3387   */\n      mstore\n        /* \"#utility.yul\":3403:3421   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3396:3430   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3446:3464   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3439:3473   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3309:3327   */\n      0x64\n      add\n        /* \"SpageroMintableERC20_flattened.sol\":17191:17241  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_135\n        /* \"#utility.yul\":3134:3479   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":17141:17256  if (fromBalance < value) {... */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":17376:17391  _balances[from] */\n      dup5\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":17376:17385  _balances */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":17376:17391  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SpageroMintableERC20_flattened.sol\":17394:17413  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"SpageroMintableERC20_flattened.sol\":17376:17413  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"SpageroMintableERC20_flattened.sol\":16898:17438  if (from == address(0)) {... */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":17452:17468  to == address(0) */\n      dup3\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":17448:17873  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"SpageroMintableERC20_flattened.sol\":17615:17627  _totalSupply */\n      0x02\n        /* \"SpageroMintableERC20_flattened.sol\":17615:17636  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"SpageroMintableERC20_flattened.sol\":17448:17873  if (to == address(0)) {... */\n      jump(tag_185)\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":17826:17839  _balances[to] */\n      dup3\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":17826:17835  _balances */\n      0x00\n        /* \"SpageroMintableERC20_flattened.sol\":17826:17839  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SpageroMintableERC20_flattened.sol\":17826:17848  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"SpageroMintableERC20_flattened.sol\":17448:17873  if (to == address(0)) {... */\n    tag_185:\n        /* \"SpageroMintableERC20_flattened.sol\":17903:17905  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":17888:17913  Transfer(from, to, value) */\n      and\n        /* \"SpageroMintableERC20_flattened.sol\":17897:17901  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroMintableERC20_flattened.sol\":17888:17913  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"SpageroMintableERC20_flattened.sol\":17907:17912  value */\n      dup4\n        /* \"SpageroMintableERC20_flattened.sol\":17888:17913  Transfer(from, to, value) */\n      mload(0x40)\n      tag_186\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"SpageroMintableERC20_flattened.sol\":17888:17913  Transfer(from, to, value) */\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SpageroMintableERC20_flattened.sol\":16813:17920  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_24:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_190:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_190)\n    tag_192:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_187:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_194:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_27:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_196:\n        /* \"#utility.yul\":913:942   */\n      tag_197\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_187\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_37:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_201:\n        /* \"#utility.yul\":1563:1592   */\n      tag_202\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_187\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_203\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_187\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_49:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_206:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_53:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_208:\n        /* \"#utility.yul\":2236:2265   */\n      tag_209\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_187\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_74:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_212:\n        /* \"#utility.yul\":2652:2681   */\n      tag_213\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_187\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_214\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_187\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_82:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_216:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_217:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3706   */\n    tag_180:\n        /* \"#utility.yul\":3549:3558   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3570:3580   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3567:3700   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3622:3632   */\n      0x4e487b71\n        /* \"#utility.yul\":3617:3620   */\n      0xe0\n        /* \"#utility.yul\":3613:3633   */\n      shl\n        /* \"#utility.yul\":3610:3611   */\n      0x00\n        /* \"#utility.yul\":3603:3634   */\n      mstore\n        /* \"#utility.yul\":3657:3661   */\n      0x11\n        /* \"#utility.yul\":3654:3655   */\n      0x04\n        /* \"#utility.yul\":3647:3662   */\n      mstore\n        /* \"#utility.yul\":3685:3689   */\n      0x24\n        /* \"#utility.yul\":3682:3683   */\n      0x00\n        /* \"#utility.yul\":3675:3690   */\n      revert\n\n    auxdata: 0xa2646970667358221220cb31ea7d175bed56dcb75f9bd4e864113fcc9ddb17f602127f0995680471056c64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_978": {
									"entryPoint": null,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_956": {
									"entryPoint": 152,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4322:1",
										"nodeType": "YulBlock",
										"src": "0:4322:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "210:780:1",
													"nodeType": "YulBlock",
													"src": "210:780:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:1",
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nativeSrc": "261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nativeSrc": "261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:1",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nativeSrc": "234:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nativeSrc": "230:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nativeSrc": "223:35:1",
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nativeSrc": "220:55:1",
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nativeSrc": "284:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nativeSrc": "294:13:1",
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:1",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:1",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nativeSrc": "330:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:1",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nativeSrc": "326:18:1",
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:1",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:1",
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nativeSrc": "369:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nativeSrc": "369:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nativeSrc": "356:10:1",
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nativeSrc": "353:36:1",
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nativeSrc": "398:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:1",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nativeSrc": "408:7:1",
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:1",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:1",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nativeSrc": "438:9:1",
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:1",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:1",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nativeSrc": "498:13:1",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:1",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nativeSrc": "494:22:1",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:1",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nativeSrc": "490:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nativeSrc": "486:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nativeSrc": "474:53:1",
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:1",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:1",
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nativeSrc": "588:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nativeSrc": "588:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nativeSrc": "542:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nativeSrc": "562:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nativeSrc": "539:46:1",
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nativeSrc": "536:72:1",
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:1",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nativeSrc": "617:22:1",
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nativeSrc": "617:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nativeSrc": "648:18:1",
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nativeSrc": "648:18:1",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nativeSrc": "675:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:1",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:1",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:1",
																"nodeType": "YulBlock",
																"src": "737:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:1",
																					"nodeType": "YulLiteral",
																					"src": "746:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:1",
																					"nodeType": "YulLiteral",
																					"src": "749:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:1"
																			},
																			"nativeSrc": "739:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:1"
																		},
																		"nativeSrc": "739:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nativeSrc": "708:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:1",
																				"nodeType": "YulLiteral",
																				"src": "725:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nativeSrc": "704:26:1",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nativeSrc": "701:35:1",
																"nodeType": "YulFunctionCall",
																"src": "701:35:1"
															},
															"nativeSrc": "698:55:1",
															"nodeType": "YulIf",
															"src": "698:55:1"
														},
														{
															"nativeSrc": "762:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:1",
																"nodeType": "YulLiteral",
																"src": "771:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:1",
																	"nodeType": "YulTypedName",
																	"src": "766:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:1",
																"nodeType": "YulBlock",
																"src": "827:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:1"
																							},
																							"nativeSrc": "852:14:1",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:1"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:1"
																					},
																					"nativeSrc": "848:23:1",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:1"
																									},
																									"nativeSrc": "883:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:1"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:1"
																							},
																							"nativeSrc": "879:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:1"
																					},
																					"nativeSrc": "873:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:1"
																			},
																			"nativeSrc": "841:63:1",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:1"
																		},
																		"nativeSrc": "841:63:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:1"
																},
																"nativeSrc": "789:9:1",
																"nodeType": "YulFunctionCall",
																"src": "789:9:1"
															},
															"nativeSrc": "781:133:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:1",
																"nodeType": "YulBlock",
																"src": "799:19:1",
																"statements": [
																	{
																		"nativeSrc": "801:15:1",
																		"nodeType": "YulAssignment",
																		"src": "801:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:1"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:1"
																			},
																			"nativeSrc": "806:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:1",
																"nodeType": "YulBlock",
																"src": "785:3:1",
																"statements": []
															},
															"src": "781:133:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:1"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:1"
																				},
																				"nativeSrc": "934:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:1",
																				"nodeType": "YulLiteral",
																				"src": "951:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:1"
																		},
																		"nativeSrc": "930:26:1",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:1",
																		"nodeType": "YulLiteral",
																		"src": "958:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:1"
																},
																"nativeSrc": "923:37:1",
																"nodeType": "YulFunctionCall",
																"src": "923:37:1"
															},
															"nativeSrc": "923:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:1"
														},
														{
															"nativeSrc": "969:15:1",
															"nodeType": "YulAssignment",
															"src": "969:15:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:1",
																"nodeType": "YulIdentifier",
																"src": "978:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:1",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:1",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:1",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:844:1"
											},
											{
												"body": {
													"nativeSrc": "1113:444:1",
													"nodeType": "YulBlock",
													"src": "1113:444:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1159:16:1",
																"nodeType": "YulBlock",
																"src": "1159:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1168:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1171:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1171:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1161:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:1"
																			},
																			"nativeSrc": "1161:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1161:12:1"
																		},
																		"nativeSrc": "1161:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1161:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1134:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1134:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1143:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1130:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:1"
																		},
																		"nativeSrc": "1130:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1126:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:1"
																},
																"nativeSrc": "1126:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1126:32:1"
															},
															"nativeSrc": "1123:52:1",
															"nodeType": "YulIf",
															"src": "1123:52:1"
														},
														{
															"nativeSrc": "1184:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1204:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1204:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1198:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:1"
																},
																"nativeSrc": "1198:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1198:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1188:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1223:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1241:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1245:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1245:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1237:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:1"
																		},
																		"nativeSrc": "1237:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1237:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:1"
																},
																"nativeSrc": "1233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1233:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1227:2:1",
																	"nodeType": "YulTypedName",
																	"src": "1227:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1278:16:1",
																"nodeType": "YulBlock",
																"src": "1278:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1290:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1290:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1280:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:1"
																			},
																			"nativeSrc": "1280:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1280:12:1"
																		},
																		"nativeSrc": "1280:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1266:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1274:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "1274:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1263:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:1"
																},
																"nativeSrc": "1263:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1263:14:1"
															},
															"nativeSrc": "1260:34:1",
															"nodeType": "YulIf",
															"src": "1260:34:1"
														},
														{
															"nativeSrc": "1303:71:1",
															"nodeType": "YulAssignment",
															"src": "1303:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1357:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1342:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:1"
																		},
																		"nativeSrc": "1342:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1366:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1313:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1313:28:1"
																},
																"nativeSrc": "1313:61:1",
																"nodeType": "YulFunctionCall",
																"src": "1313:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1303:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:1"
																}
															]
														},
														{
															"nativeSrc": "1383:41:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1383:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1409:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1405:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:1"
																		},
																		"nativeSrc": "1405:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1399:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1399:5:1"
																},
																"nativeSrc": "1399:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1399:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1387:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1387:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1453:16:1",
																"nodeType": "YulBlock",
																"src": "1453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:1"
																			},
																			"nativeSrc": "1455:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:1"
																		},
																		"nativeSrc": "1455:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1439:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1439:8:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1449:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "1449:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:1"
																},
																"nativeSrc": "1436:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1436:16:1"
															},
															"nativeSrc": "1433:36:1",
															"nodeType": "YulIf",
															"src": "1433:36:1"
														},
														{
															"nativeSrc": "1478:73:1",
															"nodeType": "YulAssignment",
															"src": "1478:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1521:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1532:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1532:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1517:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:1"
																		},
																		"nativeSrc": "1517:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1543:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1543:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1488:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1488:28:1"
																},
																"nativeSrc": "1488:63:1",
																"nodeType": "YulFunctionCall",
																"src": "1488:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1478:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "995:562:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1071:9:1",
														"nodeType": "YulTypedName",
														"src": "1071:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1082:7:1",
														"nodeType": "YulTypedName",
														"src": "1082:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1094:6:1",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1102:6:1",
														"nodeType": "YulTypedName",
														"src": "1102:6:1",
														"type": ""
													}
												],
												"src": "995:562:1"
											},
											{
												"body": {
													"nativeSrc": "1617:325:1",
													"nodeType": "YulBlock",
													"src": "1617:325:1",
													"statements": [
														{
															"nativeSrc": "1627:22:1",
															"nodeType": "YulAssignment",
															"src": "1627:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1644:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1644:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1637:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:1"
																},
																"nativeSrc": "1637:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1637:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1627:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:1"
																}
															]
														},
														{
															"nativeSrc": "1658:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1658:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1688:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1688:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1684:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:1"
																},
																"nativeSrc": "1684:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1684:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1662:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1662:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1735:31:1",
																"nodeType": "YulBlock",
																"src": "1735:31:1",
																"statements": [
																	{
																		"nativeSrc": "1737:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1737:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1751:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1751:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1759:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1759:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1747:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1747:3:1"
																			},
																			"nativeSrc": "1747:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1747:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1737:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1715:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1715:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1708:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:1"
																},
																"nativeSrc": "1708:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1708:26:1"
															},
															"nativeSrc": "1705:61:1",
															"nodeType": "YulIf",
															"src": "1705:61:1"
														},
														{
															"body": {
																"nativeSrc": "1825:111:1",
																"nodeType": "YulBlock",
																"src": "1825:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1853:3:1",
																							"nodeType": "YulLiteral",
																							"src": "1853:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1858:10:1",
																							"nodeType": "YulLiteral",
																							"src": "1858:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1849:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1849:3:1"
																					},
																					"nativeSrc": "1849:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1849:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1839:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:1"
																			},
																			"nativeSrc": "1839:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:31:1"
																		},
																		"nativeSrc": "1839:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1893:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1893:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1883:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:1"
																			},
																			"nativeSrc": "1883:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1883:15:1"
																		},
																		"nativeSrc": "1883:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1883:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1918:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1918:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1921:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1921:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1911:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1911:6:1"
																			},
																			"nativeSrc": "1911:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1911:15:1"
																		},
																		"nativeSrc": "1911:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1911:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1781:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1781:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1804:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1804:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1812:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1812:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1801:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1801:2:1"
																		},
																		"nativeSrc": "1801:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1778:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:1"
																},
																"nativeSrc": "1778:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1778:38:1"
															},
															"nativeSrc": "1775:161:1",
															"nodeType": "YulIf",
															"src": "1775:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1562:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1597:4:1",
														"nodeType": "YulTypedName",
														"src": "1597:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:1",
														"nodeType": "YulTypedName",
														"src": "1606:6:1",
														"type": ""
													}
												],
												"src": "1562:380:1"
											},
											{
												"body": {
													"nativeSrc": "2003:65:1",
													"nodeType": "YulBlock",
													"src": "2003:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2020:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2023:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2013:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:1"
																},
																"nativeSrc": "2013:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2013:14:1"
															},
															"nativeSrc": "2013:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2013:14:1"
														},
														{
															"nativeSrc": "2036:26:1",
															"nodeType": "YulAssignment",
															"src": "2036:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2057:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2044:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2044:9:1"
																},
																"nativeSrc": "2044:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2044:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2036:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2036:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1947:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1986:3:1",
														"nodeType": "YulTypedName",
														"src": "1986:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1994:4:1",
														"nodeType": "YulTypedName",
														"src": "1994:4:1",
														"type": ""
													}
												],
												"src": "1947:121:1"
											},
											{
												"body": {
													"nativeSrc": "2154:437:1",
													"nodeType": "YulBlock",
													"src": "2154:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2187:398:1",
																"nodeType": "YulBlock",
																"src": "2187:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2208:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2211:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2211:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2201:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:1"
																			},
																			"nativeSrc": "2201:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:16:1"
																		},
																		"nativeSrc": "2201:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:16:1"
																	},
																	{
																		"nativeSrc": "2230:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2230:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2252:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2255:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2255:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2242:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:1"
																			},
																			"nativeSrc": "2242:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2234:4:1",
																				"nodeType": "YulTypedName",
																				"src": "2234:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2273:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2273:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2296:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "2296:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2306:1:1",
																							"nodeType": "YulLiteral",
																							"src": "2306:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2313:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "2313:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2325:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2325:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2309:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2309:3:1"
																							},
																							"nativeSrc": "2309:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2309:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2302:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2302:3:1"
																					},
																					"nativeSrc": "2302:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2302:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2292:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2292:3:1"
																			},
																			"nativeSrc": "2292:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2292:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2277:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2277:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2367:23:1",
																			"nodeType": "YulBlock",
																			"src": "2367:23:1",
																			"statements": [
																				{
																					"nativeSrc": "2369:19:1",
																					"nodeType": "YulAssignment",
																					"src": "2369:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2384:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2384:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2369:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "2369:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2349:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "2349:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2361:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2361:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2346:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2346:2:1"
																			},
																			"nativeSrc": "2346:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:20:1"
																		},
																		"nativeSrc": "2343:47:1",
																		"nodeType": "YulIf",
																		"src": "2343:47:1"
																	},
																	{
																		"nativeSrc": "2403:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2403:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2417:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "2417:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2427:1:1",
																							"nodeType": "YulLiteral",
																							"src": "2427:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2434:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2434:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2439:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2439:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2430:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2430:3:1"
																							},
																							"nativeSrc": "2430:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2430:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2423:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2423:3:1"
																					},
																					"nativeSrc": "2423:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2423:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2413:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2413:3:1"
																			},
																			"nativeSrc": "2413:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2413:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2407:2:1",
																				"nodeType": "YulTypedName",
																				"src": "2407:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2457:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2457:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2470:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "2470:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2461:5:1",
																				"nodeType": "YulTypedName",
																				"src": "2461:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2555:20:1",
																			"nodeType": "YulBlock",
																			"src": "2555:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2564:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2564:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2571:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2571:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2557:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2557:6:1"
																						},
																						"nativeSrc": "2557:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2557:16:1"
																					},
																					"nativeSrc": "2557:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "2557:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2505:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2505:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2512:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2512:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2502:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2502:2:1"
																			},
																			"nativeSrc": "2502:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2502:13:1"
																		},
																		"nativeSrc": "2494:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2516:26:1",
																			"nodeType": "YulBlock",
																			"src": "2516:26:1",
																			"statements": [
																				{
																					"nativeSrc": "2518:22:1",
																					"nodeType": "YulAssignment",
																					"src": "2518:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2531:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2531:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2538:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2538:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2527:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2527:3:1"
																						},
																						"nativeSrc": "2527:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2527:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2518:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "2518:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2498:3:1",
																			"nodeType": "YulBlock",
																			"src": "2498:3:1",
																			"statements": []
																		},
																		"src": "2494:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2170:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2170:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2167:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2167:2:1"
																},
																"nativeSrc": "2167:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2167:11:1"
															},
															"nativeSrc": "2164:421:1",
															"nodeType": "YulIf",
															"src": "2164:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2073:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2126:5:1",
														"nodeType": "YulTypedName",
														"src": "2126:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2133:3:1",
														"nodeType": "YulTypedName",
														"src": "2133:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2138:10:1",
														"nodeType": "YulTypedName",
														"src": "2138:10:1",
														"type": ""
													}
												],
												"src": "2073:518:1"
											},
											{
												"body": {
													"nativeSrc": "2681:81:1",
													"nodeType": "YulBlock",
													"src": "2681:81:1",
													"statements": [
														{
															"nativeSrc": "2691:65:1",
															"nodeType": "YulAssignment",
															"src": "2691:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2706:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2706:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2724:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2724:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2727:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2727:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2720:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2720:3:1"
																								},
																								"nativeSrc": "2720:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2720:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2737:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2737:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2733:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2733:3:1"
																								},
																								"nativeSrc": "2733:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2733:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2716:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2716:3:1"
																						},
																						"nativeSrc": "2716:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2716:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2712:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2712:3:1"
																				},
																				"nativeSrc": "2712:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2712:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2702:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:1"
																		},
																		"nativeSrc": "2702:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2748:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2748:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2751:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2751:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2744:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:1"
																		},
																		"nativeSrc": "2744:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2699:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2699:2:1"
																},
																"nativeSrc": "2699:57:1",
																"nodeType": "YulFunctionCall",
																"src": "2699:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2691:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2691:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2596:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2658:4:1",
														"nodeType": "YulTypedName",
														"src": "2658:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2664:3:1",
														"nodeType": "YulTypedName",
														"src": "2664:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2672:4:1",
														"nodeType": "YulTypedName",
														"src": "2672:4:1",
														"type": ""
													}
												],
												"src": "2596:166:1"
											},
											{
												"body": {
													"nativeSrc": "2863:1249:1",
													"nodeType": "YulBlock",
													"src": "2863:1249:1",
													"statements": [
														{
															"nativeSrc": "2873:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2873:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2893:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2893:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2887:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2887:5:1"
																},
																"nativeSrc": "2887:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2887:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2877:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2877:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2940:22:1",
																"nodeType": "YulBlock",
																"src": "2940:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2942:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2942:16:1"
																			},
																			"nativeSrc": "2942:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:18:1"
																		},
																		"nativeSrc": "2942:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2942:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2912:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2928:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2928:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2932:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2932:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2924:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:1"
																				},
																				"nativeSrc": "2924:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2936:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2920:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:1"
																		},
																		"nativeSrc": "2920:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2909:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2909:2:1"
																},
																"nativeSrc": "2909:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2909:30:1"
															},
															"nativeSrc": "2906:56:1",
															"nodeType": "YulIf",
															"src": "2906:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3015:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3015:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3053:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3053:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3047:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3047:5:1"
																				},
																				"nativeSrc": "3047:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3047:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3021:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "3021:25:1"
																		},
																		"nativeSrc": "3021:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3021:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3061:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2971:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2971:43:1"
																},
																"nativeSrc": "2971:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2971:97:1"
															},
															"nativeSrc": "2971:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "2971:97:1"
														},
														{
															"nativeSrc": "3077:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3077:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3094:1:1",
																"nodeType": "YulLiteral",
																"src": "3094:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3081:9:1",
																	"nodeType": "YulTypedName",
																	"src": "3081:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3104:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3104:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3123:4:1",
																"nodeType": "YulLiteral",
																"src": "3123:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3108:11:1",
																	"nodeType": "YulTypedName",
																	"src": "3108:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3136:17:1",
															"nodeType": "YulAssignment",
															"src": "3136:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3149:4:1",
																"nodeType": "YulLiteral",
																"src": "3149:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3136:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3136:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3199:656:1",
																		"nodeType": "YulBlock",
																		"src": "3199:656:1",
																		"statements": [
																			{
																				"nativeSrc": "3213:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3213:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3232:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3232:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3244:2:1",
																									"nodeType": "YulLiteral",
																									"src": "3244:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3240:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3240:3:1"
																							},
																							"nativeSrc": "3240:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3240:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3228:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3228:3:1"
																					},
																					"nativeSrc": "3228:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3217:7:1",
																						"nodeType": "YulTypedName",
																						"src": "3217:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3261:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3261:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3305:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3305:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3275:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "3275:29:1"
																					},
																					"nativeSrc": "3275:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3275:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3265:6:1",
																						"nodeType": "YulTypedName",
																						"src": "3265:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3323:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3323:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3332:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3327:1:1",
																						"nodeType": "YulTypedName",
																						"src": "3327:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3410:172:1",
																					"nodeType": "YulBlock",
																					"src": "3410:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3435:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3435:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3453:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3453:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3458:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "3458:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3449:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3449:3:1"
																												},
																												"nativeSrc": "3449:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3449:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3443:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "3443:5:1"
																										},
																										"nativeSrc": "3443:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3443:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3428:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3428:6:1"
																								},
																								"nativeSrc": "3428:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3428:42:1"
																							},
																							"nativeSrc": "3428:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3428:42:1"
																						},
																						{
																							"nativeSrc": "3487:24:1",
																							"nodeType": "YulAssignment",
																							"src": "3487:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3501:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3501:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3509:1:1",
																										"nodeType": "YulLiteral",
																										"src": "3509:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3497:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3497:3:1"
																								},
																								"nativeSrc": "3497:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3497:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3487:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3487:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3528:40:1",
																							"nodeType": "YulAssignment",
																							"src": "3528:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3545:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "3545:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3556:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "3556:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3541:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3541:3:1"
																								},
																								"nativeSrc": "3541:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3541:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3528:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3528:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3357:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "3357:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3360:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "3360:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3354:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3354:2:1"
																					},
																					"nativeSrc": "3354:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3354:14:1"
																				},
																				"nativeSrc": "3346:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3369:28:1",
																					"nodeType": "YulBlock",
																					"src": "3369:28:1",
																					"statements": [
																						{
																							"nativeSrc": "3371:24:1",
																							"nodeType": "YulAssignment",
																							"src": "3371:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3380:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "3380:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3383:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "3383:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:1"
																								},
																								"nativeSrc": "3376:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3371:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "3371:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3350:3:1",
																					"nodeType": "YulBlock",
																					"src": "3350:3:1",
																					"statements": []
																				},
																				"src": "3346:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:1",
																					"nodeType": "YulBlock",
																					"src": "3630:166:1",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:1"
																										},
																										"nativeSrc": "3671:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:1"
																								},
																								"nativeSrc": "3665:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:1",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:1"
																																		},
																																		"nativeSrc": "3750:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:1"
																																},
																																"nativeSrc": "3746:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:1"
																																},
																																"nativeSrc": "3772:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:1"
																														},
																														"nativeSrc": "3742:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:1"
																												},
																												"nativeSrc": "3738:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:1"
																										},
																										"nativeSrc": "3723:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:1"
																								},
																								"nativeSrc": "3708:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:1"
																							},
																							"nativeSrc": "3708:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:1"
																					},
																					"nativeSrc": "3598:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:1"
																				},
																				"nativeSrc": "3595:201:1",
																				"nodeType": "YulIf",
																				"src": "3595:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:1",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:1"
																									},
																									"nativeSrc": "3826:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:1"
																							},
																							"nativeSrc": "3822:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:1"
																					},
																					"nativeSrc": "3809:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:1"
																				},
																				"nativeSrc": "3809:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:1"
																			}
																		]
																	},
																	"nativeSrc": "3192:663:1",
																	"nodeType": "YulCase",
																	"src": "3192:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:1",
																		"nodeType": "YulBlock",
																		"src": "3872:234:1",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:1",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:1",
																					"nodeType": "YulBlock",
																					"src": "3935:67:1",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:1",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:1"
																										},
																										"nativeSrc": "3968:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:1"
																								},
																								"nativeSrc": "3962:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:1"
																				},
																				"nativeSrc": "3913:89:1",
																				"nodeType": "YulIf",
																				"src": "3913:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:1"
																							},
																							"nativeSrc": "4028:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:1"
																					},
																					"nativeSrc": "4015:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:1"
																				},
																				"nativeSrc": "4015:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:1"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:1",
																	"nodeType": "YulCase",
																	"src": "3864:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3172:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3180:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3169:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3169:2:1"
																},
																"nativeSrc": "3169:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3169:14:1"
															},
															"nativeSrc": "3162:944:1",
															"nodeType": "YulSwitch",
															"src": "3162:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2767:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2848:4:1",
														"nodeType": "YulTypedName",
														"src": "2848:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2854:3:1",
														"nodeType": "YulTypedName",
														"src": "2854:3:1",
														"type": ""
													}
												],
												"src": "2767:1345:1"
											},
											{
												"body": {
													"nativeSrc": "4218:102:1",
													"nodeType": "YulBlock",
													"src": "4218:102:1",
													"statements": [
														{
															"nativeSrc": "4228:26:1",
															"nodeType": "YulAssignment",
															"src": "4228:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4240:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4240:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4251:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4236:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4236:3:1"
																},
																"nativeSrc": "4236:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4236:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4228:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4228:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4270:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4270:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4285:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4285:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4301:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4301:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4306:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4306:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4297:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4297:3:1"
																						},
																						"nativeSrc": "4297:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4297:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4310:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4310:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4293:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4293:3:1"
																				},
																				"nativeSrc": "4293:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4293:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4281:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4281:3:1"
																		},
																		"nativeSrc": "4281:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4281:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4263:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4263:6:1"
																},
																"nativeSrc": "4263:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4263:51:1"
															},
															"nativeSrc": "4263:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4263:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4117:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4187:9:1",
														"nodeType": "YulTypedName",
														"src": "4187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4198:6:1",
														"nodeType": "YulTypedName",
														"src": "4198:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4209:4:1",
														"nodeType": "YulTypedName",
														"src": "4209:4:1",
														"type": ""
													}
												],
												"src": "4117:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000cc138038062000cc18339810160408190526200003391620001aa565b33828260036200004483826200029a565b5060046200005382826200029a565b5050506001600160a01b0381166200008457604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200008f8162000098565b50505062000366565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200010d575f80fd5b81516001600160401b03808211156200012a576200012a620000e9565b604051601f8301601f19908116603f01168101908282118183101715620001555762000155620000e9565b816040528381526020925086602085880101111562000172575f80fd5b5f91505b8382101562000195578582018301518183018401529082019062000176565b5f602085830101528094505050505092915050565b5f8060408385031215620001bc575f80fd5b82516001600160401b0380821115620001d3575f80fd5b620001e186838701620000fd565b93506020850151915080821115620001f7575f80fd5b506200020685828601620000fd565b9150509250929050565b600181811c908216806200022557607f821691505b6020821081036200024457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200029557805f5260205f20601f840160051c81016020851015620002715750805b601f840160051c820191505b8181101562000292575f81556001016200027d565b50505b505050565b81516001600160401b03811115620002b657620002b6620000e9565b620002ce81620002c7845462000210565b846200024a565b602080601f83116001811462000304575f8415620002ec5750858301515b5f19600386901b1c1916600185901b1785556200035e565b5f85815260208120601f198616915b82811015620003345788860151825594840194600190910190840162000313565b50858210156200035257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61094d80620003745f395ff3fe608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806370a082311161009357806395d89b411161006357806395d89b41146101ef578063a9059cbb146101f7578063dd62ed3e1461020a578063f2fde38b14610242575f80fd5b806370a0823114610191578063715018a6146101b957806379cc6790146101c15780638da5cb5b146101d4575f80fd5b806323b872dd116100ce57806323b872dd14610147578063313ce5671461015a57806340c10f191461016957806342966c681461017e575f80fd5b806306fdde03146100f4578063095ea7b31461011257806318160ddd14610135575b5f80fd5b6100fc610255565b6040516101099190610790565b60405180910390f35b6101256101203660046107f7565b6102e5565b6040519015158152602001610109565b6002545b604051908152602001610109565b61012561015536600461081f565b6102fe565b60405160128152602001610109565b61017c6101773660046107f7565b610321565b005b61017c61018c366004610858565b610337565b61013961019f36600461086f565b6001600160a01b03165f9081526020819052604090205490565b61017c610344565b61017c6101cf3660046107f7565b610357565b6005546040516001600160a01b039091168152602001610109565b6100fc61036c565b6101256102053660046107f7565b61037b565b61013961021836600461088f565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61017c61025036600461086f565b610388565b606060038054610264906108c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610290906108c0565b80156102db5780601f106102b2576101008083540402835291602001916102db565b820191905f5260205f20905b8154815290600101906020018083116102be57829003601f168201915b5050505050905090565b5f336102f28185856103c7565b60019150505b92915050565b5f3361030b8582856103d9565b610316858585610455565b506001949350505050565b6103296104b2565b61033382826104df565b5050565b6103413382610513565b50565b61034c6104b2565b6103555f610547565b565b6103628233836103d9565b6103338282610513565b606060048054610264906108c0565b5f336102f2818585610455565b6103906104b2565b6001600160a01b0381166103be57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61034181610547565b6103d48383836001610598565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561044f578181101561044157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103b5565b61044f84848484035f610598565b50505050565b6001600160a01b03831661047e57604051634b637e8f60e11b81525f60048201526024016103b5565b6001600160a01b0382166104a75760405163ec442f0560e01b81525f60048201526024016103b5565b6103d483838361066a565b6005546001600160a01b031633146103555760405163118cdaa760e01b81523360048201526024016103b5565b6001600160a01b0382166105085760405163ec442f0560e01b81525f60048201526024016103b5565b6103335f838361066a565b6001600160a01b03821661053c57604051634b637e8f60e11b81525f60048201526024016103b5565b610333825f8361066a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166105c15760405163e602df0560e01b81525f60048201526024016103b5565b6001600160a01b0383166105ea57604051634a1406b160e11b81525f60048201526024016103b5565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561044f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161065c91815260200190565b60405180910390a350505050565b6001600160a01b038316610694578060025f82825461068991906108f8565b909155506107049050565b6001600160a01b0383165f90815260208190526040902054818110156106e65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103b5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166107205760028054829003905561073e565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161078391815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156107bc578581018301518582016040015282016107a0565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107f2575f80fd5b919050565b5f8060408385031215610808575f80fd5b610811836107dc565b946020939093013593505050565b5f805f60608486031215610831575f80fd5b61083a846107dc565b9250610848602085016107dc565b9150604084013590509250925092565b5f60208284031215610868575f80fd5b5035919050565b5f6020828403121561087f575f80fd5b610888826107dc565b9392505050565b5f80604083850312156108a0575f80fd5b6108a9836107dc565b91506108b7602084016107dc565b90509250929050565b600181811c908216806108d457607f821691505b6020821081036108f257634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102f857634e487b7160e01b5f52601160045260245ffdfea2646970667358221220cb31ea7d175bed56dcb75f9bd4e864113fcc9ddb17f602127f0995680471056c64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC1 CODESIZE SUB DUP1 PUSH3 0xCC1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x1AA JUMP JUMPDEST CALLER DUP3 DUP3 PUSH1 0x3 PUSH3 0x44 DUP4 DUP3 PUSH3 0x29A JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x53 DUP3 DUP3 PUSH3 0x29A JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x84 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x8F DUP2 PUSH3 0x98 JUMP JUMPDEST POP POP POP PUSH3 0x366 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x12A JUMPI PUSH3 0x12A PUSH3 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x155 JUMPI PUSH3 0x155 PUSH3 0xE9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x195 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x176 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x1E1 DUP7 DUP4 DUP8 ADD PUSH3 0xFD JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x206 DUP6 DUP3 DUP7 ADD PUSH3 0xFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x225 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x244 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x295 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x271 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x292 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x27D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2B6 JUMPI PUSH3 0x2B6 PUSH3 0xE9 JUMP JUMPDEST PUSH3 0x2CE DUP2 PUSH3 0x2C7 DUP5 SLOAD PUSH3 0x210 JUMP JUMPDEST DUP5 PUSH3 0x24A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x304 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x2EC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x35E JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x334 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x313 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x352 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x94D DUP1 PUSH3 0x374 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x135 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x81F JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x344 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x36C JUMP JUMPDEST PUSH2 0x125 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH2 0x139 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x290 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2F2 DUP2 DUP6 DUP6 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x30B DUP6 DUP3 DUP6 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x316 DUP6 DUP6 DUP6 PUSH2 0x455 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x329 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x333 DUP3 DUP3 PUSH2 0x4DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x341 CALLER DUP3 PUSH2 0x513 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x34C PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x355 PUSH0 PUSH2 0x547 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x362 DUP3 CALLER DUP4 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x333 DUP3 DUP3 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2F2 DUP2 DUP6 DUP6 PUSH2 0x455 JUMP JUMPDEST PUSH2 0x390 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x341 DUP2 PUSH2 0x547 JUMP JUMPDEST PUSH2 0x3D4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x598 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x44F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x44F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x598 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x3D4 DUP4 DUP4 DUP4 PUSH2 0x66A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x333 PUSH0 DUP4 DUP4 PUSH2 0x66A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x333 DUP3 PUSH0 DUP4 PUSH2 0x66A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x44F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x694 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x704 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x720 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7BC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A0 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x811 DUP4 PUSH2 0x7DC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x831 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x83A DUP5 PUSH2 0x7DC JUMP JUMPDEST SWAP3 POP PUSH2 0x848 PUSH1 0x20 DUP6 ADD PUSH2 0x7DC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x868 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP3 PUSH2 0x7DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8A9 DUP4 PUSH2 0x7DC JUMP JUMPDEST SWAP2 POP PUSH2 0x8B7 PUSH1 0x20 DUP5 ADD PUSH2 0x7DC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8D4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB BALANCE 0xEA PUSH30 0x175BED56DCB75F9BD4E864113FCC9DDB17F602127F0995680471056C6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "25983:265:0:-:0;;;26045:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26131:10;26107:5;26114:7;12549:5;:13;26107:5;12549;:13;:::i;:::-;-1:-1:-1;12572:7:0;:17;12582:7;12572;:17;:::i;:::-;-1:-1:-1;;;;;;;;24089:26:0;;24085:95;;24138:31;;-1:-1:-1;;;24138:31:0;;24166:1;24138:31;;;4263:51:1;4236:18;;24138:31:0;;;;;;;24085:95;24189:32;24208:12;24189:18;:32::i;:::-;24041:187;26045:100;;25983:265;;25728:187;25820:6;;;-1:-1:-1;;;;;25836:17:0;;;-1:-1:-1;;;;;;25836:17:0;;;;;;;25868:40;;25820:6;;;25836:17;25820:6;;25868:40;;25801:16;;25868:40;25791:124;25728:187;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:1;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:518::-;2175:2;2170:3;2167:11;2164:421;;;2211:5;2208:1;2201:16;2255:4;2252:1;2242:18;2325:2;2313:10;2309:19;2306:1;2302:27;2296:4;2292:38;2361:4;2349:10;2346:20;2343:47;;;-1:-1:-1;2384:4:1;2343:47;2439:2;2434:3;2430:12;2427:1;2423:20;2417:4;2413:31;2403:41;;2494:81;2512:2;2505:5;2502:13;2494:81;;;2571:1;2557:16;;2538:1;2527:13;2494:81;;;2498:3;;2164:421;2073:518;;;:::o;2767:1345::-;2887:10;;-1:-1:-1;;;;;2909:30:1;;2906:56;;;2942:18;;:::i;:::-;2971:97;3061:6;3021:38;3053:4;3047:11;3021:38;:::i;:::-;3015:4;2971:97;:::i;:::-;3123:4;;3180:2;3169:14;;3197:1;3192:663;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:1;;;3962:26;3913:89;-1:-1:-1;;2724:1:1;2720:11;;;2716:24;2712:29;2702:40;2748:1;2744:11;;;2699:57;4015:81;;3162:944;;3192:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3228:20:1;;;3346:236;3360:7;3357:1;3354:14;3346:236;;;3449:19;;;3443:26;3428:42;;3541:27;;;;3509:1;3497:14;;;;3376:19;;3346:236;;;3350:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:1;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;;;3842:1;3833:6;3830:1;3826:14;3822:22;3816:4;3809:36;3162:944;;;;;2767:1345;;:::o;4117:203::-;25983:265:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 967,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 1432,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_644": {
									"entryPoint": 1299,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_894": {
									"entryPoint": 1202,
									"id": 894,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 1247,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 985,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_956": {
									"entryPoint": 1351,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 1109,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 1642,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 741,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_811": {
									"entryPoint": 855,
									"id": 811,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_790": {
									"entryPoint": 823,
									"id": 790,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_993": {
									"entryPoint": 801,
									"id": 993,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 597,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_877": {
									"entryPoint": null,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_908": {
									"entryPoint": 836,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 876,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 766,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_936": {
									"entryPoint": 904,
									"id": 936,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 891,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3708:1",
										"nodeType": "YulBlock",
										"src": "0:3708:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:1",
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nativeSrc": "145:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:1",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:1",
																		"nodeType": "YulLiteral",
																		"src": "184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:21:1",
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nativeSrc": "166:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nativeSrc": "196:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nativeSrc": "210:13:1",
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:1",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:1",
																				"nodeType": "YulLiteral",
																				"src": "254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nativeSrc": "239:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nativeSrc": "232:34:1",
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nativeSrc": "232:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nativeSrc": "275:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:1",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:1",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:1",
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nativeSrc": "369:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:1",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nativeSrc": "365:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nativeSrc": "403:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nativeSrc": "399:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nativeSrc": "393:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nativeSrc": "358:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nativeSrc": "358:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nativeSrc": "302:13:1",
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nativeSrc": "294:140:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:1",
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nativeSrc": "318:15:1",
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nativeSrc": "323:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:1",
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nativeSrc": "454:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nativeSrc": "450:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nativeSrc": "443:42:1",
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nativeSrc": "443:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nativeSrc": "494:62:1",
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:1",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nativeSrc": "525:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:1",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nativeSrc": "542:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nativeSrc": "521:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nativeSrc": "506:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nativeSrc": "502:54:1",
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nativeSrc": "616:124:1",
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nativeSrc": "626:29:1",
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nativeSrc": "635:20:1",
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:1",
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:1",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:1",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nativeSrc": "720:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nativeSrc": "720:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:1",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:1",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nativeSrc": "699:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:1",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nativeSrc": "695:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nativeSrc": "684:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nativeSrc": "674:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nativeSrc": "667:50:1",
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nativeSrc": "664:70:1",
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:1",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:1",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nativeSrc": "832:167:1",
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:1",
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:1",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nativeSrc": "880:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nativeSrc": "880:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nativeSrc": "849:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:1",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nativeSrc": "845:32:1",
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nativeSrc": "842:52:1",
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nativeSrc": "903:39:1",
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nativeSrc": "913:29:1",
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nativeSrc": "951:42:1",
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:1",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nativeSrc": "961:32:1",
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:1",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:1",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:1",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nativeSrc": "1099:92:1",
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nativeSrc": "1109:26:1",
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nativeSrc": "1117:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nativeSrc": "1169:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nativeSrc": "1162:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nativeSrc": "1144:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nativeSrc": "1144:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:1",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:1",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:1",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nativeSrc": "1297:76:1",
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nativeSrc": "1307:26:1",
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nativeSrc": "1315:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nativeSrc": "1342:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nativeSrc": "1342:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:1",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:1",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:1",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nativeSrc": "1482:224:1",
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:1",
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nativeSrc": "1530:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nativeSrc": "1530:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nativeSrc": "1499:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nativeSrc": "1495:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nativeSrc": "1492:52:1",
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nativeSrc": "1553:39:1",
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nativeSrc": "1563:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nativeSrc": "1601:48:1",
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nativeSrc": "1630:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nativeSrc": "1611:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nativeSrc": "1658:42:1",
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nativeSrc": "1681:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nativeSrc": "1668:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:1",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:1",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:1",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:1",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nativeSrc": "1808:87:1",
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nativeSrc": "1818:26:1",
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nativeSrc": "1826:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nativeSrc": "1871:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nativeSrc": "1853:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nativeSrc": "1853:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:1",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:1",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:1",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nativeSrc": "1970:110:1",
													"nodeType": "YulBlock",
													"src": "1970:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:1",
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nativeSrc": "2018:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nativeSrc": "2018:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nativeSrc": "1987:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nativeSrc": "1983:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nativeSrc": "1980:52:1",
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nativeSrc": "2041:33:1",
															"nodeType": "YulAssignment",
															"src": "2041:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2064:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2051:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:1"
																},
																"nativeSrc": "2051:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2051:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1900:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:1",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:1",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:1",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:180:1"
											},
											{
												"body": {
													"nativeSrc": "2155:116:1",
													"nodeType": "YulBlock",
													"src": "2155:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2201:16:1",
																"nodeType": "YulBlock",
																"src": "2201:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2210:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2213:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2203:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:1"
																			},
																			"nativeSrc": "2203:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:1"
																		},
																		"nativeSrc": "2203:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2176:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2185:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2172:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:1"
																		},
																		"nativeSrc": "2172:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2197:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2168:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:1"
																},
																"nativeSrc": "2168:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2168:32:1"
															},
															"nativeSrc": "2165:52:1",
															"nodeType": "YulIf",
															"src": "2165:52:1"
														},
														{
															"nativeSrc": "2226:39:1",
															"nodeType": "YulAssignment",
															"src": "2226:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2255:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2236:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:1"
																},
																"nativeSrc": "2236:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2236:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2226:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2085:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2121:9:1",
														"nodeType": "YulTypedName",
														"src": "2121:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2132:7:1",
														"nodeType": "YulTypedName",
														"src": "2132:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2144:6:1",
														"nodeType": "YulTypedName",
														"src": "2144:6:1",
														"type": ""
													}
												],
												"src": "2085:186:1"
											},
											{
												"body": {
													"nativeSrc": "2377:102:1",
													"nodeType": "YulBlock",
													"src": "2377:102:1",
													"statements": [
														{
															"nativeSrc": "2387:26:1",
															"nodeType": "YulAssignment",
															"src": "2387:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2399:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2410:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2395:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:1"
																},
																"nativeSrc": "2395:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2395:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2387:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2429:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2444:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2460:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2465:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2456:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:1"
																						},
																						"nativeSrc": "2456:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2452:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:1"
																				},
																				"nativeSrc": "2452:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2440:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:1"
																		},
																		"nativeSrc": "2440:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:1"
																},
																"nativeSrc": "2422:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2422:51:1"
															},
															"nativeSrc": "2422:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2276:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2346:9:1",
														"nodeType": "YulTypedName",
														"src": "2346:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2357:6:1",
														"nodeType": "YulTypedName",
														"src": "2357:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2368:4:1",
														"nodeType": "YulTypedName",
														"src": "2368:4:1",
														"type": ""
													}
												],
												"src": "2276:203:1"
											},
											{
												"body": {
													"nativeSrc": "2571:173:1",
													"nodeType": "YulBlock",
													"src": "2571:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2617:16:1",
																"nodeType": "YulBlock",
																"src": "2617:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2626:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2629:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2619:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:1"
																			},
																			"nativeSrc": "2619:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:1"
																		},
																		"nativeSrc": "2619:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2592:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2601:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2588:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:1"
																		},
																		"nativeSrc": "2588:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2613:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2584:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:1"
																},
																"nativeSrc": "2584:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2584:32:1"
															},
															"nativeSrc": "2581:52:1",
															"nodeType": "YulIf",
															"src": "2581:52:1"
														},
														{
															"nativeSrc": "2642:39:1",
															"nodeType": "YulAssignment",
															"src": "2642:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2671:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2652:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:1"
																},
																"nativeSrc": "2652:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2652:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2642:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:1"
																}
															]
														},
														{
															"nativeSrc": "2690:48:1",
															"nodeType": "YulAssignment",
															"src": "2690:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2723:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2734:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:1"
																		},
																		"nativeSrc": "2719:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2700:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:1"
																},
																"nativeSrc": "2700:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2700:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2690:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2484:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2529:9:1",
														"nodeType": "YulTypedName",
														"src": "2529:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2540:7:1",
														"nodeType": "YulTypedName",
														"src": "2540:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2552:6:1",
														"nodeType": "YulTypedName",
														"src": "2552:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2560:6:1",
														"nodeType": "YulTypedName",
														"src": "2560:6:1",
														"type": ""
													}
												],
												"src": "2484:260:1"
											},
											{
												"body": {
													"nativeSrc": "2804:325:1",
													"nodeType": "YulBlock",
													"src": "2804:325:1",
													"statements": [
														{
															"nativeSrc": "2814:22:1",
															"nodeType": "YulAssignment",
															"src": "2814:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2828:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2831:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2824:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:1"
																},
																"nativeSrc": "2824:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2824:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2814:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:1"
																}
															]
														},
														{
															"nativeSrc": "2845:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2875:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2881:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2871:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:1"
																},
																"nativeSrc": "2871:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2871:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2849:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2922:31:1",
																"nodeType": "YulBlock",
																"src": "2922:31:1",
																"statements": [
																	{
																		"nativeSrc": "2924:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2924:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2938:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2946:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2934:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:1"
																			},
																			"nativeSrc": "2934:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2924:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2902:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:1"
																},
																"nativeSrc": "2895:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2895:26:1"
															},
															"nativeSrc": "2892:61:1",
															"nodeType": "YulIf",
															"src": "2892:61:1"
														},
														{
															"body": {
																"nativeSrc": "3012:111:1",
																"nodeType": "YulBlock",
																"src": "3012:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3033:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3040:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3045:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3036:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:1"
																					},
																					"nativeSrc": "3036:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3026:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:1"
																			},
																			"nativeSrc": "3026:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:1"
																		},
																		"nativeSrc": "3026:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3077:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3080:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3070:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:1"
																			},
																			"nativeSrc": "3070:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:1"
																		},
																		"nativeSrc": "3070:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3105:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3108:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3098:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:1"
																			},
																			"nativeSrc": "3098:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:1"
																		},
																		"nativeSrc": "3098:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2968:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2991:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2999:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2988:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:1"
																		},
																		"nativeSrc": "2988:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2965:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:1"
																},
																"nativeSrc": "2965:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2965:38:1"
															},
															"nativeSrc": "2962:161:1",
															"nodeType": "YulIf",
															"src": "2962:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2749:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2784:4:1",
														"nodeType": "YulTypedName",
														"src": "2784:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2793:6:1",
														"nodeType": "YulTypedName",
														"src": "2793:6:1",
														"type": ""
													}
												],
												"src": "2749:380:1"
											},
											{
												"body": {
													"nativeSrc": "3291:188:1",
													"nodeType": "YulBlock",
													"src": "3291:188:1",
													"statements": [
														{
															"nativeSrc": "3301:26:1",
															"nodeType": "YulAssignment",
															"src": "3301:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3313:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3313:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3309:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:3:1"
																},
																"nativeSrc": "3309:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3309:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3301:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3301:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3343:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3343:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3358:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3358:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3374:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3374:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3379:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3379:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3370:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3370:3:1"
																						},
																						"nativeSrc": "3370:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3370:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3383:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3383:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3366:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3366:3:1"
																				},
																				"nativeSrc": "3366:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3366:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3354:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3354:3:1"
																		},
																		"nativeSrc": "3354:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3354:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3336:6:1"
																},
																"nativeSrc": "3336:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3336:51:1"
															},
															"nativeSrc": "3336:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3336:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3418:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3418:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:1"
																		},
																		"nativeSrc": "3403:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3423:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3423:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3396:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:1"
																},
																"nativeSrc": "3396:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3396:34:1"
															},
															"nativeSrc": "3396:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3396:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3450:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3450:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3461:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3461:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3446:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:1"
																		},
																		"nativeSrc": "3446:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3466:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3466:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3439:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:1"
																},
																"nativeSrc": "3439:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3439:34:1"
															},
															"nativeSrc": "3439:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3439:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3134:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3244:9:1",
														"nodeType": "YulTypedName",
														"src": "3244:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3255:6:1",
														"nodeType": "YulTypedName",
														"src": "3255:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3263:6:1",
														"nodeType": "YulTypedName",
														"src": "3263:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3271:6:1",
														"nodeType": "YulTypedName",
														"src": "3271:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3282:4:1",
														"nodeType": "YulTypedName",
														"src": "3282:4:1",
														"type": ""
													}
												],
												"src": "3134:345:1"
											},
											{
												"body": {
													"nativeSrc": "3532:174:1",
													"nodeType": "YulBlock",
													"src": "3532:174:1",
													"statements": [
														{
															"nativeSrc": "3542:16:1",
															"nodeType": "YulAssignment",
															"src": "3542:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3553:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3553:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3556:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3556:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3549:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3549:3:1"
																},
																"nativeSrc": "3549:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3549:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3542:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3542:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3589:111:1",
																"nodeType": "YulBlock",
																"src": "3589:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3610:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3610:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3617:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3617:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3622:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3622:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3613:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3613:3:1"
																					},
																					"nativeSrc": "3613:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3613:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3603:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3603:6:1"
																			},
																			"nativeSrc": "3603:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3603:31:1"
																		},
																		"nativeSrc": "3603:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3603:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3654:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3654:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3657:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3657:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3647:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3647:6:1"
																			},
																			"nativeSrc": "3647:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3647:15:1"
																		},
																		"nativeSrc": "3647:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3647:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3682:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3682:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3685:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3685:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3675:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3675:6:1"
																			},
																			"nativeSrc": "3675:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3675:15:1"
																		},
																		"nativeSrc": "3675:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3675:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3573:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3573:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3576:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3570:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3570:2:1"
																},
																"nativeSrc": "3570:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3570:10:1"
															},
															"nativeSrc": "3567:133:1",
															"nodeType": "YulIf",
															"src": "3567:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3484:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3515:1:1",
														"nodeType": "YulTypedName",
														"src": "3515:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3518:1:1",
														"nodeType": "YulTypedName",
														"src": "3518:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3524:3:1",
														"nodeType": "YulTypedName",
														"src": "3524:3:1",
														"type": ""
													}
												],
												"src": "3484:222:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806370a082311161009357806395d89b411161006357806395d89b41146101ef578063a9059cbb146101f7578063dd62ed3e1461020a578063f2fde38b14610242575f80fd5b806370a0823114610191578063715018a6146101b957806379cc6790146101c15780638da5cb5b146101d4575f80fd5b806323b872dd116100ce57806323b872dd14610147578063313ce5671461015a57806340c10f191461016957806342966c681461017e575f80fd5b806306fdde03146100f4578063095ea7b31461011257806318160ddd14610135575b5f80fd5b6100fc610255565b6040516101099190610790565b60405180910390f35b6101256101203660046107f7565b6102e5565b6040519015158152602001610109565b6002545b604051908152602001610109565b61012561015536600461081f565b6102fe565b60405160128152602001610109565b61017c6101773660046107f7565b610321565b005b61017c61018c366004610858565b610337565b61013961019f36600461086f565b6001600160a01b03165f9081526020819052604090205490565b61017c610344565b61017c6101cf3660046107f7565b610357565b6005546040516001600160a01b039091168152602001610109565b6100fc61036c565b6101256102053660046107f7565b61037b565b61013961021836600461088f565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61017c61025036600461086f565b610388565b606060038054610264906108c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610290906108c0565b80156102db5780601f106102b2576101008083540402835291602001916102db565b820191905f5260205f20905b8154815290600101906020018083116102be57829003601f168201915b5050505050905090565b5f336102f28185856103c7565b60019150505b92915050565b5f3361030b8582856103d9565b610316858585610455565b506001949350505050565b6103296104b2565b61033382826104df565b5050565b6103413382610513565b50565b61034c6104b2565b6103555f610547565b565b6103628233836103d9565b6103338282610513565b606060048054610264906108c0565b5f336102f2818585610455565b6103906104b2565b6001600160a01b0381166103be57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61034181610547565b6103d48383836001610598565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561044f578181101561044157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103b5565b61044f84848484035f610598565b50505050565b6001600160a01b03831661047e57604051634b637e8f60e11b81525f60048201526024016103b5565b6001600160a01b0382166104a75760405163ec442f0560e01b81525f60048201526024016103b5565b6103d483838361066a565b6005546001600160a01b031633146103555760405163118cdaa760e01b81523360048201526024016103b5565b6001600160a01b0382166105085760405163ec442f0560e01b81525f60048201526024016103b5565b6103335f838361066a565b6001600160a01b03821661053c57604051634b637e8f60e11b81525f60048201526024016103b5565b610333825f8361066a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166105c15760405163e602df0560e01b81525f60048201526024016103b5565b6001600160a01b0383166105ea57604051634a1406b160e11b81525f60048201526024016103b5565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561044f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161065c91815260200190565b60405180910390a350505050565b6001600160a01b038316610694578060025f82825461068991906108f8565b909155506107049050565b6001600160a01b0383165f90815260208190526040902054818110156106e65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103b5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166107205760028054829003905561073e565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161078391815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156107bc578581018301518582016040015282016107a0565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107f2575f80fd5b919050565b5f8060408385031215610808575f80fd5b610811836107dc565b946020939093013593505050565b5f805f60608486031215610831575f80fd5b61083a846107dc565b9250610848602085016107dc565b9150604084013590509250925092565b5f60208284031215610868575f80fd5b5035919050565b5f6020828403121561087f575f80fd5b610888826107dc565b9392505050565b5f80604083850312156108a0575f80fd5b6108a9836107dc565b91506108b7602084016107dc565b90509250929050565b600181811c908216806108d457607f821691505b6020821081036108f257634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102f857634e487b7160e01b5f52601160045260245ffdfea2646970667358221220cb31ea7d175bed56dcb75f9bd4e864113fcc9ddb17f602127f0995680471056c64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x135 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x81F JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x344 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x36C JUMP JUMPDEST PUSH2 0x125 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH2 0x139 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x290 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2F2 DUP2 DUP6 DUP6 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x30B DUP6 DUP3 DUP6 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x316 DUP6 DUP6 DUP6 PUSH2 0x455 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x329 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x333 DUP3 DUP3 PUSH2 0x4DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x341 CALLER DUP3 PUSH2 0x513 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x34C PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x355 PUSH0 PUSH2 0x547 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x362 DUP3 CALLER DUP4 PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x333 DUP3 DUP3 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2F2 DUP2 DUP6 DUP6 PUSH2 0x455 JUMP JUMPDEST PUSH2 0x390 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x341 DUP2 PUSH2 0x547 JUMP JUMPDEST PUSH2 0x3D4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x598 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x44F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x44F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x598 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x3D4 DUP4 DUP4 DUP4 PUSH2 0x66A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x333 PUSH0 DUP4 DUP4 PUSH2 0x66A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x333 DUP3 PUSH0 DUP4 PUSH2 0x66A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x44F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x694 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x704 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x720 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7BC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A0 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x811 DUP4 PUSH2 0x7DC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x831 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x83A DUP5 PUSH2 0x7DC JUMP JUMPDEST SWAP3 POP PUSH2 0x848 PUSH1 0x20 DUP6 ADD PUSH2 0x7DC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x868 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP3 PUSH2 0x7DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8A9 DUP4 PUSH2 0x7DC JUMP JUMPDEST SWAP2 POP PUSH2 0x8B7 PUSH1 0x20 DUP5 ADD PUSH2 0x7DC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8D4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB BALANCE 0xEA PUSH30 0x175BED56DCB75F9BD4E864113FCC9DDB17F602127F0995680471056C6473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "25983:265:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12661:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14803:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;14803:186:0;1004:187:1;13704:97:0;13782:12;;13704:97;;;1342:25:1;;;1330:2;1315:18;13704:97:0;1196:177:1;15581:244:0;;;;;;:::i;:::-;;:::i;13589:82::-;;;13662:2;1853:36:1;;1841:2;1826:18;13589:82:0;1711:184:1;26151:95:0;;;;;;:::i;:::-;;:::i;:::-;;22275:87;;;;;;:::i;:::-;;:::i;13834:116::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13925:18:0;13899:7;13925:18;;;;;;;;;;;;13834:116;25109:101;;;:::i;22678:158::-;;;;;;:::i;:::-;;:::i;24454:85::-;24526:6;;24454:85;;-1:-1:-1;;;;;24526:6:0;;;2422:51:1;;2410:2;2395:18;24454:85:0;2276:203:1;12863:93:0;;;:::i;14145:178::-;;;;;;:::i;:::-;;:::i;14356:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;14462:18:0;;;14436:7;14462:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14356:140;25359:215;;;;;;:::i;:::-;;:::i;12661:89::-;12706:13;12738:5;12731:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12661:89;:::o;14803:186::-;14876:4;4288:10;14930:31;4288:10;14946:7;14955:5;14930:8;:31::i;:::-;14978:4;14971:11;;;14803:186;;;;;:::o;15581:244::-;15668:4;4288:10;15724:37;15740:4;4288:10;15755:5;15724:15;:37::i;:::-;15771:26;15781:4;15787:2;15791:5;15771:9;:26::i;:::-;-1:-1:-1;15814:4:0;;15581:244;-1:-1:-1;;;;15581:244:0:o;26151:95::-;24347:13;:11;:13::i;:::-;26222:17:::1;26228:2;26232:6;26222:5;:17::i;:::-;26151:95:::0;;:::o;22275:87::-;22329:26;4288:10;22349:5;22329;:26::i;:::-;22275:87;:::o;25109:101::-;24347:13;:11;:13::i;:::-;25173:30:::1;25200:1;25173:18;:30::i;:::-;25109:101::o:0;22678:158::-;22753:45;22769:7;4288:10;22792:5;22753:15;:45::i;:::-;22808:21;22814:7;22823:5;22808;:21::i;12863:93::-;12910:13;12942:7;12935:14;;;;;:::i;14145:178::-;14214:4;4288:10;14268:27;4288:10;14285:2;14289:5;14268:9;:27::i;25359:215::-;24347:13;:11;:13::i;:::-;-1:-1:-1;;;;;25443:22:0;::::1;25439:91;;25488:31;::::0;-1:-1:-1;;;25488:31:0;;25516:1:::1;25488:31;::::0;::::1;2422:51:1::0;2395:18;;25488:31:0::1;;;;;;;;25439:91;25539:28;25558:8;25539:18;:28::i;19531:128::-:0;19615:37;19624:5;19631:7;19640:5;19647:4;19615:8;:37::i;:::-;19531:128;;;:::o;21220:476::-;-1:-1:-1;;;;;14462:18:0;;;21319:24;14462:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21385:36:0;;21381:309;;;21460:5;21441:16;:24;21437:130;;;21492:60;;-1:-1:-1;;;21492:60:0;;-1:-1:-1;;;;;3354:32:1;;21492:60:0;;;3336:51:1;3403:18;;;3396:34;;;3446:18;;;3439:34;;;3309:18;;21492:60:0;3134:345:1;21437:130:0;21608:57;21617:5;21624:7;21652:5;21633:16;:24;21659:5;21608:8;:57::i;:::-;21309:387;21220:476;;;:::o;16198:300::-;-1:-1:-1;;;;;16281:18:0;;16277:86;;16322:30;;-1:-1:-1;;;16322:30:0;;16349:1;16322:30;;;2422:51:1;2395:18;;16322:30:0;2276:203:1;16277:86:0;-1:-1:-1;;;;;16376:16:0;;16372:86;;16415:32;;-1:-1:-1;;;16415:32:0;;16444:1;16415:32;;;2422:51:1;2395:18;;16415:32:0;2276:203:1;16372:86:0;16467:24;16475:4;16481:2;16485:5;16467:7;:24::i;24612:162::-;24526:6;;-1:-1:-1;;;;;24526:6:0;4288:10;24671:23;24667:101;;24717:40;;-1:-1:-1;;;24717:40:0;;4288:10;24717:40;;;2422:51:1;2395:18;;24717:40:0;2276:203:1;18263:208:0;-1:-1:-1;;;;;18333:21:0;;18329:91;;18377:32;;-1:-1:-1;;;18377:32:0;;18406:1;18377:32;;;2422:51:1;2395:18;;18377:32:0;2276:203:1;18329:91:0;18429:35;18445:1;18449:7;18458:5;18429:7;:35::i;18789:206::-;-1:-1:-1;;;;;18859:21:0;;18855:89;;18903:30;;-1:-1:-1;;;18903:30:0;;18930:1;18903:30;;;2422:51:1;2395:18;;18903:30:0;2276:203:1;18855:89:0;18953:35;18961:7;18978:1;18982:5;18953:7;:35::i;25728:187::-;25820:6;;;-1:-1:-1;;;;;25836:17:0;;;-1:-1:-1;;;;;;25836:17:0;;;;;;;25868:40;;25820:6;;;25836:17;25820:6;;25868:40;;25801:16;;25868:40;25791:124;25728:187;:::o;20506:432::-;-1:-1:-1;;;;;20618:19:0;;20614:89;;20660:32;;-1:-1:-1;;;20660:32:0;;20689:1;20660:32;;;2422:51:1;2395:18;;20660:32:0;2276:203:1;20614:89:0;-1:-1:-1;;;;;20716:21:0;;20712:90;;20760:31;;-1:-1:-1;;;20760:31:0;;20788:1;20760:31;;;2422:51:1;2395:18;;20760:31:0;2276:203:1;20712:90:0;-1:-1:-1;;;;;20811:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;20856:76;;;;20906:7;-1:-1:-1;;;;;20890:31:0;20899:5;-1:-1:-1;;;;;20890:31:0;;20915:5;20890:31;;;;1342:25:1;;1330:2;1315:18;;1196:177;20890:31:0;;;;;;;;20506:432;;;;:::o;16813:1107::-;-1:-1:-1;;;;;16902:18:0;;16898:540;;17054:5;17038:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16898:540:0;;-1:-1:-1;16898:540:0;;-1:-1:-1;;;;;17112:15:0;;17090:19;17112:15;;;;;;;;;;;17145:19;;;17141:115;;;17191:50;;-1:-1:-1;;;17191:50:0;;-1:-1:-1;;;;;3354:32:1;;17191:50:0;;;3336:51:1;3403:18;;;3396:34;;;3446:18;;;3439:34;;;3309:18;;17191:50:0;3134:345:1;17141:115:0;-1:-1:-1;;;;;17376:15:0;;:9;:15;;;;;;;;;;17394:19;;;;17376:37;;16898:540;-1:-1:-1;;;;;17452:16:0;;17448:425;;17615:12;:21;;;;;;;17448:425;;;-1:-1:-1;;;;;17826:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17448:425;17903:2;-1:-1:-1;;;;;17888:25:0;17897:4;-1:-1:-1;;;;;17888:25:0;;17907:5;17888:25;;;;1342::1;;1330:2;1315:18;;1196:177;17888:25:0;;;;;;;;16813:1107;;;:::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:1;;1900:180;-1:-1:-1;1900:180:1:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:1:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3484:222::-;3549:9;;;3570:10;;;3567:133;;;3622:10;3617:3;3613:20;3610:1;3603:31;3657:4;3654:1;3647:15;3685:4;3682:1;3675:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "476200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2560",
								"burn(uint256)": "51005",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "221",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2389",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25983,
									"end": 26248,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 26045,
									"end": 26145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26131,
									"end": 26141,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 26107,
									"end": 26112,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26114,
									"end": 26121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12554,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 26107,
									"end": 26112,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12554,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12549,
									"end": 12562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12549,
									"end": 12562,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12572,
									"end": 12579,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12582,
									"end": 12589,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12579,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12572,
									"end": 12589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12572,
									"end": 12589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 24089,
									"end": 24115,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24089,
									"end": 24115,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24085,
									"end": 24180,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24085,
									"end": 24180,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24166,
									"end": 24167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4263,
									"end": 4314,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4236,
									"end": 4254,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4236,
									"end": 4254,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24169,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24085,
									"end": 24180,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24085,
									"end": 24180,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24189,
									"end": 24221,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 24208,
									"end": 24220,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24189,
									"end": 24207,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24189,
									"end": 24221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24189,
									"end": 24221,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 24189,
									"end": 24221,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24041,
									"end": 24228,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26045,
									"end": 26145,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25728,
									"end": 25915,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 25728,
									"end": 25915,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25820,
									"end": 25826,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25820,
									"end": 25826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25820,
									"end": 25826,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25868,
									"end": 25908,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25868,
									"end": 25908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25820,
									"end": 25826,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25820,
									"end": 25826,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25820,
									"end": 25826,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25836,
									"end": 25853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25820,
									"end": 25826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25820,
									"end": 25826,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25868,
									"end": 25908,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25868,
									"end": 25908,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25801,
									"end": 25817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25801,
									"end": 25817,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25868,
									"end": 25908,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 25791,
									"end": 25915,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25728,
									"end": 25915,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25728,
									"end": 25915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 1100,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1152,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1153,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1158,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1172,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1169,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1173,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1280,
									"end": 1292,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1357,
									"end": 1363,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1313,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1422,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1409,
									"end": 1418,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1405,
									"end": 1423,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1466,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1467,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1521,
									"end": 1530,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1541,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1488,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1764,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1804,
									"end": 1810,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1799,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1816,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1858,
									"end": 1868,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1853,
									"end": 1856,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1849,
									"end": 1869,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1870,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1893,
									"end": 1897,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1883,
									"end": 1898,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1918,
									"end": 1919,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1911,
									"end": 1926,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2175,
									"end": 2177,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2170,
									"end": 2173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2201,
									"end": 2217,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2259,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2260,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2325,
									"end": 2327,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2309,
									"end": 2328,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2306,
									"end": 2307,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2330,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2361,
									"end": 2365,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2349,
									"end": 2359,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2346,
									"end": 2366,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2439,
									"end": 2441,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2430,
									"end": 2442,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2428,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2423,
									"end": 2443,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2417,
									"end": 2421,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2413,
									"end": 2444,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2512,
									"end": 2514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2505,
									"end": 2510,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2502,
									"end": 2515,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2572,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2538,
									"end": 2539,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2527,
									"end": 2540,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2942,
									"end": 2960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3047,
									"end": 3058,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3021,
									"end": 3059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3015,
									"end": 3019,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2971,
									"end": 3068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3180,
									"end": 3182,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3197,
									"end": 3198,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2724,
									"end": 2725,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 2740,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2712,
									"end": 2741,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2702,
									"end": 2742,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2749,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2699,
									"end": 2756,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2057,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3354,
									"end": 3368,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3443,
									"end": 3469,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3509,
									"end": 3510,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3350,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3833,
									"end": 3839,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3830,
									"end": 3831,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3820,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4117,
									"end": 4320,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 4117,
									"end": 4320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25983,
									"end": 26248,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb31ea7d175bed56dcb75f9bd4e864113fcc9ddb17f602127f0995680471056c64736f6c63430008180033",
									".code": [
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26248,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12661,
											"end": 12750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12661,
											"end": 12750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14803,
											"end": 14989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14803,
											"end": 14989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13704,
											"end": 13801,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13704,
											"end": 13801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13782,
											"end": 13794,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13782,
											"end": 13794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13704,
											"end": 13801,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13704,
											"end": 13801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13704,
											"end": 13801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13704,
											"end": 13801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13704,
											"end": 13801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15581,
											"end": 15825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15581,
											"end": 15825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13662,
											"end": 13664,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13589,
											"end": 13671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26151,
											"end": 26246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26151,
											"end": 26246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 22275,
											"end": 22362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 22275,
											"end": 22362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13834,
											"end": 13950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13899,
											"end": 13906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13834,
											"end": 13950,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25210,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25109,
											"end": 25210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25109,
											"end": 25210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 25109,
											"end": 25210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22678,
											"end": 22836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22678,
											"end": 22836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24454,
											"end": 24539,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24454,
											"end": 24539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24532,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24526,
											"end": 24532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24454,
											"end": 24539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24454,
											"end": 24539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24526,
											"end": 24532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24454,
											"end": 24539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12863,
											"end": 12956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14145,
											"end": 14323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14145,
											"end": 14323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14356,
											"end": 14496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14436,
											"end": 14443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14496,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25359,
											"end": 25574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25359,
											"end": 25574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12706,
											"end": 12719,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12738,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12731,
											"end": 12743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12731,
											"end": 12743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12731,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14876,
											"end": 14880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14946,
											"end": 14953,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14960,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 14930,
											"end": 14961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14961,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 14930,
											"end": 14961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14978,
											"end": 14982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14971,
											"end": 14982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14803,
											"end": 14989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15724,
											"end": 15761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15740,
											"end": 15744,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15755,
											"end": 15760,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15724,
											"end": 15739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15724,
											"end": 15761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15724,
											"end": 15761,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15724,
											"end": 15761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15781,
											"end": 15785,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15787,
											"end": 15789,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15791,
											"end": 15796,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15771,
											"end": 15797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15797,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15771,
											"end": 15797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15814,
											"end": 15818,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15814,
											"end": 15818,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15825,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15581,
											"end": 15825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24347,
											"end": 24358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 24347,
											"end": 24360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24360,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24347,
											"end": 24360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26222,
											"end": 26239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26228,
											"end": 26230,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26232,
											"end": 26238,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26222,
											"end": 26227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26222,
											"end": 26239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26222,
											"end": 26239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26222,
											"end": 26239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26151,
											"end": 26246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22329,
											"end": 22355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22349,
											"end": 22354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22329,
											"end": 22334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 22329,
											"end": 22355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22329,
											"end": 22355,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 22329,
											"end": 22355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22275,
											"end": 22362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22275,
											"end": 22362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25210,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 25109,
											"end": 25210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24347,
											"end": 24358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 24347,
											"end": 24360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24360,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24347,
											"end": 24360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 25200,
											"end": 25201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25173,
											"end": 25191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 25173,
											"end": 25203,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 25173,
											"end": 25203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22678,
											"end": 22836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22753,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 22769,
											"end": 22776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22792,
											"end": 22797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22753,
											"end": 22768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22753,
											"end": 22798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22753,
											"end": 22798,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 22753,
											"end": 22798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22808,
											"end": 22829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 22814,
											"end": 22821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22808,
											"end": 22813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 22808,
											"end": 22829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12863,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 12923,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12942,
											"end": 12949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 12949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12935,
											"end": 12949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14145,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14214,
											"end": 14218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14268,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14285,
											"end": 14287,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14289,
											"end": 14294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14268,
											"end": 14277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14268,
											"end": 14295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25359,
											"end": 25574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24347,
											"end": 24358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 24347,
											"end": 24360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24347,
											"end": 24360,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24347,
											"end": 24360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25443,
											"end": 25465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25443,
											"end": 25465,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25439,
											"end": 25530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 25439,
											"end": 25530,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25488,
											"end": 25519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25488,
											"end": 25519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25516,
											"end": 25517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25488,
											"end": 25519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25519,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25439,
											"end": 25530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 25439,
											"end": 25530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25539,
											"end": 25567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 25558,
											"end": 25566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25539,
											"end": 25557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 25539,
											"end": 25567,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19531,
											"end": 19659,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 19531,
											"end": 19659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 19624,
											"end": 19629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19631,
											"end": 19638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19640,
											"end": 19645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19647,
											"end": 19651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19615,
											"end": 19623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19615,
											"end": 19652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19652,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 19615,
											"end": 19652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19531,
											"end": 19659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19531,
											"end": 19659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19531,
											"end": 19659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19531,
											"end": 19659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21696,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 21220,
											"end": 21696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21319,
											"end": 21343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14480,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14462,
											"end": 14489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21385,
											"end": 21421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21385,
											"end": 21421,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21381,
											"end": 21690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21381,
											"end": 21690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 21381,
											"end": 21690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21460,
											"end": 21465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21441,
											"end": 21457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21441,
											"end": 21465,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21437,
											"end": 21567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21437,
											"end": 21567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21437,
											"end": 21567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21492,
											"end": 21552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21492,
											"end": 21552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21492,
											"end": 21552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21492,
											"end": 21552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3354,
											"end": 3386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21492,
											"end": 21552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21492,
											"end": 21552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21492,
											"end": 21552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21492,
											"end": 21552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3134,
											"end": 3479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21437,
											"end": 21567,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21437,
											"end": 21567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21608,
											"end": 21665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 21617,
											"end": 21622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21624,
											"end": 21631,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21652,
											"end": 21657,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21633,
											"end": 21649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21633,
											"end": 21657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21659,
											"end": 21664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21608,
											"end": 21616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 21608,
											"end": 21665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21608,
											"end": 21665,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 21608,
											"end": 21665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21309,
											"end": 21696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16198,
											"end": 16498,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 16198,
											"end": 16498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16281,
											"end": 16299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16281,
											"end": 16299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16277,
											"end": 16363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16277,
											"end": 16363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16322,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16322,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16349,
											"end": 16350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16322,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16322,
											"end": 16352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16322,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16277,
											"end": 16363,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16277,
											"end": 16363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16376,
											"end": 16392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16376,
											"end": 16392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16415,
											"end": 16447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16415,
											"end": 16447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16415,
											"end": 16447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16415,
											"end": 16447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16415,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 16475,
											"end": 16479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16481,
											"end": 16483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16485,
											"end": 16490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16467,
											"end": 16491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24612,
											"end": 24774,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 24612,
											"end": 24774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24532,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24526,
											"end": 24532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24526,
											"end": 24532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24671,
											"end": 24694,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24667,
											"end": 24768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24667,
											"end": 24768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24717,
											"end": 24757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24717,
											"end": 24757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24717,
											"end": 24757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24717,
											"end": 24757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18263,
											"end": 18471,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 18263,
											"end": 18471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18333,
											"end": 18354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18333,
											"end": 18354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18329,
											"end": 18420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18329,
											"end": 18420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18406,
											"end": 18407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18329,
											"end": 18420,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18329,
											"end": 18420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 18445,
											"end": 18446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18449,
											"end": 18456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18458,
											"end": 18463,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18429,
											"end": 18464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18789,
											"end": 18995,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 18789,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18859,
											"end": 18880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18859,
											"end": 18880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18855,
											"end": 18944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18855,
											"end": 18944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18903,
											"end": 18933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18903,
											"end": 18933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18903,
											"end": 18933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18903,
											"end": 18933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18930,
											"end": 18931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18903,
											"end": 18933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18903,
											"end": 18933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18903,
											"end": 18933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18903,
											"end": 18933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18855,
											"end": 18944,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18855,
											"end": 18944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 18961,
											"end": 18968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18978,
											"end": 18979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18982,
											"end": 18987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18953,
											"end": 18988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25728,
											"end": 25915,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 25728,
											"end": 25915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25826,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25820,
											"end": 25826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25868,
											"end": 25908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25868,
											"end": 25908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25836,
											"end": 25853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25868,
											"end": 25908,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25868,
											"end": 25908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25801,
											"end": 25817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25868,
											"end": 25908,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25791,
											"end": 25915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25728,
											"end": 25915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25728,
											"end": 25915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20506,
											"end": 20938,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 20506,
											"end": 20938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20618,
											"end": 20637,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20618,
											"end": 20637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20614,
											"end": 20703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 20614,
											"end": 20703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20660,
											"end": 20692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20660,
											"end": 20692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20660,
											"end": 20692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20660,
											"end": 20692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20689,
											"end": 20690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20660,
											"end": 20692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20660,
											"end": 20692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20660,
											"end": 20692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20660,
											"end": 20692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20614,
											"end": 20703,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 20614,
											"end": 20703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20716,
											"end": 20737,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20712,
											"end": 20802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20712,
											"end": 20802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20760,
											"end": 20791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20760,
											"end": 20791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20760,
											"end": 20791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20760,
											"end": 20791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20788,
											"end": 20789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20760,
											"end": 20791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20760,
											"end": 20791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20760,
											"end": 20791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20760,
											"end": 20791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20712,
											"end": 20802,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20712,
											"end": 20802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20838,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20838,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20838,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20838,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20846,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20856,
											"end": 20932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20899,
											"end": 20904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20915,
											"end": 20920,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20921,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20506,
											"end": 20938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20506,
											"end": 20938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20506,
											"end": 20938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20506,
											"end": 20938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20506,
											"end": 20938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 17920,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 16813,
											"end": 17920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16902,
											"end": 16920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16902,
											"end": 16920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16898,
											"end": 17438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17054,
											"end": 17059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17050,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17038,
											"end": 17050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 17038,
											"end": 17059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16898,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16898,
											"end": 17438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16898,
											"end": 17438,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 17438,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16898,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17090,
											"end": 17109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17164,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 17141,
											"end": 17256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17191,
											"end": 17241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17191,
											"end": 17241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3354,
											"end": 3386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17191,
											"end": 17241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17191,
											"end": 17241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17191,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3134,
											"end": 3479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17141,
											"end": 17256,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 17141,
											"end": 17256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17376,
											"end": 17413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 17438,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16898,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17452,
											"end": 17468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17448,
											"end": 17873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 17448,
											"end": 17873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17627,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17448,
											"end": 17873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17448,
											"end": 17873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17448,
											"end": 17873,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 17448,
											"end": 17873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17839,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17848,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17448,
											"end": 17873,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17448,
											"end": 17873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17903,
											"end": 17905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17897,
											"end": 17901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17907,
											"end": 17912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17913,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 17920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 17920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 17920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16813,
											"end": 17920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3580,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3567,
											"end": 3700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3632,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3617,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3613,
											"end": 3633,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3661,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3654,
											"end": 3655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3689,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3682,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SpageroMintableERC20_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroMintableERC20_flattened.sol\":\"SpageroMintableERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroMintableERC20_flattened.sol\":{\"keccak256\":\"0x37c5b86d1124879a57417c1edd2b3df313916c05e498e4f1869b6d5063e4659b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074cee027ec3dc99621a8e3f8c5ed308798e1b0a16e1e5a1b7ff9289225a0052\",\"dweb:/ipfs/QmXfmewNxuNPPdfJAEjsbkpLfG9cR52jc922cdjbS9i2J7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "SpageroMintableERC20_flattened.sol:SpageroMintableERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "SpageroMintableERC20_flattened.sol:SpageroMintableERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "SpageroMintableERC20_flattened.sol:SpageroMintableERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "SpageroMintableERC20_flattened.sol:SpageroMintableERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "SpageroMintableERC20_flattened.sol:SpageroMintableERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 818,
								"contract": "SpageroMintableERC20_flattened.sol:SpageroMintableERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SpageroMintableERC20_flattened.sol": {
				"ast": {
					"absolutePath": "SpageroMintableERC20_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"ERC20Burnable": [
							812
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							957
						],
						"SpageroMintableERC20": [
							994
						]
					},
					"id": 995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "164:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "191:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "273:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "286:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "455:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "464:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "502:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "486:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "514:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "506:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:57:0"
									},
									"src": "449:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "527:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "686:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "695:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "734:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "718:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "751:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "743:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:63:0"
									},
									"src": "680:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "764:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "843:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:9:0"
									},
									"scope": 77,
									"src": "834:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "895:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "998:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1030:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:9:0"
									},
									"scope": 77,
									"src": "971:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1045:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1272:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1289:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1281:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1326:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1326:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:6:0"
									},
									"scope": 77,
									"src": "1263:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1338:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1616:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1649:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1641:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:0"
									},
									"scope": 77,
									"src": "1607:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1696:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2377:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2410:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2402:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:6:0"
									},
									"scope": 77,
									"src": "2368:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2447:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2758:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2785:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2805:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2797:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:0"
									},
									"scope": 77,
									"src": "2749:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 995,
							"src": "263:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "3010:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3153:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3153:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3153:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3037:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3135:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3166:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3234:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3238:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3264:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:15:0"
									},
									"scope": 100,
									"src": "3225:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3285:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3355:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3361:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3387:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:15:0"
									},
									"scope": 100,
									"src": "3346:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3408:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3487:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3495:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3521:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3521:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:7:0"
									},
									"scope": 100,
									"src": "3478:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 995,
							"src": "3125:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3654:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3680:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4195:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4271:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4288:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4292:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4288:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4281:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4218:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:9:0"
									},
									"scope": 129,
									"src": "4209:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4378:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4395:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4399:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4395:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4388:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4320:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4328:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4362:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4362:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:16:0"
									},
									"scope": 129,
									"src": "4311:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4488:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4505:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4498:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4425:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4445:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:9:0"
									},
									"scope": 129,
									"src": "4416:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 995,
							"src": "4177:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "4662:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4688:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4840:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4859:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5179:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5212:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5204:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5228:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5220:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:49:0"
									},
									"src": "5173:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5259:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5422:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5449:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5441:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:16:0"
									},
									"src": "5416:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5463:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5633:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5662:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5654:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5653:18:0"
									},
									"src": "5627:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5678:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6034:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6069:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6086:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6078:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6105:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6060:52:0"
									},
									"src": "6028:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6119:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6304:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:18:0"
									},
									"src": "6298:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6349:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6555:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6575:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6574:17:0"
									},
									"src": "6549:43:0"
								}
							],
							"scope": 995,
							"src": "4830:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6596:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6750:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6770:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7000:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7018:15:0"
									},
									"src": "6994:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7040:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7183:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:17:0"
									},
									"src": "7177:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7229:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7529:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7591:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7549:48:0"
									},
									"src": "7523:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7604:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7767:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:16:0"
									},
									"src": "7761:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7809:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7979:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8009:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8001:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8000:18:0"
									},
									"src": "7973:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8025:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8283:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8310:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8336:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8328:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8309:35:0"
									},
									"src": "8277:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8351:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8536:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8566:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8558:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8557:18:0"
									},
									"src": "8530:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8582:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8790:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8812:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:18:0"
									},
									"src": "8784:46:0"
								}
							],
							"scope": 995,
							"src": "6740:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8834:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8990:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9011:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9383:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9418:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9410:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9409:66:0"
									},
									"src": "9377:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9482:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9645:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9674:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9666:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9665:16:0"
									},
									"src": "9639:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9688:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9858:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9889:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9881:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9880:18:0"
									},
									"src": "9852:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9905:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10172:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10209:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10201:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10227:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10200:33:0"
									},
									"src": "10166:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10240:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10425:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10456:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10448:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10447:18:0"
									},
									"src": "10419:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10472:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10680:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10703:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10702:18:0"
									},
									"src": "10674:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10727:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11018:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11052:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11044:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11071:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11063:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11043:41:0"
									},
									"src": "11012:73:0"
								}
							],
							"scope": 995,
							"src": "8980:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11219:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12034:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12034:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12034:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12043:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12043:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12043:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12051:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12051:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12051:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12067:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12067:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12067:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11249:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12025:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12130:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12086:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12102:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12094:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12086:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12113:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12218:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12146:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12162:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12146:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12189:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12181:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12173:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12200:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12252:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12236:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12286:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12271:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12271:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12312:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12297:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12297:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12539:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12549:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12557:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12549:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12549:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12572:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12572:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12326:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12509:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12495:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12495:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12530:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12516:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12516:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12494:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12539:0:0"
									},
									"scope": 771,
									"src": "12483:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12721:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12738:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12731:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12602:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12670:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12674:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12706:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12706:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12705:15:0"
									},
									"scope": 771,
									"src": "12661:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12925:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12935:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12756:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12872:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12878:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12910:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12910:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12909:15:0"
									},
									"scope": 771,
									"src": "12863:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13645:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13662:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13655:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12962:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13598:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13606:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13638:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13637:7:0"
									},
									"scope": 771,
									"src": "13589:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13765:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13782:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13775:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13677:22:0",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13713:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13724:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13755:9:0"
									},
									"scope": 771,
									"src": "13704:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13908:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13925:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "13935:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13925:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13918:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13807:22:0",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13843:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13861:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13853:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13852:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13899:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13898:9:0"
									},
									"scope": 771,
									"src": "13834:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14220:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14238:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14230:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14230:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14246:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14246:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14230:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14278:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14285:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14289:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14268:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14268:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14312:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14305:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "13956:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14154:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14171:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14183:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14162:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14214:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14213:6:0"
									},
									"scope": 771,
									"src": "14145:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14445:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14462:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14474:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14462:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14481:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14462:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14455:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14329:22:0",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14365:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14383:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14375:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14398:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14390:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14374:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14436:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:9:0"
									},
									"scope": 771,
									"src": "14356:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14882:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14900:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14892:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14892:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14908:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14908:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14892:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "14939:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "14946:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "14955:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "14930:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14930:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "14930:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14978:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "14971:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14502:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14812:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14828:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14820:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14845:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14837:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14819:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14876:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14876:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14875:6:0"
									},
									"scope": 771,
									"src": "14803:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15674:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15692:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15684:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15684:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15702:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15702:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15684:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15740:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15724:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15724:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15724:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15781:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15787:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15771:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15771:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15771:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15807:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "14995:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15590:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15611:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15603:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15625:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15617:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15637:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15629:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15602:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15668:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15668:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15667:6:0"
									},
									"scope": 771,
									"src": "15581:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16267:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16281:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16281:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16277:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16301:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16349:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16341:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16341:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16341:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16322:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16322:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16315:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16376:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16390:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16382:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16382:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16376:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16372:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16394:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16444:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16436:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16436:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16436:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16415:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16415:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16408:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16481:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16485:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16467:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16467:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15831:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16207:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16225:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16217:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16239:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16231:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16251:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16243:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16216:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16267:0:0"
									},
									"scope": 771,
									"src": "16198:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16888:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16902:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16918:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16910:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16910:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16902:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17076:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17098:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17090:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17090:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17112:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17122:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17112:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17090:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17145:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17159:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17145:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17141:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17166:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17216:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17222:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17235:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17191:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17191:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17184:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17269:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17376:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17386:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17376:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17394:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17408:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17394:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17376:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17376:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16898:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "16922:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17038:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17054:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17038:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17038:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17452:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17466:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17458:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17458:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17458:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17452:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17667:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17681:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17826:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17836:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17826:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17843:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17826:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17826:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17448:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17470:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17484:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17615:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17631:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17615:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17615:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17897:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17903:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17907:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17888:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17888:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17883:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16504:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16822:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16838:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16830:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16852:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16844:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16864:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16856:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16829:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16888:0:0"
									},
									"scope": 771,
									"src": "16813:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18319:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18333:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18352:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18344:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18344:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18344:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18333:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18329:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18356:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18406:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18398:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18398:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18398:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18377:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18377:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18370:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18445:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18437:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18437:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18437:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18458:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18429:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18429:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "17926:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18272:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18286:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18278:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18303:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18295:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18277:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18319:0:0"
									},
									"scope": 771,
									"src": "18263:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18845:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18859:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18878:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18870:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18870:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18859:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18855:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18882:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18930:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18922:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18922:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18922:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18903:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18903:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18896:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "18961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18978:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18970:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18970:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18970:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "18982:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18953:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18953:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "18953:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18477:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18798:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18812:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18804:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18829:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18821:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18803:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18845:0:0"
									},
									"scope": 771,
									"src": "18789:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19605:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19624:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19631:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19640:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19647:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19615:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19615:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19615:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19001:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19540:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19557:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19549:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19548:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19605:0:0"
									},
									"scope": 771,
									"src": "19531:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20604:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20618:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20635:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20627:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20627:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20627:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20618:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20614:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20639:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20689:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20681:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20681:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20681:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20660:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20660:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20653:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20735:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20727:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20727:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20716:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20712:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20739:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20788:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20780:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20780:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20780:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20760:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20760:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20753:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20811:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20811:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20830:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20811:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20841:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20811:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20811:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20860:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20856:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20871:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20899:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "20906:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "20915:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20890:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20890:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20885:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19665:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20515:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20532:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20524:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20539:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20576:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20571:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20571:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20523:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20604:0:0"
									},
									"scope": 771,
									"src": "20506:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21309:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21327:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21319:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21356:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21363:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21346:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21346:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21319:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21385:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21409:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21409:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21404:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21404:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21418:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21404:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21385:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21381:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21423:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21441:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21460:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21441:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21437:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21467:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21519:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21528:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21546:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21492:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21492:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21485:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21580:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21617:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21624:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21633:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21652:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21633:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21659:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21608:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21608:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21608:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "20944:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21229:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21253:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21245:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21268:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21260:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21285:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21277:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21244:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21309:0:0"
									},
									"scope": 771,
									"src": "21220:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 995,
							"src": "12007:9691:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21868:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22140:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22140:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22140:7:0"
								},
								{
									"baseName": {
										"id": 776,
										"name": "ERC20",
										"nameLocations": [
											"22149:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "22149:5:0"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "22149:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21896:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Burnable",
							"nameLocation": "22123:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "22319:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 784,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22335:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22335:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "22349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "22329:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22329:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "22329:26:0"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22161:109:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "22284:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22297:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "22289:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22288:15:0"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22319:0:0"
									},
									"scope": 812,
									"src": "22275:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "22743:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 799,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "22769:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 800,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22778:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22778:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "22792:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 798,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "22753:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22753:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "22753:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "22814:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "22823:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "22808:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22808:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "22808:21:0"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "22368:305:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "22687:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "22696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22721:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "22713:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22695:32:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22743:0:0"
									},
									"scope": 812,
									"src": "22678:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 995,
							"src": "22105:733:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22964:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 815,
										"name": "Context",
										"nameLocations": [
											"23508:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "23508:7:0"
									},
									"id": 816,
									"nodeType": "InheritanceSpecifier",
									"src": "23508:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "22991:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957,
								129
							],
							"name": "Ownable",
							"nameLocation": "23497:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 818,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "23538:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 957,
									"src": "23522:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 817,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23522:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "23551:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 823,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "23647:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "23674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23673:17:0"
									},
									"src": "23641:50:0"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "23697:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 828,
									"name": "OwnableInvalidOwner",
									"nameLocation": "23790:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23818:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "23810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23809:15:0"
									},
									"src": "23784:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 834,
									"name": "OwnershipTransferred",
									"nameLocation": "23837:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23874:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23858:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23905:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23889:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23857:57:0"
									},
									"src": "23831:84:0"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "24075:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "24089:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24113:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24105:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24105:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24089:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "24085:95:0",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "24117:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24166:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24158:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24158:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24158:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "24138:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24138:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "24131:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "24208:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 855,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "24189:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24189:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "24189:32:0"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "23921:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 860,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "24061:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "24053:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24052:22:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24075:0:0"
									},
									"scope": 957,
									"src": "24041:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "24337:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "24347:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24347:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24347:13:0"
											},
											{
												"id": 866,
												"nodeType": "PlaceholderStatement",
												"src": "24370:1:0"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "24234:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 868,
									"name": "onlyOwner",
									"nameLocation": "24325:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24334:2:0"
									},
									"src": "24316:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "24509:30:0",
										"statements": [
											{
												"expression": {
													"id": 874,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "24526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 873,
												"id": 875,
												"nodeType": "Return",
												"src": "24519:13:0"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "24384:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "24463:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24468:2:0"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "24500:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24499:9:0"
									},
									"scope": 957,
									"src": "24454:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "24657:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 881,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "24671:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24671:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 883,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "24682:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24682:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24671:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "24667:101:0",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "24696:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 887,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "24744:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24744:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 886,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "24717:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24717:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "24710:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "24545:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "24621:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24632:2:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24657:0:0"
									},
									"scope": 957,
									"src": "24612:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "25163:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25200:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25192:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 901,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25192:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25192:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 900,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "25173:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25173:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "25173:30:0"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "24780:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 898,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 897,
												"name": "onlyOwner",
												"nameLocations": [
													"25153:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "25153:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25153:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "25118:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25135:2:0"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25163:0:0"
									},
									"scope": 957,
									"src": "25109:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "25429:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "25443:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25463:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25455:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25455:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25455:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25443:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "25439:91:0",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "25467:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25516:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25508:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25508:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25508:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "25488:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25488:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "25481:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "25558:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 931,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "25539:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25539:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "25539:28:0"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "25216:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 914,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 913,
												"name": "onlyOwner",
												"nameLocations": [
													"25419:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "25419:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25419:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "25368:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25394:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "25386:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25385:18:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25429:0:0"
									},
									"scope": 957,
									"src": "25359:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "25791:124:0",
										"statements": [
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "25809:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "25801:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 942,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25801:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"id": 944,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 818,
													"src": "25820:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25801:25:0"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 946,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "25836:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 947,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "25845:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25836:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "25836:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 951,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "25889:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "25899:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 950,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "25868:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25868:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "EmitStatement",
												"src": "25863:45:0"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "25580:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "25737:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "25756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25755:18:0"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25791:0:0"
									},
									"scope": 957,
									"src": "25728:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 995,
							"src": "23479:2438:0",
							"usedErrors": [
								823,
								828
							],
							"usedEvents": [
								834
							]
						},
						{
							"id": 958,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "25955:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 959,
										"name": "ERC20Burnable",
										"nameLocations": [
											"26016:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "26016:13:0"
									},
									"id": 960,
									"nodeType": "InheritanceSpecifier",
									"src": "26016:13:0"
								},
								{
									"baseName": {
										"id": 961,
										"name": "Ownable",
										"nameLocations": [
											"26031:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "26031:7:0"
									},
									"id": 962,
									"nodeType": "InheritanceSpecifier",
									"src": "26031:7:0"
								}
							],
							"canonicalName": "SpageroMintableERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 994,
							"linearizedBaseContracts": [
								994,
								957,
								812,
								771,
								170,
								100,
								77,
								129
							],
							"name": "SpageroMintableERC20",
							"nameLocation": "25992:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "26143:2:0",
										"statements": []
									},
									"id": 978,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 969,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 964,
													"src": "26107:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 970,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 966,
													"src": "26114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 971,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 968,
												"name": "ERC20",
												"nameLocations": [
													"26101:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "26101:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26101:21:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 973,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "26131:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26135:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "26131:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 975,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 972,
												"name": "Ownable",
												"nameLocations": [
													"26123:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "26123:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26123:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "26071:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "26057:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "26092:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "26078:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 965,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26056:44:0"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26143:0:0"
									},
									"scope": 994,
									"src": "26045:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "26212:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 988,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "26228:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "26232:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "26222:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26222:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "26222:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 985,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 984,
												"name": "onlyOwner",
												"nameLocations": [
													"26202:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "26202:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26202:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "26160:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26173:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "26165:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26185:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "26177:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26164:28:0"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26212:0:0"
									},
									"scope": 994,
									"src": "26151:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 995,
							"src": "25983:265:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								823,
								828
							],
							"usedEvents": [
								11,
								20,
								834
							]
						}
					],
					"src": "164:26085:0"
				},
				"id": 0
			}
		}
	}
}