{
	"id": "c7ac3c7419c19ae1917d76899978c8f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"SpageroNFTMarket_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/security/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n\n// File: SpageroNFTMarket.sol\n\n\npragma solidity ^0.8.24;\n\n\n\ncontract SpageroNFTMarket is ReentrancyGuard {\n    struct Listing { address seller; address nft; uint256 tokenId; uint256 price; }\n    mapping(bytes32 => Listing) public listings;\n\n    event Listed(address indexed seller, address indexed nft, uint256 indexed tokenId, uint256 price);\n    event Cancelled(address indexed seller, address indexed nft, uint256 indexed tokenId);\n    event Purchased(address indexed buyer, address indexed nft, uint256 indexed tokenId, uint256 price);\n\n    function _key(address nft, uint256 tokenId) private pure returns (bytes32) {\n        return keccak256(abi.encodePacked(nft, tokenId));\n    }\n\n    function list(address nft, uint256 tokenId, uint256 price) external {\n        require(price > 0, \"price=0\");\n        IERC721 token = IERC721(nft);\n        require(token.ownerOf(tokenId) == msg.sender, \"not owner\");\n        require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),\n            \"market not approved\");\n        bytes32 k = _key(nft, tokenId);\n        listings[k] = Listing(msg.sender, nft, tokenId, price);\n        emit Listed(msg.sender, nft, tokenId, price);\n    }\n\n    function cancel(address nft, uint256 tokenId) external {\n        bytes32 k = _key(nft, tokenId);\n        Listing memory l = listings[k];\n        require(l.seller != address(0), \"not listed\");\n        require(l.seller == msg.sender, \"not seller\");\n        delete listings[k];\n        emit Cancelled(msg.sender, nft, tokenId);\n    }\n\n    function buy(address nft, uint256 tokenId) external payable nonReentrant {\n        bytes32 k = _key(nft, tokenId);\n        Listing memory l = listings[k];\n        require(l.seller != address(0), \"not listed\");\n        require(msg.value == l.price, \"bad value\");\n        delete listings[k];\n        (bool ok, ) = payable(l.seller).call{value: msg.value}(\"\");\n        require(ok, \"pay seller failed\");\n        IERC721(l.nft).safeTransferFrom(l.seller, msg.sender, l.tokenId);\n        emit Purchased(msg.sender, nft, tokenId, msg.value);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"SpageroNFTMarket_flattened.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroNFTMarket_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroNFTMarket_flattened.sol\":{\"keccak256\":\"0x63d7fc332134ac71d99d7d16522674f9c5ff3e6c03258b19ffc49c44e1382ac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b73707efdcf14cac623d632df49bf393a805d5a6101f0ff804e81c906166a6d0\",\"dweb:/ipfs/QmbyseY1gmMHCfkBe8URhcx4bCtVoyc7Y5yaHWLe2L5mBr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroNFTMarket_flattened.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroNFTMarket_flattened.sol\":{\"keccak256\":\"0x63d7fc332134ac71d99d7d16522674f9c5ff3e6c03258b19ffc49c44e1382ac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b73707efdcf14cac623d632df49bf393a805d5a6101f0ff804e81c906166a6d0\",\"dweb:/ipfs/QmbyseY1gmMHCfkBe8URhcx4bCtVoyc7Y5yaHWLe2L5mBr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroNFTMarket_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroNFTMarket_flattened.sol\":{\"keccak256\":\"0x63d7fc332134ac71d99d7d16522674f9c5ff3e6c03258b19ffc49c44e1382ac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b73707efdcf14cac623d632df49bf393a805d5a6101f0ff804e81c906166a6d0\",\"dweb:/ipfs/QmbyseY1gmMHCfkBe8URhcx4bCtVoyc7Y5yaHWLe2L5mBr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 135,
								"contract": "SpageroNFTMarket_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SpageroNFTMarket": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Cancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Listed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Purchased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "list",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SpageroNFTMarket_flattened.sol\":9054:11097  contract SpageroNFTMarket is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"SpageroNFTMarket_flattened.sol\":7582:7583  1 */\n  0x01\n    /* \"SpageroNFTMarket_flattened.sol\":7687:7694  _status */\n  0x00\n    /* \"SpageroNFTMarket_flattened.sol\":7687:7709  _status = _NOT_ENTERED */\n  sstore\n    /* \"SpageroNFTMarket_flattened.sol\":9054:11097  contract SpageroNFTMarket is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SpageroNFTMarket_flattened.sol\":9054:11097  contract SpageroNFTMarket is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98590ef9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xc18b8db4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xcce7ec13\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xdda342bb\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"SpageroNFTMarket_flattened.sol\":10219:10549  function cancel(address nft, uint256 tokenId) external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"SpageroNFTMarket_flattened.sol\":9189:9232  mapping(bytes32 => Listing) public listings */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap4\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      dup5\n      jump\n    tag_12:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":942:957   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":924:958   */\n      dup2\n      mstore\n        /* \"#utility.yul\":994:1009   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      dup6\n      add\n        /* \"#utility.yul\":967:1010   */\n      mstore\n        /* \"#utility.yul\":1026:1044   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1019:1053   */\n      mstore\n        /* \"#utility.yul\":1084:1086   */\n      0x60\n        /* \"#utility.yul\":1069:1087   */\n      dup3\n      add\n        /* \"#utility.yul\":1062:1096   */\n      mstore\n        /* \"#utility.yul\":873:876   */\n      0x80\n        /* \"#utility.yul\":858:877   */\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":9189:9232  mapping(bytes32 => Listing) public listings */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SpageroNFTMarket_flattened.sol\":10555:11095  function buy(address nft, uint256 tokenId) external payable nonReentrant {... */\n    tag_4:\n      tag_7\n      tag_19\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n        /* \"SpageroNFTMarket_flattened.sol\":9685:10213  function list(address nft, uint256 tokenId, uint256 price) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_7\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"SpageroNFTMarket_flattened.sol\":10219:10549  function cancel(address nft, uint256 tokenId) external {... */\n    tag_10:\n        /* \"SpageroNFTMarket_flattened.sol\":10284:10293  bytes32 k */\n      0x00\n        /* \"SpageroNFTMarket_flattened.sol\":10296:10314  _key(nft, tokenId) */\n      tag_27\n        /* \"SpageroNFTMarket_flattened.sol\":10301:10304  nft */\n      dup4\n        /* \"SpageroNFTMarket_flattened.sol\":10306:10313  tokenId */\n      dup4\n        /* \"SpageroNFTMarket_flattened.sol\":10296:10300  _key */\n      tag_28\n        /* \"SpageroNFTMarket_flattened.sol\":10296:10314  _key(nft, tokenId) */\n      jump\t// in\n    tag_27:\n        /* \"SpageroNFTMarket_flattened.sol\":10324:10340  Listing memory l */\n      0x00\n        /* \"SpageroNFTMarket_flattened.sol\":10343:10354  listings[k] */\n      dup2\n      dup2\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10343:10351  listings */\n      0x01\n        /* \"SpageroNFTMarket_flattened.sol\":10343:10354  listings[k] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"SpageroNFTMarket_flattened.sol\":10324:10354  Listing memory l = listings[k] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      swap5\n      dup4\n      add\n      sload\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10284:10314  bytes32 k = _key(nft, tokenId) */\n      swap2\n      swap3\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":10324:10354  Listing memory l = listings[k] */\n      swap1\n        /* \"SpageroNFTMarket_flattened.sol\":10364:10409  require(l.seller != address(0), \"not listed\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1697:1699   */\n      0x20\n        /* \"SpageroNFTMarket_flattened.sol\":10364:10409  require(l.seller != address(0), \"not listed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1700   */\n      mstore\n        /* \"#utility.yul\":1736:1738   */\n      0x0a\n        /* \"#utility.yul\":1716:1734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1709:1739   */\n      mstore\n      shl(0xb2, 0x1b9bdd081b1a5cdd1959)\n        /* \"#utility.yul\":1755:1773   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1748:1788   */\n      mstore\n        /* \"#utility.yul\":1805:1823   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":10364:10409  require(l.seller != address(0), \"not listed\") */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"SpageroNFTMarket_flattened.sol\":10427:10435  l.seller */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":10427:10449  l.seller == msg.sender */\n      and\n        /* \"SpageroNFTMarket_flattened.sol\":10439:10449  msg.sender */\n      caller\n        /* \"SpageroNFTMarket_flattened.sol\":10427:10449  l.seller == msg.sender */\n      eq\n        /* \"SpageroNFTMarket_flattened.sol\":10419:10464  require(l.seller == msg.sender, \"not seller\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2036:2038   */\n      0x20\n        /* \"SpageroNFTMarket_flattened.sol\":10419:10464  require(l.seller == msg.sender, \"not seller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2018:2039   */\n      mstore\n        /* \"#utility.yul\":2075:2077   */\n      0x0a\n        /* \"#utility.yul\":2055:2073   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2048:2078   */\n      mstore\n      shl(0xb1, 0x3737ba1039b2b63632b9)\n        /* \"#utility.yul\":2094:2112   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2087:2127   */\n      mstore\n        /* \"#utility.yul\":2144:2162   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":10419:10464  require(l.seller == msg.sender, \"not seller\") */\n      tag_30\n        /* \"#utility.yul\":1834:2168   */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":10419:10464  require(l.seller == msg.sender, \"not seller\") */\n    tag_32:\n        /* \"SpageroNFTMarket_flattened.sol\":10481:10492  listings[k] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10481:10489  listings */\n      0x01\n        /* \"SpageroNFTMarket_flattened.sol\":10481:10492  listings[k] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SpageroNFTMarket_flattened.sol\":10474:10492  delete listings[k] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      swap3\n      dup2\n      add\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap1\n      swap3\n      sstore\n      0x02\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x03\n      swap1\n      swap2\n      add\n      dup3\n      swap1\n      sstore\n        /* \"SpageroNFTMarket_flattened.sol\":10507:10542  Cancelled(msg.sender, nft, tokenId) */\n      mload\n        /* \"SpageroNFTMarket_flattened.sol\":10534:10541  tokenId */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":10507:10542  Cancelled(msg.sender, nft, tokenId) */\n      dup8\n      and\n      swap2\n        /* \"SpageroNFTMarket_flattened.sol\":10517:10527  msg.sender */\n      caller\n      swap2\n        /* \"SpageroNFTMarket_flattened.sol\":10507:10542  Cancelled(msg.sender, nft, tokenId) */\n      0x915fb8c652d6245752cc491b71bd8e87ab6761417f8d2ca353c8055103294c03\n      swap2\n      log4\n        /* \"SpageroNFTMarket_flattened.sol\":10274:10549  {... */\n      pop\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":10219:10549  function cancel(address nft, uint256 tokenId) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroNFTMarket_flattened.sol\":10555:11095  function buy(address nft, uint256 tokenId) external payable nonReentrant {... */\n    tag_20:\n        /* \"SpageroNFTMarket_flattened.sol\":8127:8148  _nonReentrantBefore() */\n      tag_36\n        /* \"SpageroNFTMarket_flattened.sol\":8127:8146  _nonReentrantBefore */\n      tag_37\n        /* \"SpageroNFTMarket_flattened.sol\":8127:8148  _nonReentrantBefore() */\n      jump\t// in\n    tag_36:\n        /* \"SpageroNFTMarket_flattened.sol\":10638:10647  bytes32 k */\n      0x00\n        /* \"SpageroNFTMarket_flattened.sol\":10650:10668  _key(nft, tokenId) */\n      tag_39\n        /* \"SpageroNFTMarket_flattened.sol\":10655:10658  nft */\n      dup4\n        /* \"SpageroNFTMarket_flattened.sol\":10660:10667  tokenId */\n      dup4\n        /* \"SpageroNFTMarket_flattened.sol\":10650:10654  _key */\n      tag_28\n        /* \"SpageroNFTMarket_flattened.sol\":10650:10668  _key(nft, tokenId) */\n      jump\t// in\n    tag_39:\n        /* \"SpageroNFTMarket_flattened.sol\":10678:10694  Listing memory l */\n      0x00\n        /* \"SpageroNFTMarket_flattened.sol\":10697:10708  listings[k] */\n      dup2\n      dup2\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10697:10705  listings */\n      0x01\n        /* \"SpageroNFTMarket_flattened.sol\":10697:10708  listings[k] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"SpageroNFTMarket_flattened.sol\":10678:10708  Listing memory l = listings[k] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      swap5\n      dup4\n      add\n      sload\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10638:10668  bytes32 k = _key(nft, tokenId) */\n      swap2\n      swap3\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":10678:10708  Listing memory l = listings[k] */\n      swap1\n        /* \"SpageroNFTMarket_flattened.sol\":10718:10763  require(l.seller != address(0), \"not listed\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1697:1699   */\n      0x20\n        /* \"SpageroNFTMarket_flattened.sol\":10718:10763  require(l.seller != address(0), \"not listed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1700   */\n      mstore\n        /* \"#utility.yul\":1736:1738   */\n      0x0a\n        /* \"#utility.yul\":1716:1734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1709:1739   */\n      mstore\n      shl(0xb2, 0x1b9bdd081b1a5cdd1959)\n        /* \"#utility.yul\":1755:1773   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1748:1788   */\n      mstore\n        /* \"#utility.yul\":1805:1823   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":10718:10763  require(l.seller != address(0), \"not listed\") */\n      tag_30\n        /* \"#utility.yul\":1495:1829   */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":10718:10763  require(l.seller != address(0), \"not listed\") */\n    tag_40:\n        /* \"SpageroNFTMarket_flattened.sol\":10794:10795  l */\n      dup1\n        /* \"SpageroNFTMarket_flattened.sol\":10794:10801  l.price */\n      0x60\n      add\n      mload\n        /* \"SpageroNFTMarket_flattened.sol\":10781:10790  msg.value */\n      callvalue\n        /* \"SpageroNFTMarket_flattened.sol\":10781:10801  msg.value == l.price */\n      eq\n        /* \"SpageroNFTMarket_flattened.sol\":10773:10815  require(msg.value == l.price, \"bad value\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2375:2377   */\n      0x20\n        /* \"SpageroNFTMarket_flattened.sol\":10773:10815  require(msg.value == l.price, \"bad value\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2357:2378   */\n      mstore\n        /* \"#utility.yul\":2414:2415   */\n      0x09\n        /* \"#utility.yul\":2394:2412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2387:2416   */\n      mstore\n      shl(0xb8, 0x6261642076616c7565)\n        /* \"#utility.yul\":2432:2450   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2425:2464   */\n      mstore\n        /* \"#utility.yul\":2481:2499   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":10773:10815  require(msg.value == l.price, \"bad value\") */\n      tag_30\n        /* \"#utility.yul\":2173:2505   */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":10773:10815  require(msg.value == l.price, \"bad value\") */\n    tag_42:\n        /* \"SpageroNFTMarket_flattened.sol\":10832:10843  listings[k] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10832:10840  listings */\n      0x01\n        /* \"SpageroNFTMarket_flattened.sol\":10832:10843  listings[k] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SpageroNFTMarket_flattened.sol\":10825:10843  delete listings[k] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      swap3\n      dup2\n      add\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap1\n      swap3\n      sstore\n      0x02\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x03\n      swap1\n      swap2\n      add\n      dup3\n      swap1\n      sstore\n        /* \"SpageroNFTMarket_flattened.sol\":10875:10883  l.seller */\n      dup3\n      mload\n        /* \"SpageroNFTMarket_flattened.sol\":10867:10911  payable(l.seller).call{value: msg.value}(\"\") */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":10867:10889  payable(l.seller).call */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"SpageroNFTMarket_flattened.sol\":10897:10906  msg.value */\n      callvalue\n      swap1\n        /* \"SpageroNFTMarket_flattened.sol\":10832:10843  listings[k] */\n      dup4\n        /* \"SpageroNFTMarket_flattened.sol\":10867:10911  payable(l.seller).call{value: msg.value}(\"\") */\n      dup2\n        /* \"SpageroNFTMarket_flattened.sol\":10832:10843  listings[k] */\n      dup2\n        /* \"SpageroNFTMarket_flattened.sol\":10867:10911  payable(l.seller).call{value: msg.value}(\"\") */\n      dup2\n        /* \"SpageroNFTMarket_flattened.sol\":10897:10906  msg.value */\n      dup6\n        /* \"SpageroNFTMarket_flattened.sol\":10867:10889  payable(l.seller).call */\n      dup8\n        /* \"SpageroNFTMarket_flattened.sol\":10867:10911  payable(l.seller).call{value: msg.value}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_49\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_48)\n    tag_49:\n      0x60\n      swap2\n      pop\n    tag_48:\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":10853:10911  (bool ok, ) = payable(l.seller).call{value: msg.value}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":10929:10931  ok */\n      dup1\n        /* \"SpageroNFTMarket_flattened.sol\":10921:10953  require(ok, \"pay seller failed\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2922:2924   */\n      0x20\n        /* \"SpageroNFTMarket_flattened.sol\":10921:10953  require(ok, \"pay seller failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2904:2925   */\n      mstore\n        /* \"#utility.yul\":2961:2963   */\n      0x11\n        /* \"#utility.yul\":2941:2959   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2934:2964   */\n      mstore\n      shl(0x7a, 0x1c185e481cd95b1b195c8819985a5b1959)\n        /* \"#utility.yul\":2980:2998   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2973:3020   */\n      mstore\n        /* \"#utility.yul\":3037:3055   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":10921:10953  require(ok, \"pay seller failed\") */\n      tag_30\n        /* \"#utility.yul\":2720:3061   */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":10921:10953  require(ok, \"pay seller failed\") */\n    tag_50:\n        /* \"SpageroNFTMarket_flattened.sol\":10971:10976  l.nft */\n      0x20\n      dup3\n      add\n      mload\n        /* \"SpageroNFTMarket_flattened.sol\":10995:11003  l.seller */\n      dup3\n      mload\n        /* \"SpageroNFTMarket_flattened.sol\":11017:11026  l.tokenId */\n      0x40\n      dup1\n      dup6\n      add\n      mload\n        /* \"SpageroNFTMarket_flattened.sol\":10963:11027  IERC721(l.nft).safeTransferFrom(l.seller, msg.sender, l.tokenId) */\n      swap1\n      mload\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3324:3339   */\n      swap3\n      dup4\n      and\n        /* \"SpageroNFTMarket_flattened.sol\":10963:11027  IERC721(l.nft).safeTransferFrom(l.seller, msg.sender, l.tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3306:3340   */\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":11005:11015  msg.sender */\n      caller\n        /* \"#utility.yul\":3356:3374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3349:3392   */\n      mstore\n        /* \"#utility.yul\":3408:3426   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3401:3435   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10963:10994  IERC721(l.nft).safeTransferFrom */\n      swap2\n      and\n      swap1\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":3241:3259   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":10963:11027  IERC721(l.nft).safeTransferFrom(l.seller, msg.sender, l.tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":11069:11076  tokenId */\n      dup4\n        /* \"SpageroNFTMarket_flattened.sol\":11064:11067  nft */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":11042:11088  Purchased(msg.sender, nft, tokenId, msg.value) */\n      and\n        /* \"SpageroNFTMarket_flattened.sol\":11052:11062  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":11042:11088  Purchased(msg.sender, nft, tokenId, msg.value) */\n      and\n      0xa326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49\n        /* \"SpageroNFTMarket_flattened.sol\":11078:11087  msg.value */\n      callvalue\n        /* \"SpageroNFTMarket_flattened.sol\":11042:11088  Purchased(msg.sender, nft, tokenId, msg.value) */\n      mload(0x40)\n      tag_58\n      swap2\n        /* \"#utility.yul\":3592:3617   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3580:3582   */\n      0x20\n        /* \"#utility.yul\":3565:3583   */\n      add\n      swap1\n        /* \"#utility.yul\":3446:3623   */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":11042:11088  Purchased(msg.sender, nft, tokenId, msg.value) */\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"SpageroNFTMarket_flattened.sol\":10628:11095  {... */\n      pop\n      pop\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":8169:8189  _nonReentrantAfter() */\n      tag_60\n        /* \"SpageroNFTMarket_flattened.sol\":7582:7583  1 */\n      0x01\n        /* \"SpageroNFTMarket_flattened.sol\":8675:8682  _status */\n      0x00\n        /* \"SpageroNFTMarket_flattened.sol\":8675:8697  _status = _NOT_ENTERED */\n      sstore\n        /* \"SpageroNFTMarket_flattened.sol\":8495:8704  function _nonReentrantAfter() private {... */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":8169:8189  _nonReentrantAfter() */\n    tag_60:\n        /* \"SpageroNFTMarket_flattened.sol\":10555:11095  function buy(address nft, uint256 tokenId) external payable nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroNFTMarket_flattened.sol\":9685:10213  function list(address nft, uint256 tokenId, uint256 price) external {... */\n    tag_25:\n        /* \"SpageroNFTMarket_flattened.sol\":9779:9780  0 */\n      0x00\n        /* \"SpageroNFTMarket_flattened.sol\":9771:9776  price */\n      dup2\n        /* \"SpageroNFTMarket_flattened.sol\":9771:9780  price > 0 */\n      gt\n        /* \"SpageroNFTMarket_flattened.sol\":9763:9792  require(price > 0, \"price=0\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3830:3832   */\n      0x20\n        /* \"SpageroNFTMarket_flattened.sol\":9763:9792  require(price > 0, \"price=0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3812:3833   */\n      mstore\n        /* \"#utility.yul\":3869:3870   */\n      0x07\n        /* \"#utility.yul\":3849:3867   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3842:3871   */\n      mstore\n      shl(0xcc, 0x070726963653d3)\n        /* \"#utility.yul\":3887:3905   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3880:3917   */\n      mstore\n        /* \"#utility.yul\":3934:3952   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":9763:9792  require(price > 0, \"price=0\") */\n      tag_30\n        /* \"#utility.yul\":3628:3958   */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":9763:9792  require(price > 0, \"price=0\") */\n    tag_63:\n        /* \"SpageroNFTMarket_flattened.sol\":9848:9870  token.ownerOf(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3592:3617   */\n      dup4\n      swap1\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":9826:9829  nft */\n      dup4\n      swap1\n        /* \"SpageroNFTMarket_flattened.sol\":9874:9884  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":9848:9861  token.ownerOf */\n      dup4\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":3565:3583   */\n      0x24\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":9848:9870  token.ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":9848:9884  token.ownerOf(tokenId) == msg.sender */\n      and\n      eq\n        /* \"SpageroNFTMarket_flattened.sol\":9840:9898  require(token.ownerOf(tokenId) == msg.sender, \"not owner\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"SpageroNFTMarket_flattened.sol\":9840:9898  require(token.ownerOf(tokenId) == msg.sender, \"not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4403:4424   */\n      mstore\n        /* \"#utility.yul\":4460:4461   */\n      0x09\n        /* \"#utility.yul\":4440:4458   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4433:4462   */\n      mstore\n      shl(0xb9, 0x3737ba1037bbb732b9)\n        /* \"#utility.yul\":4478:4496   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4471:4510   */\n      mstore\n        /* \"#utility.yul\":4527:4545   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":9840:9898  require(token.ownerOf(tokenId) == msg.sender, \"not owner\") */\n      tag_30\n        /* \"#utility.yul\":4219:4551   */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":9840:9898  require(token.ownerOf(tokenId) == msg.sender, \"not owner\") */\n    tag_71:\n        /* \"SpageroNFTMarket_flattened.sol\":9916:9965  token.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xe985e9c5)\n      dup2\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":9939:9949  msg.sender */\n      caller\n        /* \"SpageroNFTMarket_flattened.sol\":9916:9965  token.isApprovedForAll(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4768:4802   */\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":9959:9963  this */\n      address\n        /* \"#utility.yul\":4818:4836   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4811:4854   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":9916:9938  token.isApprovedForAll */\n      dup3\n      and\n      swap1\n      0xe985e9c5\n      swap1\n        /* \"#utility.yul\":4703:4721   */\n      0x44\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":9916:9965  token.isApprovedForAll(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"SpageroNFTMarket_flattened.sol\":9916:10012  token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this) */\n      dup1\n      tag_80\n      jumpi\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":9969:9995  token.getApproved(tokenId) */\n      mload(0x40)\n      shl(0xe2, 0x020604bf)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3592:3617   */\n      dup5\n      swap1\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10007:10011  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":9969:9986  token.getApproved */\n      dup4\n      and\n      swap1\n      0x081812fc\n      swap1\n        /* \"#utility.yul\":3565:3583   */\n      0x24\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":9969:9995  token.getApproved(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SpageroNFTMarket_flattened.sol\":9969:10012  token.getApproved(tokenId) == address(this) */\n      and\n      eq\n        /* \"SpageroNFTMarket_flattened.sol\":9916:10012  token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this) */\n    tag_80:\n        /* \"SpageroNFTMarket_flattened.sol\":9908:10048  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),... */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5349:5351   */\n      0x20\n        /* \"SpageroNFTMarket_flattened.sol\":9908:10048  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5331:5352   */\n      mstore\n        /* \"#utility.yul\":5388:5390   */\n      0x13\n        /* \"#utility.yul\":5368:5386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5361:5391   */\n      mstore\n      shl(0x6a, 0x1b585c9ad95d081b9bdd08185c1c1c9bdd9959)\n        /* \"#utility.yul\":5407:5425   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5400:5449   */\n      mstore\n        /* \"#utility.yul\":5466:5484   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":9908:10048  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),... */\n      tag_30\n        /* \"#utility.yul\":5147:5490   */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":9908:10048  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId) == address(this),... */\n    tag_85:\n        /* \"SpageroNFTMarket_flattened.sol\":10058:10067  bytes32 k */\n      0x00\n        /* \"SpageroNFTMarket_flattened.sol\":10070:10088  _key(nft, tokenId) */\n      tag_88\n        /* \"SpageroNFTMarket_flattened.sol\":10075:10078  nft */\n      dup6\n        /* \"SpageroNFTMarket_flattened.sol\":10080:10087  tokenId */\n      dup6\n        /* \"SpageroNFTMarket_flattened.sol\":10070:10074  _key */\n      tag_28\n        /* \"SpageroNFTMarket_flattened.sol\":10070:10088  _key(nft, tokenId) */\n      jump\t// in\n    tag_88:\n        /* \"SpageroNFTMarket_flattened.sol\":10112:10152  Listing(msg.sender, nft, tokenId, price) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10120:10130  msg.sender */\n      caller\n        /* \"SpageroNFTMarket_flattened.sol\":10112:10152  Listing(msg.sender, nft, tokenId, price) */\n      dup1\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n      dup6\n      dup8\n      add\n      dup13\n      dup2\n      mstore\n      0x60\n      dup8\n      add\n      dup13\n      dup2\n      mstore\n      0x00\n        /* \"SpageroNFTMarket_flattened.sol\":10098:10109  listings[k] */\n      dup11\n      dup2\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10098:10106  listings */\n      0x01\n        /* \"SpageroNFTMarket_flattened.sol\":10098:10109  listings[k] */\n      dup1\n      dup7\n      mstore\n      swap1\n      dup11\n      swap1\n      keccak256\n        /* \"SpageroNFTMarket_flattened.sol\":10098:10152  listings[k] = Listing(msg.sender, nft, tokenId, price) */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup9\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      dup11\n      sstore\n      swap4\n      mload\n      swap1\n      dup10\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap8\n      and\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap5\n      sstore\n      swap3\n      mload\n      0x02\n      dup7\n      add\n      sstore\n      swap2\n      mload\n      0x03\n      swap1\n      swap5\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"SpageroNFTMarket_flattened.sol\":10167:10206  Listed(msg.sender, nft, tokenId, price) */\n      swap3\n      mload\n        /* \"#utility.yul\":3592:3617   */\n      dup8\n      dup2\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":10098:10109  listings[k] */\n      swap4\n      swap5\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":10112:10152  Listing(msg.sender, nft, tokenId, price) */\n      dup8\n      swap4\n      swap2\n      swap3\n        /* \"SpageroNFTMarket_flattened.sol\":10120:10130  msg.sender */\n      swap1\n      swap2\n        /* \"SpageroNFTMarket_flattened.sol\":10167:10206  Listed(msg.sender, nft, tokenId, price) */\n      0xd9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca\n      swap2\n        /* \"#utility.yul\":3565:3583   */\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":10167:10206  Listed(msg.sender, nft, tokenId, price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"SpageroNFTMarket_flattened.sol\":9753:10213  {... */\n      pop\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":9685:10213  function list(address nft, uint256 tokenId, uint256 price) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroNFTMarket_flattened.sol\":9539:9679  function _key(address nft, uint256 tokenId) private pure returns (bytes32) {... */\n    tag_28:\n        /* \"SpageroNFTMarket_flattened.sol\":9641:9671  abi.encodePacked(nft, tokenId) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":5672:5674   */\n      0x60\n        /* \"#utility.yul\":5668:5683   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":5664:5717   */\n      and\n        /* \"SpageroNFTMarket_flattened.sol\":9641:9671  abi.encodePacked(nft, tokenId) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":5652:5718   */\n      mstore\n        /* \"#utility.yul\":5734:5746   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":5727:5755   */\n      dup3\n      swap1\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":9605:9612  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":5771:5783   */\n      0x54\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":9641:9671  abi.encodePacked(nft, tokenId) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"SpageroNFTMarket_flattened.sol\":9631:9672  keccak256(abi.encodePacked(nft, tokenId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"SpageroNFTMarket_flattened.sol\":9624:9672  return keccak256(abi.encodePacked(nft, tokenId)) */\n      swap1\n      pop\n        /* \"SpageroNFTMarket_flattened.sol\":9539:9679  function _key(address nft, uint256 tokenId) private pure returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SpageroNFTMarket_flattened.sol\":8202:8489  function _nonReentrantBefore() private {... */\n    tag_37:\n        /* \"SpageroNFTMarket_flattened.sol\":7625:7626  2 */\n      0x02\n        /* \"SpageroNFTMarket_flattened.sol\":8334:8341  _status */\n      sload(0x00)\n        /* \"SpageroNFTMarket_flattened.sol\":8334:8353  _status != _ENTERED */\n      sub\n        /* \"SpageroNFTMarket_flattened.sol\":8326:8389  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5996:5998   */\n      0x20\n        /* \"SpageroNFTMarket_flattened.sol\":8326:8389  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5978:5999   */\n      mstore\n        /* \"#utility.yul\":6035:6037   */\n      0x1f\n        /* \"#utility.yul\":6015:6033   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6008:6038   */\n      mstore\n        /* \"#utility.yul\":6074:6107   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6054:6072   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6047:6108   */\n      mstore\n        /* \"#utility.yul\":6125:6143   */\n      0x64\n      add\n        /* \"SpageroNFTMarket_flattened.sol\":8326:8389  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_30\n        /* \"#utility.yul\":5794:6149   */\n      jump\n        /* \"SpageroNFTMarket_flattened.sol\":8326:8389  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_94:\n        /* \"SpageroNFTMarket_flattened.sol\":7625:7626  2 */\n      0x02\n        /* \"SpageroNFTMarket_flattened.sol\":8464:8471  _status */\n      0x00\n        /* \"SpageroNFTMarket_flattened.sol\":8464:8482  _status = _ENTERED */\n      sstore\n        /* \"SpageroNFTMarket_flattened.sol\":8202:8489  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":69:139   */\n    tag_101:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:465   */\n    tag_9:\n        /* \"#utility.yul\":218:224   */\n      0x00\n        /* \"#utility.yul\":226:232   */\n      dup1\n        /* \"#utility.yul\":279:281   */\n      0x40\n        /* \"#utility.yul\":267:276   */\n      dup4\n        /* \"#utility.yul\":258:265   */\n      dup6\n        /* \"#utility.yul\":254:277   */\n      sub\n        /* \"#utility.yul\":250:282   */\n      slt\n        /* \"#utility.yul\":247:299   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":295:296   */\n      0x00\n        /* \"#utility.yul\":292:293   */\n      dup1\n        /* \"#utility.yul\":285:297   */\n      revert\n        /* \"#utility.yul\":247:299   */\n    tag_103:\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":321:344   */\n      calldataload\n        /* \"#utility.yul\":353:384   */\n      tag_104\n        /* \"#utility.yul\":378:383   */\n      dup2\n        /* \"#utility.yul\":353:384   */\n      tag_98\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":403:408   */\n      swap5\n        /* \"#utility.yul\":455:457   */\n      0x20\n        /* \"#utility.yul\":440:458   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":427:459   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":150:465   */\n      jump\t// out\n        /* \"#utility.yul\":470:650   */\n    tag_14:\n        /* \"#utility.yul\":529:535   */\n      0x00\n        /* \"#utility.yul\":582:584   */\n      0x20\n        /* \"#utility.yul\":570:579   */\n      dup3\n        /* \"#utility.yul\":561:568   */\n      dup5\n        /* \"#utility.yul\":557:580   */\n      sub\n        /* \"#utility.yul\":553:585   */\n      slt\n        /* \"#utility.yul\":550:602   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":598:599   */\n      0x00\n        /* \"#utility.yul\":595:596   */\n      dup1\n        /* \"#utility.yul\":588:600   */\n      revert\n        /* \"#utility.yul\":550:602   */\n    tag_106:\n      pop\n        /* \"#utility.yul\":621:644   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":470:650   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1107:1490   */\n    tag_24:\n        /* \"#utility.yul\":1184:1190   */\n      0x00\n        /* \"#utility.yul\":1192:1198   */\n      dup1\n        /* \"#utility.yul\":1200:1206   */\n      0x00\n        /* \"#utility.yul\":1253:1255   */\n      0x60\n        /* \"#utility.yul\":1241:1250   */\n      dup5\n        /* \"#utility.yul\":1232:1239   */\n      dup7\n        /* \"#utility.yul\":1228:1251   */\n      sub\n        /* \"#utility.yul\":1224:1256   */\n      slt\n        /* \"#utility.yul\":1221:1273   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1269:1270   */\n      0x00\n        /* \"#utility.yul\":1266:1267   */\n      dup1\n        /* \"#utility.yul\":1259:1271   */\n      revert\n        /* \"#utility.yul\":1221:1273   */\n    tag_109:\n        /* \"#utility.yul\":1308:1317   */\n      dup4\n        /* \"#utility.yul\":1295:1318   */\n      calldataload\n        /* \"#utility.yul\":1327:1358   */\n      tag_110\n        /* \"#utility.yul\":1352:1357   */\n      dup2\n        /* \"#utility.yul\":1327:1358   */\n      tag_98\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1377:1382   */\n      swap6\n        /* \"#utility.yul\":1429:1431   */\n      0x20\n        /* \"#utility.yul\":1414:1432   */\n      dup6\n      add\n        /* \"#utility.yul\":1401:1433   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1480:1482   */\n      0x40\n        /* \"#utility.yul\":1465:1483   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":1452:1484   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1107:1490   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3963:4214   */\n    tag_70:\n        /* \"#utility.yul\":4033:4039   */\n      0x00\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4074:4083   */\n      dup3\n        /* \"#utility.yul\":4065:4072   */\n      dup5\n        /* \"#utility.yul\":4061:4084   */\n      sub\n        /* \"#utility.yul\":4057:4089   */\n      slt\n        /* \"#utility.yul\":4054:4106   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":4102:4103   */\n      0x00\n        /* \"#utility.yul\":4099:4100   */\n      dup1\n        /* \"#utility.yul\":4092:4104   */\n      revert\n        /* \"#utility.yul\":4054:4106   */\n    tag_120:\n        /* \"#utility.yul\":4134:4143   */\n      dup2\n        /* \"#utility.yul\":4128:4144   */\n      mload\n        /* \"#utility.yul\":4153:4184   */\n      tag_121\n        /* \"#utility.yul\":4178:4183   */\n      dup2\n        /* \"#utility.yul\":4153:4184   */\n      tag_98\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4203:4208   */\n      swap4\n        /* \"#utility.yul\":3963:4214   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4865:5142   */\n    tag_79:\n        /* \"#utility.yul\":4932:4938   */\n      0x00\n        /* \"#utility.yul\":4985:4987   */\n      0x20\n        /* \"#utility.yul\":4973:4982   */\n      dup3\n        /* \"#utility.yul\":4964:4971   */\n      dup5\n        /* \"#utility.yul\":4960:4983   */\n      sub\n        /* \"#utility.yul\":4956:4988   */\n      slt\n        /* \"#utility.yul\":4953:5005   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":5001:5002   */\n      0x00\n        /* \"#utility.yul\":4998:4999   */\n      dup1\n        /* \"#utility.yul\":4991:5003   */\n      revert\n        /* \"#utility.yul\":4953:5005   */\n    tag_125:\n        /* \"#utility.yul\":5033:5042   */\n      dup2\n        /* \"#utility.yul\":5027:5043   */\n      mload\n        /* \"#utility.yul\":5086:5091   */\n      dup1\n        /* \"#utility.yul\":5079:5092   */\n      iszero\n        /* \"#utility.yul\":5072:5093   */\n      iszero\n        /* \"#utility.yul\":5065:5070   */\n      dup2\n        /* \"#utility.yul\":5062:5094   */\n      eq\n        /* \"#utility.yul\":5052:5112   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":5108:5109   */\n      0x00\n        /* \"#utility.yul\":5105:5106   */\n      dup1\n        /* \"#utility.yul\":5098:5110   */\n      revert\n\n    auxdata: 0xa26469706673582212204dd39874ddec37406841af45d60723cfa510c5791c5ac550e4adf8f39519d05564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060015f55610948806100215f395ff3fe60806040526004361061003e575f3560e01c806398590ef914610042578063c18b8db414610063578063cce7ec13146100e1578063dda342bb146100f4575b5f80fd5b34801561004d575f80fd5b5061006161005c36600461085e565b610113565b005b34801561006e575f80fd5b506100b261007d366004610888565b600160208190525f918252604090912080549181015460028201546003909201546001600160a01b0393841693909116919084565b604080516001600160a01b03958616815294909316602085015291830152606082015260800160405180910390f35b6100616100ef36600461085e565b610265565b3480156100ff575f80fd5b5061006161010e36600461089f565b6104da565b5f61011e83836107aa565b5f81815260016020818152604092839020835160808101855281546001600160a01b039081168083529483015416928101929092526002810154938201939093526003909201546060830152919250906101ac5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064015b60405180910390fd5b80516001600160a01b031633146101f25760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b63632b960b11b60448201526064016101a3565b5f82815260016020819052604080832080546001600160a01b0319908116825592810180549093169092556002820183905560039091018290555184916001600160a01b0387169133917f915fb8c652d6245752cc491b71bd8e87ab6761417f8d2ca353c8055103294c0391a450505050565b61026d6107f0565b5f61027883836107aa565b5f81815260016020818152604092839020835160808101855281546001600160a01b039081168083529483015416928101929092526002810154938201939093526003909201546060830152919250906103015760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064016101a3565b806060015134146103405760405162461bcd60e51b81526020600482015260096024820152686261642076616c756560b81b60448201526064016101a3565b5f82815260016020819052604080832080546001600160a01b031990811682559281018054909316909255600282018390556003909101829055825190516001600160a01b039091169034908381818185875af1925050503d805f81146103c2576040519150601f19603f3d011682016040523d82523d5f602084013e6103c7565b606091505b505090508061040c5760405162461bcd60e51b81526020600482015260116024820152701c185e481cd95b1b195c8819985a5b1959607a1b60448201526064016101a3565b602082015182516040808501519051632142170760e11b81526001600160a01b03928316600482015233602482015260448101919091529116906342842e0e906064015f604051808303815f87803b158015610466575f80fd5b505af1158015610478573d5f803e3d5ffd5b5050505083856001600160a01b0316336001600160a01b03167fa326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49346040516104c291815260200190565b60405180910390a45050506104d660015f55565b5050565b5f81116105135760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064016101a3565b6040516331a9108f60e11b815260048101839052839033906001600160a01b03831690636352211e90602401602060405180830381865afa15801561055a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061057e91906108d1565b6001600160a01b0316146105c05760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016101a3565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0382169063e985e9c590604401602060405180830381865afa158015610608573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062c91906108f3565b806106a6575060405163020604bf60e21b81526004810184905230906001600160a01b0383169063081812fc90602401602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b91906108d1565b6001600160a01b0316145b6106e85760405162461bcd60e51b81526020600482015260136024820152721b585c9ad95d081b9bdd08185c1c1c9bdd9959606a1b60448201526064016101a3565b5f6106f385856107aa565b60408051608081018252338082526001600160a01b0389811660208085018281528587018c8152606087018c81525f8a81526001808652908a9020985189549088166001600160a01b0319918216178a55935190890180549190971693169290921790945592516002860155915160039094019390935592518781529394508793919290917fd9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca910160405180910390a45050505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290525f9060540160405160208183030381529060405280519060200120905092915050565b60025f54036108415760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101a3565b60025f55565b6001600160a01b038116811461085b575f80fd5b50565b5f806040838503121561086f575f80fd5b823561087a81610847565b946020939093013593505050565b5f60208284031215610898575f80fd5b5035919050565b5f805f606084860312156108b1575f80fd5b83356108bc81610847565b95602085013595506040909401359392505050565b5f602082840312156108e1575f80fd5b81516108ec81610847565b9392505050565b5f60208284031215610903575f80fd5b815180151581146108ec575f80fdfea26469706673582212204dd39874ddec37406841af45d60723cfa510c5791c5ac550e4adf8f39519d05564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 SSTORE PUSH2 0x948 DUP1 PUSH2 0x21 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98590EF9 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0xC18B8DB4 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xCCE7EC13 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xDDA342BB EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0xEF CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH0 PUSH2 0x11E DUP4 DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE SWAP5 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 PUSH2 0x1AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081B1A5CDD1959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x3737BA1039B2B63632B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE MLOAD DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0x915FB8C652D6245752CC491B71BD8E87AB6761417F8D2CA353C8055103294C03 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x26D PUSH2 0x7F0 JUMP JUMPDEST PUSH0 PUSH2 0x278 DUP4 DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE SWAP5 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081B1A5CDD1959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD CALLVALUE EQ PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6261642076616C7565 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE DUP3 MLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1C185E481CD95B1B195C8819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD SWAP1 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x478 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA326259EC721617ACD3CB2A00BCBEAC91EEFE409880E49AA2BBF473ED648DA49 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x4D6 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x70726963653D3 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE DUP4 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x608 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST DUP1 PUSH2 0x6A6 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B585C9AD95D081B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 PUSH2 0x6F3 DUP6 DUP6 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP13 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP13 DUP2 MSTORE PUSH0 DUP11 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD SWAP1 DUP10 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP8 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD DUP8 DUP2 MSTORE SWAP4 SWAP5 POP DUP8 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xD9D69FEE247951CC283DC6F5B64C36CE396A36146405A798B86EBFD113C8B5CA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x86F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x87A DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x898 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x8BC DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8EC DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8EC JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xD3 SWAP9 PUSH21 0xDDEC37406841AF45D60723CFA510C5791C5AC550E4 0xAD 0xF8 RETURN SWAP6 NOT 0xD0 SSTORE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "9054:2043:0:-:0;;;;;;;;;;;;-1:-1:-1;7582:1:0;7687:7;:22;9054:2043;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_key_252": {
									"entryPoint": 1962,
									"id": 252,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_177": {
									"entryPoint": null,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_169": {
									"entryPoint": 2032,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buy_481": {
									"entryPoint": 613,
									"id": 481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cancel_391": {
									"entryPoint": 275,
									"id": 391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@list_337": {
									"entryPoint": 1242,
									"id": 337,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@listings_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6151:1",
										"nodeType": "YulBlock",
										"src": "0:6151:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:86:1",
													"nodeType": "YulBlock",
													"src": "59:86:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:1",
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:1",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:1",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nativeSrc": "125:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nativeSrc": "125:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "108:3:1",
																										"nodeType": "YulLiteral",
																										"src": "108:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "113:1:1",
																										"nodeType": "YulLiteral",
																										"src": "113:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "104:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:1"
																								},
																								"nativeSrc": "104:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "117:1:1",
																								"nodeType": "YulLiteral",
																								"src": "117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "100:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:1"
																						},
																						"nativeSrc": "100:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nativeSrc": "89:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nativeSrc": "79:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nativeSrc": "72:50:1",
																"nodeType": "YulFunctionCall",
																"src": "72:50:1"
															},
															"nativeSrc": "69:70:1",
															"nodeType": "YulIf",
															"src": "69:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:131:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:1",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nativeSrc": "237:228:1",
													"nodeType": "YulBlock",
													"src": "237:228:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "283:16:1",
																"nodeType": "YulBlock",
																"src": "283:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "292:1:1",
																					"nodeType": "YulLiteral",
																					"src": "292:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "295:1:1",
																					"nodeType": "YulLiteral",
																					"src": "295:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "285:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:1"
																			},
																			"nativeSrc": "285:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "285:12:1"
																		},
																		"nativeSrc": "285:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "285:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "258:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "258:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "267:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "267:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "254:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:1"
																		},
																		"nativeSrc": "254:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "254:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "279:2:1",
																		"nodeType": "YulLiteral",
																		"src": "279:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "250:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "250:3:1"
																},
																"nativeSrc": "250:32:1",
																"nodeType": "YulFunctionCall",
																"src": "250:32:1"
															},
															"nativeSrc": "247:52:1",
															"nodeType": "YulIf",
															"src": "247:52:1"
														},
														{
															"nativeSrc": "308:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "308:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "321:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "321:12:1"
																},
																"nativeSrc": "321:23:1",
																"nodeType": "YulFunctionCall",
																"src": "321:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "312:5:1",
																	"nodeType": "YulTypedName",
																	"src": "312:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "378:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "378:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "353:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "353:24:1"
																},
																"nativeSrc": "353:31:1",
																"nodeType": "YulFunctionCall",
																"src": "353:31:1"
															},
															"nativeSrc": "353:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "353:31:1"
														},
														{
															"nativeSrc": "393:15:1",
															"nodeType": "YulAssignment",
															"src": "393:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "403:5:1",
																"nodeType": "YulIdentifier",
																"src": "403:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "393:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:1"
																}
															]
														},
														{
															"nativeSrc": "417:42:1",
															"nodeType": "YulAssignment",
															"src": "417:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "444:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "444:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "455:2:1",
																				"nodeType": "YulLiteral",
																				"src": "455:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "440:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "440:3:1"
																		},
																		"nativeSrc": "440:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "440:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "427:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "427:12:1"
																},
																"nativeSrc": "427:32:1",
																"nodeType": "YulFunctionCall",
																"src": "427:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "417:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "150:315:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "195:9:1",
														"nodeType": "YulTypedName",
														"src": "195:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "206:7:1",
														"nodeType": "YulTypedName",
														"src": "206:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "218:6:1",
														"nodeType": "YulTypedName",
														"src": "218:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "226:6:1",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "150:315:1"
											},
											{
												"body": {
													"nativeSrc": "540:110:1",
													"nodeType": "YulBlock",
													"src": "540:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "586:16:1",
																"nodeType": "YulBlock",
																"src": "586:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "595:1:1",
																					"nodeType": "YulLiteral",
																					"src": "595:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "598:1:1",
																					"nodeType": "YulLiteral",
																					"src": "598:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "588:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:6:1"
																			},
																			"nativeSrc": "588:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "588:12:1"
																		},
																		"nativeSrc": "588:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "561:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "561:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "570:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "570:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "557:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "557:3:1"
																		},
																		"nativeSrc": "557:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "557:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "582:2:1",
																		"nodeType": "YulLiteral",
																		"src": "582:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "553:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "553:3:1"
																},
																"nativeSrc": "553:32:1",
																"nodeType": "YulFunctionCall",
																"src": "553:32:1"
															},
															"nativeSrc": "550:52:1",
															"nodeType": "YulIf",
															"src": "550:52:1"
														},
														{
															"nativeSrc": "611:33:1",
															"nodeType": "YulAssignment",
															"src": "611:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "634:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "634:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "621:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "621:12:1"
																},
																"nativeSrc": "621:23:1",
																"nodeType": "YulFunctionCall",
																"src": "621:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "611:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "611:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "470:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "506:9:1",
														"nodeType": "YulTypedName",
														"src": "506:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "517:7:1",
														"nodeType": "YulTypedName",
														"src": "517:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "529:6:1",
														"nodeType": "YulTypedName",
														"src": "529:6:1",
														"type": ""
													}
												],
												"src": "470:180:1"
											},
											{
												"body": {
													"nativeSrc": "840:262:1",
													"nodeType": "YulBlock",
													"src": "840:262:1",
													"statements": [
														{
															"nativeSrc": "850:27:1",
															"nodeType": "YulAssignment",
															"src": "850:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "862:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "862:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "873:3:1",
																		"nodeType": "YulLiteral",
																		"src": "873:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "858:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:1"
																},
																"nativeSrc": "858:19:1",
																"nodeType": "YulFunctionCall",
																"src": "858:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "850:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "850:4:1"
																}
															]
														},
														{
															"nativeSrc": "886:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "886:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "904:3:1",
																				"nodeType": "YulLiteral",
																				"src": "904:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "909:1:1",
																				"nodeType": "YulLiteral",
																				"src": "909:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "900:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nativeSrc": "900:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "900:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "913:1:1",
																		"nodeType": "YulLiteral",
																		"src": "913:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "896:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "896:3:1"
																},
																"nativeSrc": "896:19:1",
																"nodeType": "YulFunctionCall",
																"src": "896:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "890:2:1",
																	"nodeType": "YulTypedName",
																	"src": "890:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "931:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "931:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "946:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "954:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "954:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "942:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:1"
																		},
																		"nativeSrc": "942:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "942:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "924:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:1"
																},
																"nativeSrc": "924:34:1",
																"nodeType": "YulFunctionCall",
																"src": "924:34:1"
															},
															"nativeSrc": "924:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "924:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:1",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "998:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "998:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1006:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1006:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "994:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "994:3:1"
																		},
																		"nativeSrc": "994:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "994:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "967:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "967:6:1"
																},
																"nativeSrc": "967:43:1",
																"nodeType": "YulFunctionCall",
																"src": "967:43:1"
															},
															"nativeSrc": "967:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "967:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1030:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1030:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1041:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1041:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1026:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:1"
																		},
																		"nativeSrc": "1026:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "1046:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1046:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1019:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:1"
																},
																"nativeSrc": "1019:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1019:34:1"
															},
															"nativeSrc": "1019:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1019:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1073:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1073:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1084:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1084:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1069:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1069:3:1"
																		},
																		"nativeSrc": "1069:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1069:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "1089:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1089:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1062:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1062:6:1"
																},
																"nativeSrc": "1062:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1062:34:1"
															},
															"nativeSrc": "1062:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1062:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "655:447:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "785:9:1",
														"nodeType": "YulTypedName",
														"src": "785:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "796:6:1",
														"nodeType": "YulTypedName",
														"src": "796:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "804:6:1",
														"nodeType": "YulTypedName",
														"src": "804:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "812:6:1",
														"nodeType": "YulTypedName",
														"src": "812:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "820:6:1",
														"nodeType": "YulTypedName",
														"src": "820:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "831:4:1",
														"nodeType": "YulTypedName",
														"src": "831:4:1",
														"type": ""
													}
												],
												"src": "655:447:1"
											},
											{
												"body": {
													"nativeSrc": "1211:279:1",
													"nodeType": "YulBlock",
													"src": "1211:279:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1257:16:1",
																"nodeType": "YulBlock",
																"src": "1257:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1266:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1266:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1269:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1269:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1259:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1259:6:1"
																			},
																			"nativeSrc": "1259:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1259:12:1"
																		},
																		"nativeSrc": "1259:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1259:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1232:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1232:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1241:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1241:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1228:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1228:3:1"
																		},
																		"nativeSrc": "1228:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1228:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1253:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1253:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1224:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1224:3:1"
																},
																"nativeSrc": "1224:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1224:32:1"
															},
															"nativeSrc": "1221:52:1",
															"nodeType": "YulIf",
															"src": "1221:52:1"
														},
														{
															"nativeSrc": "1282:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1282:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1308:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1308:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1295:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1295:12:1"
																},
																"nativeSrc": "1295:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1295:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1286:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1286:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1352:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1352:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1327:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "1327:24:1"
																},
																"nativeSrc": "1327:31:1",
																"nodeType": "YulFunctionCall",
																"src": "1327:31:1"
															},
															"nativeSrc": "1327:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "1327:31:1"
														},
														{
															"nativeSrc": "1367:15:1",
															"nodeType": "YulAssignment",
															"src": "1367:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1377:5:1",
																"nodeType": "YulIdentifier",
																"src": "1377:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1367:6:1"
																}
															]
														},
														{
															"nativeSrc": "1391:42:1",
															"nodeType": "YulAssignment",
															"src": "1391:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1418:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1418:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1429:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1429:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1414:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1414:3:1"
																		},
																		"nativeSrc": "1414:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1414:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1401:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1401:12:1"
																},
																"nativeSrc": "1401:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1401:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1391:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																}
															]
														},
														{
															"nativeSrc": "1442:42:1",
															"nodeType": "YulAssignment",
															"src": "1442:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1469:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1469:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1480:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1480:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1465:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1465:3:1"
																		},
																		"nativeSrc": "1465:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1465:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1452:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1452:12:1"
																},
																"nativeSrc": "1452:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1452:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "1107:383:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1161:9:1",
														"nodeType": "YulTypedName",
														"src": "1161:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1172:7:1",
														"nodeType": "YulTypedName",
														"src": "1172:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1184:6:1",
														"nodeType": "YulTypedName",
														"src": "1184:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1192:6:1",
														"nodeType": "YulTypedName",
														"src": "1192:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1200:6:1",
														"nodeType": "YulTypedName",
														"src": "1200:6:1",
														"type": ""
													}
												],
												"src": "1107:383:1"
											},
											{
												"body": {
													"nativeSrc": "1669:160:1",
													"nodeType": "YulBlock",
													"src": "1669:160:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1686:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1697:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:1"
																},
																"nativeSrc": "1679:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1679:21:1"
															},
															"nativeSrc": "1679:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1679:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1720:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1731:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1731:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1716:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:1"
																		},
																		"nativeSrc": "1716:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1716:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:1",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1709:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:1"
																},
																"nativeSrc": "1709:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1709:30:1"
															},
															"nativeSrc": "1709:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1709:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1759:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1770:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1770:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1755:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:1"
																		},
																		"nativeSrc": "1755:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:18:1"
																	},
																	{
																		"hexValue": "6e6f74206c6973746564",
																		"kind": "string",
																		"nativeSrc": "1775:12:1",
																		"nodeType": "YulLiteral",
																		"src": "1775:12:1",
																		"type": "",
																		"value": "not listed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1748:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:1"
																},
																"nativeSrc": "1748:40:1",
																"nodeType": "YulFunctionCall",
																"src": "1748:40:1"
															},
															"nativeSrc": "1748:40:1",
															"nodeType": "YulExpressionStatement",
															"src": "1748:40:1"
														},
														{
															"nativeSrc": "1797:26:1",
															"nodeType": "YulAssignment",
															"src": "1797:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1809:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1809:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1820:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1820:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1805:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:1"
																},
																"nativeSrc": "1805:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1805:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1797:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1797:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1495:334:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1646:9:1",
														"nodeType": "YulTypedName",
														"src": "1646:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1660:4:1",
														"nodeType": "YulTypedName",
														"src": "1660:4:1",
														"type": ""
													}
												],
												"src": "1495:334:1"
											},
											{
												"body": {
													"nativeSrc": "2008:160:1",
													"nodeType": "YulBlock",
													"src": "2008:160:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2025:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2025:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2036:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2018:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:1"
																},
																"nativeSrc": "2018:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2018:21:1"
															},
															"nativeSrc": "2018:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "2018:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2059:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2059:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2070:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2070:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2055:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2055:3:1"
																		},
																		"nativeSrc": "2055:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2055:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2075:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2075:2:1",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2048:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:1"
																},
																"nativeSrc": "2048:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2048:30:1"
															},
															"nativeSrc": "2048:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "2048:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2109:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2109:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2094:3:1"
																		},
																		"nativeSrc": "2094:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2094:18:1"
																	},
																	{
																		"hexValue": "6e6f742073656c6c6572",
																		"kind": "string",
																		"nativeSrc": "2114:12:1",
																		"nodeType": "YulLiteral",
																		"src": "2114:12:1",
																		"type": "",
																		"value": "not seller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:1"
																},
																"nativeSrc": "2087:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2087:40:1"
															},
															"nativeSrc": "2087:40:1",
															"nodeType": "YulExpressionStatement",
															"src": "2087:40:1"
														},
														{
															"nativeSrc": "2136:26:1",
															"nodeType": "YulAssignment",
															"src": "2136:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2148:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2148:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2159:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2159:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2144:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2144:3:1"
																},
																"nativeSrc": "2144:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2144:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2136:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2136:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1834:334:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1985:9:1",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													}
												],
												"src": "1834:334:1"
											},
											{
												"body": {
													"nativeSrc": "2347:158:1",
													"nodeType": "YulBlock",
													"src": "2347:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2364:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2364:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2375:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2375:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2357:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:1"
																},
																"nativeSrc": "2357:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2357:21:1"
															},
															"nativeSrc": "2357:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "2357:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2398:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2398:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2409:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2409:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2394:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:1"
																		},
																		"nativeSrc": "2394:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2394:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2414:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2414:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2387:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:6:1"
																},
																"nativeSrc": "2387:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:29:1"
															},
															"nativeSrc": "2387:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2436:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2436:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2447:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2447:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2432:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2432:3:1"
																		},
																		"nativeSrc": "2432:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2432:18:1"
																	},
																	{
																		"hexValue": "6261642076616c7565",
																		"kind": "string",
																		"nativeSrc": "2452:11:1",
																		"nodeType": "YulLiteral",
																		"src": "2452:11:1",
																		"type": "",
																		"value": "bad value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2425:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:1"
																},
																"nativeSrc": "2425:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2425:39:1"
															},
															"nativeSrc": "2425:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "2425:39:1"
														},
														{
															"nativeSrc": "2473:26:1",
															"nodeType": "YulAssignment",
															"src": "2473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2496:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2481:3:1"
																},
																"nativeSrc": "2481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2473:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2173:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2324:9:1",
														"nodeType": "YulTypedName",
														"src": "2324:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2338:4:1",
														"nodeType": "YulTypedName",
														"src": "2338:4:1",
														"type": ""
													}
												],
												"src": "2173:332:1"
											},
											{
												"body": {
													"nativeSrc": "2701:14:1",
													"nodeType": "YulBlock",
													"src": "2701:14:1",
													"statements": [
														{
															"nativeSrc": "2703:10:1",
															"nodeType": "YulAssignment",
															"src": "2703:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "2710:3:1",
																"nodeType": "YulIdentifier",
																"src": "2710:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2703:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2703:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2510:205:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2685:3:1",
														"nodeType": "YulTypedName",
														"src": "2685:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2693:3:1",
														"nodeType": "YulTypedName",
														"src": "2693:3:1",
														"type": ""
													}
												],
												"src": "2510:205:1"
											},
											{
												"body": {
													"nativeSrc": "2894:167:1",
													"nodeType": "YulBlock",
													"src": "2894:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2911:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2911:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2922:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2922:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2904:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2904:6:1"
																},
																"nativeSrc": "2904:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2904:21:1"
															},
															"nativeSrc": "2904:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "2904:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2945:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2945:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2956:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2956:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2941:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2941:3:1"
																		},
																		"nativeSrc": "2941:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2961:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2961:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2934:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2934:6:1"
																},
																"nativeSrc": "2934:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2934:30:1"
															},
															"nativeSrc": "2934:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "2934:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2984:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2984:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2995:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2995:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2980:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:1"
																		},
																		"nativeSrc": "2980:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2980:18:1"
																	},
																	{
																		"hexValue": "7061792073656c6c6572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "3000:19:1",
																		"nodeType": "YulLiteral",
																		"src": "3000:19:1",
																		"type": "",
																		"value": "pay seller failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2973:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2973:6:1"
																},
																"nativeSrc": "2973:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2973:47:1"
															},
															"nativeSrc": "2973:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2973:47:1"
														},
														{
															"nativeSrc": "3029:26:1",
															"nodeType": "YulAssignment",
															"src": "3029:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3041:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3052:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3037:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3037:3:1"
																},
																"nativeSrc": "3037:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3037:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3029:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3029:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2720:341:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2871:9:1",
														"nodeType": "YulTypedName",
														"src": "2871:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2885:4:1",
														"nodeType": "YulTypedName",
														"src": "2885:4:1",
														"type": ""
													}
												],
												"src": "2720:341:1"
											},
											{
												"body": {
													"nativeSrc": "3223:218:1",
													"nodeType": "YulBlock",
													"src": "3223:218:1",
													"statements": [
														{
															"nativeSrc": "3233:26:1",
															"nodeType": "YulAssignment",
															"src": "3233:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3245:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3245:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3256:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3256:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:1"
																},
																"nativeSrc": "3241:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3241:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3233:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:4:1"
																}
															]
														},
														{
															"nativeSrc": "3268:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3268:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3286:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3286:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3291:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3291:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3282:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:1"
																		},
																		"nativeSrc": "3282:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3295:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3295:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3278:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:1"
																},
																"nativeSrc": "3278:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3278:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3272:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3272:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3313:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3313:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3328:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3328:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3336:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3336:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3324:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3324:3:1"
																		},
																		"nativeSrc": "3324:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3324:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3306:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:1"
																},
																"nativeSrc": "3306:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3306:34:1"
															},
															"nativeSrc": "3306:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3306:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3360:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3371:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3371:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3356:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:1"
																		},
																		"nativeSrc": "3356:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3356:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3380:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3388:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3388:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3376:3:1"
																		},
																		"nativeSrc": "3376:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3376:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3349:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:1"
																},
																"nativeSrc": "3349:43:1",
																"nodeType": "YulFunctionCall",
																"src": "3349:43:1"
															},
															"nativeSrc": "3349:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "3349:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3412:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3412:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3423:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3423:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3408:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:1"
																		},
																		"nativeSrc": "3408:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3408:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3428:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3428:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3401:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:1"
																},
																"nativeSrc": "3401:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3401:34:1"
															},
															"nativeSrc": "3401:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3401:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3066:375:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3176:9:1",
														"nodeType": "YulTypedName",
														"src": "3176:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3187:6:1",
														"nodeType": "YulTypedName",
														"src": "3187:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3195:6:1",
														"nodeType": "YulTypedName",
														"src": "3195:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3203:6:1",
														"nodeType": "YulTypedName",
														"src": "3203:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3214:4:1",
														"nodeType": "YulTypedName",
														"src": "3214:4:1",
														"type": ""
													}
												],
												"src": "3066:375:1"
											},
											{
												"body": {
													"nativeSrc": "3547:76:1",
													"nodeType": "YulBlock",
													"src": "3547:76:1",
													"statements": [
														{
															"nativeSrc": "3557:26:1",
															"nodeType": "YulAssignment",
															"src": "3557:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3569:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3569:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3565:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:1"
																},
																"nativeSrc": "3565:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3565:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3557:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3557:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3599:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3610:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3610:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3592:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3592:6:1"
																},
																"nativeSrc": "3592:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3592:25:1"
															},
															"nativeSrc": "3592:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3592:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3446:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3516:9:1",
														"nodeType": "YulTypedName",
														"src": "3516:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3527:6:1",
														"nodeType": "YulTypedName",
														"src": "3527:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3538:4:1",
														"nodeType": "YulTypedName",
														"src": "3538:4:1",
														"type": ""
													}
												],
												"src": "3446:177:1"
											},
											{
												"body": {
													"nativeSrc": "3802:156:1",
													"nodeType": "YulBlock",
													"src": "3802:156:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3819:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3819:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3830:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3830:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3812:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3812:6:1"
																},
																"nativeSrc": "3812:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3812:21:1"
															},
															"nativeSrc": "3812:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3812:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3853:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3864:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3864:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:1"
																		},
																		"nativeSrc": "3849:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3849:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3869:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3869:1:1",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3842:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:1"
																},
																"nativeSrc": "3842:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3842:29:1"
															},
															"nativeSrc": "3842:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "3842:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3891:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3891:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3902:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3902:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3887:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3887:3:1"
																		},
																		"nativeSrc": "3887:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3887:18:1"
																	},
																	{
																		"hexValue": "70726963653d30",
																		"kind": "string",
																		"nativeSrc": "3907:9:1",
																		"nodeType": "YulLiteral",
																		"src": "3907:9:1",
																		"type": "",
																		"value": "price=0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:1"
																},
																"nativeSrc": "3880:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3880:37:1"
															},
															"nativeSrc": "3880:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3880:37:1"
														},
														{
															"nativeSrc": "3926:26:1",
															"nodeType": "YulAssignment",
															"src": "3926:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3938:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3938:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3949:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3934:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:1"
																},
																"nativeSrc": "3934:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3934:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3926:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3926:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3628:330:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3779:9:1",
														"nodeType": "YulTypedName",
														"src": "3779:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3793:4:1",
														"nodeType": "YulTypedName",
														"src": "3793:4:1",
														"type": ""
													}
												],
												"src": "3628:330:1"
											},
											{
												"body": {
													"nativeSrc": "4044:170:1",
													"nodeType": "YulBlock",
													"src": "4044:170:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4090:16:1",
																"nodeType": "YulBlock",
																"src": "4090:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4099:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4099:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4102:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4102:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4092:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4092:6:1"
																			},
																			"nativeSrc": "4092:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4092:12:1"
																		},
																		"nativeSrc": "4092:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4092:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4074:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4061:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:1"
																		},
																		"nativeSrc": "4061:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4086:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4057:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4057:3:1"
																},
																"nativeSrc": "4057:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4057:32:1"
															},
															"nativeSrc": "4054:52:1",
															"nodeType": "YulIf",
															"src": "4054:52:1"
														},
														{
															"nativeSrc": "4115:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4115:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4134:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4134:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4128:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4128:5:1"
																},
																"nativeSrc": "4128:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4128:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4119:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4119:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4178:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4178:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4153:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "4153:24:1"
																},
																"nativeSrc": "4153:31:1",
																"nodeType": "YulFunctionCall",
																"src": "4153:31:1"
															},
															"nativeSrc": "4153:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "4153:31:1"
														},
														{
															"nativeSrc": "4193:15:1",
															"nodeType": "YulAssignment",
															"src": "4193:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "4203:5:1",
																"nodeType": "YulIdentifier",
																"src": "4203:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4193:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3963:251:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4010:9:1",
														"nodeType": "YulTypedName",
														"src": "4010:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4021:7:1",
														"nodeType": "YulTypedName",
														"src": "4021:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4033:6:1",
														"nodeType": "YulTypedName",
														"src": "4033:6:1",
														"type": ""
													}
												],
												"src": "3963:251:1"
											},
											{
												"body": {
													"nativeSrc": "4393:158:1",
													"nodeType": "YulBlock",
													"src": "4393:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4410:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4410:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4421:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4403:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:1"
																},
																"nativeSrc": "4403:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4403:21:1"
															},
															"nativeSrc": "4403:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4403:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4444:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4444:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4455:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4455:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4440:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4440:3:1"
																		},
																		"nativeSrc": "4440:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4440:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4460:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4460:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:1"
																},
																"nativeSrc": "4433:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4433:29:1"
															},
															"nativeSrc": "4433:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "4433:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4482:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4482:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4493:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4493:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4478:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:1"
																		},
																		"nativeSrc": "4478:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4478:18:1"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4498:11:1",
																		"nodeType": "YulLiteral",
																		"src": "4498:11:1",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4471:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:1"
																},
																"nativeSrc": "4471:39:1",
																"nodeType": "YulFunctionCall",
																"src": "4471:39:1"
															},
															"nativeSrc": "4471:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "4471:39:1"
														},
														{
															"nativeSrc": "4519:26:1",
															"nodeType": "YulAssignment",
															"src": "4519:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4531:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4531:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4542:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4542:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4527:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:1"
																},
																"nativeSrc": "4527:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4527:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4519:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4519:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4219:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4370:9:1",
														"nodeType": "YulTypedName",
														"src": "4370:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4384:4:1",
														"nodeType": "YulTypedName",
														"src": "4384:4:1",
														"type": ""
													}
												],
												"src": "4219:332:1"
											},
											{
												"body": {
													"nativeSrc": "4685:175:1",
													"nodeType": "YulBlock",
													"src": "4685:175:1",
													"statements": [
														{
															"nativeSrc": "4695:26:1",
															"nodeType": "YulAssignment",
															"src": "4695:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4707:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4707:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4718:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4718:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4703:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4703:3:1"
																},
																"nativeSrc": "4703:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4703:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4695:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4695:4:1"
																}
															]
														},
														{
															"nativeSrc": "4730:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4730:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4748:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4748:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4753:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4753:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4744:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4744:3:1"
																		},
																		"nativeSrc": "4744:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4744:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4757:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4757:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4740:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4740:3:1"
																},
																"nativeSrc": "4740:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4740:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4734:2:1",
																	"nodeType": "YulTypedName",
																	"src": "4734:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4775:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4775:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4790:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4790:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4798:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4798:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4786:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:1"
																		},
																		"nativeSrc": "4786:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4786:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4768:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4768:6:1"
																},
																"nativeSrc": "4768:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4768:34:1"
															},
															"nativeSrc": "4768:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4768:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4822:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4822:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4833:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4833:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4818:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4818:3:1"
																		},
																		"nativeSrc": "4818:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4818:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4842:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4842:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4850:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4850:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4838:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4838:3:1"
																		},
																		"nativeSrc": "4838:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4838:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4811:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:1"
																},
																"nativeSrc": "4811:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4811:43:1"
															},
															"nativeSrc": "4811:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "4811:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4556:304:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4646:9:1",
														"nodeType": "YulTypedName",
														"src": "4646:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4657:6:1",
														"nodeType": "YulTypedName",
														"src": "4657:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4665:6:1",
														"nodeType": "YulTypedName",
														"src": "4665:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4676:4:1",
														"nodeType": "YulTypedName",
														"src": "4676:4:1",
														"type": ""
													}
												],
												"src": "4556:304:1"
											},
											{
												"body": {
													"nativeSrc": "4943:199:1",
													"nodeType": "YulBlock",
													"src": "4943:199:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4989:16:1",
																"nodeType": "YulBlock",
																"src": "4989:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4998:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4998:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5001:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5001:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4991:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4991:6:1"
																			},
																			"nativeSrc": "4991:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4991:12:1"
																		},
																		"nativeSrc": "4991:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4991:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4964:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4964:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4973:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4973:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:1"
																		},
																		"nativeSrc": "4960:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4960:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4985:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4985:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4956:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4956:3:1"
																},
																"nativeSrc": "4956:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4956:32:1"
															},
															"nativeSrc": "4953:52:1",
															"nodeType": "YulIf",
															"src": "4953:52:1"
														},
														{
															"nativeSrc": "5014:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5014:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5033:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5033:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5027:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5027:5:1"
																},
																"nativeSrc": "5027:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5027:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5018:5:1",
																	"nodeType": "YulTypedName",
																	"src": "5018:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5096:16:1",
																"nodeType": "YulBlock",
																"src": "5096:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5105:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5105:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5108:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5108:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5098:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5098:6:1"
																			},
																			"nativeSrc": "5098:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5098:12:1"
																		},
																		"nativeSrc": "5098:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5098:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5065:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5065:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5086:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "5086:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5079:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5079:6:1"
																						},
																						"nativeSrc": "5079:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5079:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5072:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5072:6:1"
																				},
																				"nativeSrc": "5072:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5072:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5062:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5062:2:1"
																		},
																		"nativeSrc": "5062:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5062:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5055:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5055:6:1"
																},
																"nativeSrc": "5055:40:1",
																"nodeType": "YulFunctionCall",
																"src": "5055:40:1"
															},
															"nativeSrc": "5052:60:1",
															"nodeType": "YulIf",
															"src": "5052:60:1"
														},
														{
															"nativeSrc": "5121:15:1",
															"nodeType": "YulAssignment",
															"src": "5121:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "5131:5:1",
																"nodeType": "YulIdentifier",
																"src": "5131:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5121:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5121:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4865:277:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4909:9:1",
														"nodeType": "YulTypedName",
														"src": "4909:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4920:7:1",
														"nodeType": "YulTypedName",
														"src": "4920:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4932:6:1",
														"nodeType": "YulTypedName",
														"src": "4932:6:1",
														"type": ""
													}
												],
												"src": "4865:277:1"
											},
											{
												"body": {
													"nativeSrc": "5321:169:1",
													"nodeType": "YulBlock",
													"src": "5321:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5338:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5338:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5349:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5349:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5331:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5331:6:1"
																},
																"nativeSrc": "5331:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5331:21:1"
															},
															"nativeSrc": "5331:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5331:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5372:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5383:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5383:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5368:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5368:3:1"
																		},
																		"nativeSrc": "5368:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5368:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5388:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5388:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5361:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5361:6:1"
																},
																"nativeSrc": "5361:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5361:30:1"
															},
															"nativeSrc": "5361:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5361:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5411:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5411:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5422:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5422:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5407:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:1"
																		},
																		"nativeSrc": "5407:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5407:18:1"
																	},
																	{
																		"hexValue": "6d61726b6574206e6f7420617070726f766564",
																		"kind": "string",
																		"nativeSrc": "5427:21:1",
																		"nodeType": "YulLiteral",
																		"src": "5427:21:1",
																		"type": "",
																		"value": "market not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5400:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5400:6:1"
																},
																"nativeSrc": "5400:49:1",
																"nodeType": "YulFunctionCall",
																"src": "5400:49:1"
															},
															"nativeSrc": "5400:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "5400:49:1"
														},
														{
															"nativeSrc": "5458:26:1",
															"nodeType": "YulAssignment",
															"src": "5458:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5470:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5470:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5481:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5481:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5466:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5466:3:1"
																},
																"nativeSrc": "5466:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5466:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5458:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5458:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5147:343:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5298:9:1",
														"nodeType": "YulTypedName",
														"src": "5298:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5312:4:1",
														"nodeType": "YulTypedName",
														"src": "5312:4:1",
														"type": ""
													}
												],
												"src": "5147:343:1"
											},
											{
												"body": {
													"nativeSrc": "5642:147:1",
													"nodeType": "YulBlock",
													"src": "5642:147:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5659:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5659:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5672:2:1",
																						"nodeType": "YulLiteral",
																						"src": "5672:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "5676:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5676:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "5668:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5668:3:1"
																				},
																				"nativeSrc": "5668:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5668:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5689:26:1",
																						"nodeType": "YulLiteral",
																						"src": "5689:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5685:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5685:3:1"
																				},
																				"nativeSrc": "5685:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5685:31:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5664:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5664:3:1"
																		},
																		"nativeSrc": "5664:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5664:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5652:6:1"
																},
																"nativeSrc": "5652:66:1",
																"nodeType": "YulFunctionCall",
																"src": "5652:66:1"
															},
															"nativeSrc": "5652:66:1",
															"nodeType": "YulExpressionStatement",
															"src": "5652:66:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5738:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5738:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5743:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5743:2:1",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5734:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5734:3:1"
																		},
																		"nativeSrc": "5734:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5734:12:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5748:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5748:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5727:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5727:6:1"
																},
																"nativeSrc": "5727:28:1",
																"nodeType": "YulFunctionCall",
																"src": "5727:28:1"
															},
															"nativeSrc": "5727:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "5727:28:1"
														},
														{
															"nativeSrc": "5764:19:1",
															"nodeType": "YulAssignment",
															"src": "5764:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5775:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5775:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5780:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5771:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5771:3:1"
																},
																"nativeSrc": "5771:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5771:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5764:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5764:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5495:294:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5610:3:1",
														"nodeType": "YulTypedName",
														"src": "5610:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5615:6:1",
														"nodeType": "YulTypedName",
														"src": "5615:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5623:6:1",
														"nodeType": "YulTypedName",
														"src": "5623:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5634:3:1",
														"nodeType": "YulTypedName",
														"src": "5634:3:1",
														"type": ""
													}
												],
												"src": "5495:294:1"
											},
											{
												"body": {
													"nativeSrc": "5968:181:1",
													"nodeType": "YulBlock",
													"src": "5968:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5985:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5985:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5996:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5996:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5978:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5978:6:1"
																},
																"nativeSrc": "5978:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5978:21:1"
															},
															"nativeSrc": "5978:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5978:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6019:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6030:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6030:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:1"
																		},
																		"nativeSrc": "6015:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6015:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6035:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6035:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6008:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6008:6:1"
																},
																"nativeSrc": "6008:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6008:30:1"
															},
															"nativeSrc": "6008:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6008:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6058:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6058:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6069:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6069:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6054:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6054:3:1"
																		},
																		"nativeSrc": "6054:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6054:18:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "6074:33:1",
																		"nodeType": "YulLiteral",
																		"src": "6074:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6047:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6047:6:1"
																},
																"nativeSrc": "6047:61:1",
																"nodeType": "YulFunctionCall",
																"src": "6047:61:1"
															},
															"nativeSrc": "6047:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "6047:61:1"
														},
														{
															"nativeSrc": "6117:26:1",
															"nodeType": "YulAssignment",
															"src": "6117:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6129:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6129:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6140:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6140:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6125:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6125:3:1"
																},
																"nativeSrc": "6125:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6125:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6117:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6117:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5794:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5945:9:1",
														"nodeType": "YulTypedName",
														"src": "5945:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5959:4:1",
														"nodeType": "YulTypedName",
														"src": "5959:4:1",
														"type": ""
													}
												],
												"src": "5794:355:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"not listed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"not seller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"bad value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"pay seller failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"price=0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"market not approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003e575f3560e01c806398590ef914610042578063c18b8db414610063578063cce7ec13146100e1578063dda342bb146100f4575b5f80fd5b34801561004d575f80fd5b5061006161005c36600461085e565b610113565b005b34801561006e575f80fd5b506100b261007d366004610888565b600160208190525f918252604090912080549181015460028201546003909201546001600160a01b0393841693909116919084565b604080516001600160a01b03958616815294909316602085015291830152606082015260800160405180910390f35b6100616100ef36600461085e565b610265565b3480156100ff575f80fd5b5061006161010e36600461089f565b6104da565b5f61011e83836107aa565b5f81815260016020818152604092839020835160808101855281546001600160a01b039081168083529483015416928101929092526002810154938201939093526003909201546060830152919250906101ac5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064015b60405180910390fd5b80516001600160a01b031633146101f25760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b63632b960b11b60448201526064016101a3565b5f82815260016020819052604080832080546001600160a01b0319908116825592810180549093169092556002820183905560039091018290555184916001600160a01b0387169133917f915fb8c652d6245752cc491b71bd8e87ab6761417f8d2ca353c8055103294c0391a450505050565b61026d6107f0565b5f61027883836107aa565b5f81815260016020818152604092839020835160808101855281546001600160a01b039081168083529483015416928101929092526002810154938201939093526003909201546060830152919250906103015760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064016101a3565b806060015134146103405760405162461bcd60e51b81526020600482015260096024820152686261642076616c756560b81b60448201526064016101a3565b5f82815260016020819052604080832080546001600160a01b031990811682559281018054909316909255600282018390556003909101829055825190516001600160a01b039091169034908381818185875af1925050503d805f81146103c2576040519150601f19603f3d011682016040523d82523d5f602084013e6103c7565b606091505b505090508061040c5760405162461bcd60e51b81526020600482015260116024820152701c185e481cd95b1b195c8819985a5b1959607a1b60448201526064016101a3565b602082015182516040808501519051632142170760e11b81526001600160a01b03928316600482015233602482015260448101919091529116906342842e0e906064015f604051808303815f87803b158015610466575f80fd5b505af1158015610478573d5f803e3d5ffd5b5050505083856001600160a01b0316336001600160a01b03167fa326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49346040516104c291815260200190565b60405180910390a45050506104d660015f55565b5050565b5f81116105135760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064016101a3565b6040516331a9108f60e11b815260048101839052839033906001600160a01b03831690636352211e90602401602060405180830381865afa15801561055a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061057e91906108d1565b6001600160a01b0316146105c05760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016101a3565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0382169063e985e9c590604401602060405180830381865afa158015610608573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062c91906108f3565b806106a6575060405163020604bf60e21b81526004810184905230906001600160a01b0383169063081812fc90602401602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b91906108d1565b6001600160a01b0316145b6106e85760405162461bcd60e51b81526020600482015260136024820152721b585c9ad95d081b9bdd08185c1c1c9bdd9959606a1b60448201526064016101a3565b5f6106f385856107aa565b60408051608081018252338082526001600160a01b0389811660208085018281528587018c8152606087018c81525f8a81526001808652908a9020985189549088166001600160a01b0319918216178a55935190890180549190971693169290921790945592516002860155915160039094019390935592518781529394508793919290917fd9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca910160405180910390a45050505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290525f9060540160405160208183030381529060405280519060200120905092915050565b60025f54036108415760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101a3565b60025f55565b6001600160a01b038116811461085b575f80fd5b50565b5f806040838503121561086f575f80fd5b823561087a81610847565b946020939093013593505050565b5f60208284031215610898575f80fd5b5035919050565b5f805f606084860312156108b1575f80fd5b83356108bc81610847565b95602085013595506040909401359392505050565b5f602082840312156108e1575f80fd5b81516108ec81610847565b9392505050565b5f60208284031215610903575f80fd5b815180151581146108ec575f80fdfea26469706673582212204dd39874ddec37406841af45d60723cfa510c5791c5ac550e4adf8f39519d05564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98590EF9 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0xC18B8DB4 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xCCE7EC13 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xDDA342BB EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0xEF CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH0 PUSH2 0x11E DUP4 DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE SWAP5 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 PUSH2 0x1AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081B1A5CDD1959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x3737BA1039B2B63632B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE MLOAD DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0x915FB8C652D6245752CC491B71BD8E87AB6761417F8D2CA353C8055103294C03 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x26D PUSH2 0x7F0 JUMP JUMPDEST PUSH0 PUSH2 0x278 DUP4 DUP4 PUSH2 0x7AA JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE SWAP5 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD081B1A5CDD1959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD CALLVALUE EQ PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6261642076616C7565 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE DUP3 MLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1C185E481CD95B1B195C8819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD SWAP1 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x478 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA326259EC721617ACD3CB2A00BCBEAC91EEFE409880E49AA2BBF473ED648DA49 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x4D6 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x70726963653D3 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE DUP4 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x608 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST DUP1 PUSH2 0x6A6 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B585C9AD95D081B9BDD08185C1C1C9BDD9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH0 PUSH2 0x6F3 DUP6 DUP6 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP13 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP13 DUP2 MSTORE PUSH0 DUP11 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD SWAP1 DUP10 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP8 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD DUP8 DUP2 MSTORE SWAP4 SWAP5 POP DUP8 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xD9D69FEE247951CC283DC6F5B64C36CE396A36146405A798B86EBFD113C8B5CA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x86F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x87A DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x898 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x8BC DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8EC DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8EC JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xD3 SWAP9 PUSH21 0xDDEC37406841AF45D60723CFA510C5791C5AC550E4 0xAD 0xF8 RETURN SWAP6 NOT 0xD0 SSTORE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "9054:2043:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10219:330;;;;;;;;;;-1:-1:-1;10219:330:0;;;;;:::i;:::-;;:::i;:::-;;9189:43;;;;;;;;;;-1:-1:-1;9189:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9189:43:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:15:1;;;924:34;;994:15;;;;989:2;974:18;;967:43;1026:18;;;1019:34;1084:2;1069:18;;1062:34;873:3;858:19;9189:43:0;;;;;;;10555:540;;;;;;:::i;:::-;;:::i;9685:528::-;;;;;;;;;;-1:-1:-1;9685:528:0;;;;;:::i;:::-;;:::i;10219:330::-;10284:9;10296:18;10301:3;10306:7;10296:4;:18::i;:::-;10324:16;10343:11;;;:8;:11;;;;;;;;;10324:30;;;;;;;;;-1:-1:-1;;;;;10324:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10284;;-1:-1:-1;10324:30:0;10364:45;;;;-1:-1:-1;;;10364:45:0;;1697:2:1;10364:45:0;;;1679:21:1;1736:2;1716:18;;;1709:30;-1:-1:-1;;;1755:18:1;;;1748:40;1805:18;;10364:45:0;;;;;;;;;10427:8;;-1:-1:-1;;;;;10427:22:0;10439:10;10427:22;10419:45;;;;-1:-1:-1;;;10419:45:0;;2036:2:1;10419:45:0;;;2018:21:1;2075:2;2055:18;;;2048:30;-1:-1:-1;;;2094:18:1;;;2087:40;2144:18;;10419:45:0;1834:334:1;10419:45:0;10481:11;;;;:8;:11;;;;;;;;10474:18;;-1:-1:-1;;;;;;10474:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10507:35;10534:7;;-1:-1:-1;;;;;10507:35:0;;;10517:10;;10507:35;;;10274:275;;10219:330;;:::o;10555:540::-;8127:21;:19;:21::i;:::-;10638:9:::1;10650:18;10655:3;10660:7;10650:4;:18::i;:::-;10678:16;10697:11:::0;;;:8:::1;:11;::::0;;;;;;;;10678:30;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;10678:30:0;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;;;10638;;-1:-1:-1;10678:30:0;10718:45:::1;;;::::0;-1:-1:-1;;;10718:45:0;;1697:2:1;10718:45:0::1;::::0;::::1;1679:21:1::0;1736:2;1716:18;;;1709:30;-1:-1:-1;;;1755:18:1;;;1748:40;1805:18;;10718:45:0::1;1495:334:1::0;10718:45:0::1;10794:1;:7;;;10781:9;:20;10773:42;;;::::0;-1:-1:-1;;;10773:42:0;;2375:2:1;10773:42:0::1;::::0;::::1;2357:21:1::0;2414:1;2394:18;;;2387:29;-1:-1:-1;;;2432:18:1;;;2425:39;2481:18;;10773:42:0::1;2173:332:1::0;10773:42:0::1;10832:11;::::0;;;:8:::1;:11;::::0;;;;;;;10825:18;;-1:-1:-1;;;;;;10825:18:0;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;10875:8;;10867:44;;-1:-1:-1;;;;;10867:22:0;;::::1;::::0;10897:9:::1;::::0;10832:11;10867:44;10832:11;10867:44;10897:9;10867:22;:44:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10853:58;;;10929:2;10921:32;;;::::0;-1:-1:-1;;;10921:32:0;;2922:2:1;10921:32:0::1;::::0;::::1;2904:21:1::0;2961:2;2941:18;;;2934:30;-1:-1:-1;;;2980:18:1;;;2973:47;3037:18;;10921:32:0::1;2720:341:1::0;10921:32:0::1;10971:5;::::0;::::1;::::0;10995:8;;11017:9:::1;::::0;;::::1;::::0;10963:64;;-1:-1:-1;;;10963:64:0;;-1:-1:-1;;;;;3324:15:1;;;10963:64:0::1;::::0;::::1;3306:34:1::0;11005:10:0::1;3356:18:1::0;;;3349:43;3408:18;;;3401:34;;;;10963:31:0;::::1;::::0;::::1;::::0;3241:18:1;;10963:64:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11069:7;11064:3;-1:-1:-1::0;;;;;11042:46:0::1;11052:10;-1:-1:-1::0;;;;;11042:46:0::1;;11078:9;11042:46;;;;3592:25:1::0;;3580:2;3565:18;;3446:177;11042:46:0::1;;;;;;;;10628:467;;;8169:20:::0;7582:1;8675:7;:22;8495:209;8169:20;10555:540;;:::o;9685:528::-;9779:1;9771:5;:9;9763:29;;;;-1:-1:-1;;;9763:29:0;;3830:2:1;9763:29:0;;;3812:21:1;3869:1;3849:18;;;3842:29;-1:-1:-1;;;3887:18:1;;;3880:37;3934:18;;9763:29:0;3628:330:1;9763:29:0;9848:22;;-1:-1:-1;;;9848:22:0;;;;;3592:25:1;;;9826:3:0;;9874:10;;-1:-1:-1;;;;;9848:13:0;;;;;3565:18:1;;9848:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9848:36:0;;9840:58;;;;-1:-1:-1;;;9840:58:0;;4421:2:1;9840:58:0;;;4403:21:1;4460:1;4440:18;;;4433:29;-1:-1:-1;;;4478:18:1;;;4471:39;4527:18;;9840:58:0;4219:332:1;9840:58:0;9916:49;;-1:-1:-1;;;9916:49:0;;9939:10;9916:49;;;4768:34:1;9959:4:0;4818:18:1;;;4811:43;-1:-1:-1;;;;;9916:22:0;;;;;4703:18:1;;9916:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:96;;;-1:-1:-1;9969:26:0;;-1:-1:-1;;;9969:26:0;;;;;3592:25:1;;;10007:4:0;;-1:-1:-1;;;;;9969:17:0;;;;;3565:18:1;;9969:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9969:43:0;;9916:96;9908:140;;;;-1:-1:-1;;;9908:140:0;;5349:2:1;9908:140:0;;;5331:21:1;5388:2;5368:18;;;5361:30;-1:-1:-1;;;5407:18:1;;;5400:49;5466:18;;9908:140:0;5147:343:1;9908:140:0;10058:9;10070:18;10075:3;10080:7;10070:4;:18::i;:::-;10112:40;;;;;;;;10120:10;10112:40;;;-1:-1:-1;;;;;10112:40:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10098:11:0;;;:8;:11;;;;;;;:54;;;;;;;-1:-1:-1;;;;;;10098:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10167:39;;3592:25:1;;;10098:11:0;;-1:-1:-1;10112:40:0;;;;10120:10;;10167:39;;3565:18:1;10167:39:0;;;;;;;9753:460;;9685:528;;;:::o;9539:140::-;9641:30;;-1:-1:-1;;5672:2:1;5668:15;;;5664:53;9641:30:0;;;5652:66:1;5734:12;;;5727:28;;;9605:7:0;;5771:12:1;;9641:30:0;;;;;;;;;;;;9631:41;;;;;;9624:48;;9539:140;;;;:::o;8202:287::-;7625:1;8334:7;;:19;8326:63;;;;-1:-1:-1;;;8326:63:0;;5996:2:1;8326:63:0;;;5978:21:1;6035:2;6015:18;;;6008:30;6074:33;6054:18;;;6047:61;6125:18;;8326:63:0;5794:355:1;8326:63:0;7625:1;8464:7;:18;8202:287::o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:315::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:1:o;470:180::-;529:6;582:2;570:9;561:7;557:23;553:32;550:52;;;598:1;595;588:12;550:52;-1:-1:-1;621:23:1;;470:180;-1:-1:-1;470:180:1:o;1107:383::-;1184:6;1192;1200;1253:2;1241:9;1232:7;1228:23;1224:32;1221:52;;;1269:1;1266;1259:12;1221:52;1308:9;1295:23;1327:31;1352:5;1327:31;:::i;:::-;1377:5;1429:2;1414:18;;1401:32;;-1:-1:-1;1480:2:1;1465:18;;;1452:32;;1107:383;-1:-1:-1;;;1107:383:1:o;3963:251::-;4033:6;4086:2;4074:9;4065:7;4061:23;4057:32;4054:52;;;4102:1;4099;4092:12;4054:52;4134:9;4128:16;4153:31;4178:5;4153:31;:::i;:::-;4203:5;3963:251;-1:-1:-1;;;3963:251:1:o;4865:277::-;4932:6;4985:2;4973:9;4964:7;4960:23;4956:32;4953:52;;;5001:1;4998;4991:12;4953:52;5033:9;5027:16;5086:5;5079:13;5072:21;5065:5;5062:32;5052:60;;5108:1;5105;5098:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "475200",
								"executionCost": "22614",
								"totalCost": "497814"
							},
							"external": {
								"buy(address,uint256)": "infinite",
								"cancel(address,uint256)": "69714",
								"list(address,uint256,uint256)": "infinite",
								"listings(bytes32)": "8888"
							},
							"internal": {
								"_key(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9054,
									"end": 11097,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7687,
									"end": 7694,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7687,
									"end": 7709,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9054,
									"end": 11097,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204dd39874ddec37406841af45d60723cfa510c5791c5ac550e4adf8f39519d05564736f6c63430008180033",
									".code": [
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "98590EF9"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "C18B8DB4"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "CCE7EC13"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "DDA342BB"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 11097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10219,
											"end": 10549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10219,
											"end": 10549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9189,
											"end": 9232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 942,
											"end": 957,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 942,
											"end": 957,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 942,
											"end": 957,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 924,
											"end": 958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 924,
											"end": 958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 967,
											"end": 1010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 873,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 858,
											"end": 877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9232,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10555,
											"end": 11095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10555,
											"end": 11095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9685,
											"end": 10213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9685,
											"end": 10213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10301,
											"end": 10304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10306,
											"end": 10313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10296,
											"end": 10314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10296,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10314,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10324,
											"end": 10354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD081B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10364,
											"end": 10409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10427,
											"end": 10435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10427,
											"end": 10435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10427,
											"end": 10449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10449,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10427,
											"end": 10449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2018,
											"end": 2039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2077,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2055,
											"end": 2073,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2055,
											"end": 2073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1039B2B63632B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1834,
											"end": 2168,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10419,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10507,
											"end": 10542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10541,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10534,
											"end": 10541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10507,
											"end": 10542,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10507,
											"end": 10542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10507,
											"end": 10542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10517,
											"end": 10527,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10517,
											"end": 10527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10507,
											"end": 10542,
											"name": "PUSH",
											"source": 0,
											"value": "915FB8C652D6245752CC491B71BD8E87AB6761417F8D2CA353C8055103294C03"
										},
										{
											"begin": 10507,
											"end": 10542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10507,
											"end": 10542,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10274,
											"end": 10549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10274,
											"end": 10549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8127,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8127,
											"end": 8148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8148,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8127,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10650,
											"end": 10668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10655,
											"end": 10658,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10660,
											"end": 10667,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10650,
											"end": 10654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10650,
											"end": 10668,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10650,
											"end": 10668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10650,
											"end": 10668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10697,
											"end": 10708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10708,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10678,
											"end": 10708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10718,
											"end": 10763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10763,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10718,
											"end": 10763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10718,
											"end": 10763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10718,
											"end": 10763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10718,
											"end": 10763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10718,
											"end": 10763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10718,
											"end": 10763,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD081B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1495,
											"end": 1829,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10794,
											"end": 10795,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10794,
											"end": 10801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10794,
											"end": 10801,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10794,
											"end": 10801,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10781,
											"end": 10790,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10781,
											"end": 10801,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10773,
											"end": 10815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10773,
											"end": 10815,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10773,
											"end": 10815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10773,
											"end": 10815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10773,
											"end": 10815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10773,
											"end": 10815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10773,
											"end": 10815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10773,
											"end": 10815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10773,
											"end": 10815,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6261642076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2173,
											"end": 2505,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10815,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10773,
											"end": 10815,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10832,
											"end": 10843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10875,
											"end": 10883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10875,
											"end": 10883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10867,
											"end": 10889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10889,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 10906,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 10906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10897,
											"end": 10906,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10889,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10867,
											"end": 10911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10929,
											"end": 10931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10921,
											"end": 10953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10921,
											"end": 10953,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10921,
											"end": 10953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10921,
											"end": 10953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10921,
											"end": 10953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10921,
											"end": 10953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10921,
											"end": 10953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10921,
											"end": 10953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10921,
											"end": 10953,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2963,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C185E481CD95B1B195C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2980,
											"end": 2998,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2980,
											"end": 2998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 2998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3055,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3037,
											"end": 3055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2720,
											"end": 3061,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10921,
											"end": 10953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10971,
											"end": 10976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10976,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10995,
											"end": 11003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10995,
											"end": 11003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11017,
											"end": 11026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11017,
											"end": 11026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11017,
											"end": 11026,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11017,
											"end": 11026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11017,
											"end": 11026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10963,
											"end": 11027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3324,
											"end": 3339,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10963,
											"end": 11027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11005,
											"end": 11015,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 10994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 10994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 10994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 10963,
											"end": 10994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 11027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 11027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10963,
											"end": 11027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11076,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11067,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11052,
											"end": 11062,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A326259EC721617ACD3CB2A00BCBEAC91EEFE409880E49AA2BBF473ED648DA49"
										},
										{
											"begin": 11078,
											"end": 11087,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3623,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11088,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 11095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 11095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 11095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8675,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8675,
											"end": 8697,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8704,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8189,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8169,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 11095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 11095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9771,
											"end": 9776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9771,
											"end": 9780,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3812,
											"end": 3833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70726963653D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3628,
											"end": 3958,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9763,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9826,
											"end": 9829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9826,
											"end": 9829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9884,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9848,
											"end": 9861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9861,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 9848,
											"end": 9861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9848,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9848,
											"end": 9884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9848,
											"end": 9884,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4219,
											"end": 4551,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9840,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E985E9C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9939,
											"end": 9949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9959,
											"end": 9963,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9916,
											"end": 9965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9916,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 10012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9916,
											"end": 10012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20604BF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10007,
											"end": 10011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9969,
											"end": 9986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 9969,
											"end": 9986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9969,
											"end": 9995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9969,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9969,
											"end": 10012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9969,
											"end": 10012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9916,
											"end": 10012,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9916,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5390,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B585C9AD95D081B9BDD08185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5147,
											"end": 5490,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9908,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10080,
											"end": 10087,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10070,
											"end": 10088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10106,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10109,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "PUSH",
											"source": 0,
											"value": "D9D69FEE247951CC283DC6F5B64C36CE396A36146405A798B86EBFD113C8B5CA"
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10206,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 9753,
											"end": 10213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9753,
											"end": 10213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 10213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9679,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9539,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5672,
											"end": 5674,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5668,
											"end": 5683,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5683,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5746,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5734,
											"end": 5746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 9612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5783,
											"name": "PUSH",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5771,
											"end": 5783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9672,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9679,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8489,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8202,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8334,
											"end": 8341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8334,
											"end": 8341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8334,
											"end": 8353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6037,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6125,
											"end": 6143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5794,
											"end": 6149,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 8326,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8464,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 69,
											"end": 139,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 465,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 150,
											"end": 465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 258,
											"end": 265,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 254,
											"end": 277,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 250,
											"end": 282,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 247,
											"end": 299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 247,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 295,
											"end": 296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 247,
											"end": 299,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 247,
											"end": 299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 321,
											"end": 344,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 353,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 353,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 353,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 353,
											"end": 384,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 353,
											"end": 384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 403,
											"end": 408,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 455,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 440,
											"end": 458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 440,
											"end": 458,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 440,
											"end": 458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 459,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 459,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 470,
											"end": 650,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 470,
											"end": 650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 561,
											"end": 568,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 557,
											"end": 580,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 553,
											"end": 585,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 550,
											"end": 602,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 550,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 550,
											"end": 602,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 598,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 588,
											"end": 600,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 550,
											"end": 602,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 550,
											"end": 602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 621,
											"end": 644,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 621,
											"end": 644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 470,
											"end": 650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 470,
											"end": 650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1490,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1107,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1255,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 1250,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1239,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1256,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1221,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1318,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1327,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1358,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1327,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1382,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1433,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1433,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1483,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1484,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1490,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1107,
											"end": 1490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 4214,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3963,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4083,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4089,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4054,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4153,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4153,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 4214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3963,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 5142,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4865,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 4987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4973,
											"end": 4982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4964,
											"end": 4971,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4988,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 4999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5003,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4953,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5033,
											"end": 5042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5086,
											"end": 5091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5079,
											"end": 5092,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5052,
											"end": 5112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SpageroNFTMarket_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buy(address,uint256)": "cce7ec13",
							"cancel(address,uint256)": "98590ef9",
							"list(address,uint256,uint256)": "dda342bb",
							"listings(bytes32)": "c18b8db4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Cancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Listed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Purchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"list\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SpageroNFTMarket_flattened.sol\":\"SpageroNFTMarket\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SpageroNFTMarket_flattened.sol\":{\"keccak256\":\"0x63d7fc332134ac71d99d7d16522674f9c5ff3e6c03258b19ffc49c44e1382ac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b73707efdcf14cac623d632df49bf393a805d5a6101f0ff804e81c906166a6d0\",\"dweb:/ipfs/QmbyseY1gmMHCfkBe8URhcx4bCtVoyc7Y5yaHWLe2L5mBr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 135,
								"contract": "SpageroNFTMarket_flattened.sol:SpageroNFTMarket",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 206,
								"contract": "SpageroNFTMarket_flattened.sol:SpageroNFTMarket",
								"label": "listings",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(Listing)201_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(Listing)201_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct SpageroNFTMarket.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)201_storage"
							},
							"t_struct(Listing)201_storage": {
								"encoding": "inplace",
								"label": "struct SpageroNFTMarket.Listing",
								"members": [
									{
										"astId": 194,
										"contract": "SpageroNFTMarket_flattened.sol:SpageroNFTMarket",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 196,
										"contract": "SpageroNFTMarket_flattened.sol:SpageroNFTMarket",
										"label": "nft",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 198,
										"contract": "SpageroNFTMarket_flattened.sol:SpageroNFTMarket",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 200,
										"contract": "SpageroNFTMarket_flattened.sol:SpageroNFTMarket",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SpageroNFTMarket_flattened.sol": {
				"ast": {
					"absolutePath": "SpageroNFTMarket_flattened.sol",
					"exportedSymbols": {
						"IERC165": [
							11
						],
						"IERC721": [
							125
						],
						"ReentrancyGuard": [
							189
						],
						"SpageroNFTMarket": [
							482
						]
					},
					"id": 483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "182:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "209:280:0",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "500:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "514:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "868:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "893:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "886:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "886:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "929:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "929:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:6:0"
									},
									"scope": 11,
									"src": "859:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 483,
							"src": "490:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 12,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "1075:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 14,
										"name": "IERC165",
										"nameLocations": [
											"1192:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1192:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "1192:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 13,
								"nodeType": "StructuredDocumentation",
								"src": "1102:68:0",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								11
							],
							"name": "IERC721",
							"nameLocation": "1181:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "1206:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 24,
									"name": "Transfer",
									"nameLocation": "1305:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1330:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1314:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1352:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1336:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1372:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1356:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:67:0"
									},
									"src": "1299:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1387:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 33,
									"name": "Approval",
									"nameLocation": "1492:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1517:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1501:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1540:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1524:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1566:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1550:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:74:0"
									},
									"src": "1486:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1581:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1709:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1740:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1724:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1763:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1747:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1778:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1773:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1723:64:0"
									},
									"src": "1703:85:0"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1794:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1884:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1902:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1894:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:15:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1940:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:17:0"
									},
									"scope": 125,
									"src": "1875:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1955:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2100:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2116:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2108:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:17:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:15:0"
									},
									"scope": 125,
									"src": "2091:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2169:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2748:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2773:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2765:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2787:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2779:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2823:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2808:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 66,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2808:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2764:64:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2837:0:0"
									},
									"scope": 125,
									"src": "2739:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2844:706:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3564:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3589:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3581:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3603:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3595:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3615:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3607:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:43:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3632:0:0"
									},
									"scope": 125,
									"src": "3555:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3639:733:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4386:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4407:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4399:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4421:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4413:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:43:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4450:0:0"
									},
									"scope": 125,
									"src": "4377:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4457:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4923:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4939:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4931:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4951:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4943:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4930:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4968:0:0"
									},
									"scope": 125,
									"src": "4914:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "4975:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5304:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5330:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5322:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5345:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5340:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5321:33:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5363:0:0"
									},
									"scope": 125,
									"src": "5295:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5370:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5523:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5543:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "5535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5534:17:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5583:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "5575:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5574:18:0"
									},
									"scope": 125,
									"src": "5514:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "5599:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5751:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5768:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5791:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5783:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5767:33:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5824:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5824:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5823:6:0"
									},
									"scope": 125,
									"src": "5742:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 483,
							"src": "1171:4661:0",
							"usedErrors": [],
							"usedEvents": [
								24,
								33,
								42
							]
						},
						{
							"id": 126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "5978:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 127,
								"nodeType": "StructuredDocumentation",
								"src": "6003:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "ReentrancyGuard",
							"nameLocation": "6772:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 130,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "7567:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 189,
									"src": "7542:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7542:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7582:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 133,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "7614:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 189,
									"src": "7589:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7589:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 132,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7625:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 135,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "7649:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 189,
									"src": "7633:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 134,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7633:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "7677:39:0",
										"statements": [
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "7687:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "7697:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7687:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "7687:22:0"
											}
										]
									},
									"id": 143,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7674:2:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7677:0:0"
									},
									"scope": 189,
									"src": "7663:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "8117:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 146,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "8127:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8127:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "8127:21:0"
											},
											{
												"id": 149,
												"nodeType": "PlaceholderStatement",
												"src": "8158:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "8169:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8169:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "8169:20:0"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "7722:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 154,
									"name": "nonReentrant",
									"nameLocation": "8102:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8114:2:0"
									},
									"src": "8093:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "8241:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 158,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "8334:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 159,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "8345:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8334:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8355:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8326:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "8326:63:0"
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "8464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 165,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "8474:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8464:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "8464:18:0"
											}
										]
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "8211:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8230:2:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8241:0:0"
									},
									"scope": 189,
									"src": "8202:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "8533:171:0",
										"statements": [
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "8675:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 173,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "8685:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8675:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "8675:22:0"
											}
										]
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "8504:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8522:2:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8533:0:0"
									},
									"scope": 189,
									"src": "8495:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "8947:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 183,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "8964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 184,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "8975:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8964:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 182,
												"id": 186,
												"nodeType": "Return",
												"src": "8957:26:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "8710:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "8892:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:2:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "8941:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:6:0"
									},
									"scope": 189,
									"src": "8883:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 483,
							"src": "6754:2238:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "9026:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 191,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"9083:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "9083:15:0"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "9083:15:0"
								}
							],
							"canonicalName": "SpageroNFTMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 482,
							"linearizedBaseContracts": [
								482,
								189
							],
							"name": "SpageroNFTMarket",
							"nameLocation": "9063:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SpageroNFTMarket.Listing",
									"id": 201,
									"members": [
										{
											"constant": false,
											"id": 194,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "9130:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 201,
											"src": "9122:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 193,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9122:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "nft",
											"nameLocation": "9146:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 201,
											"src": "9138:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 195,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9138:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 198,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "9159:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 201,
											"src": "9151:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 197,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9151:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 200,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "9176:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 201,
											"src": "9168:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 199,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9168:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "9112:7:0",
									"nodeType": "StructDefinition",
									"scope": 482,
									"src": "9105:79:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c18b8db4",
									"id": 206,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "9224:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 482,
									"src": "9189:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$201_storage_$",
										"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing)"
									},
									"typeName": {
										"id": 205,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 202,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "9197:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "9189:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$201_storage_$",
											"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 204,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 203,
												"name": "Listing",
												"nameLocations": [
													"9208:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 201,
												"src": "9208:7:0"
											},
											"referencedDeclaration": 201,
											"src": "9208:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Listing_$201_storage_ptr",
												"typeString": "struct SpageroNFTMarket.Listing"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d9d69fee247951cc283dc6f5b64c36ce396a36146405a798b86ebfd113c8b5ca",
									"id": 216,
									"name": "Listed",
									"nameLocation": "9245:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "9268:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "9252:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": true,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "9292:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "9276:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9313:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "9297:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "9330:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "9322:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9251:85:0"
									},
									"src": "9239:98:0"
								},
								{
									"anonymous": false,
									"eventSelector": "915fb8c652d6245752cc491b71bd8e87ab6761417f8d2ca353c8055103294c03",
									"id": 224,
									"name": "Cancelled",
									"nameLocation": "9348:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "9374:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "9358:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "9398:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "9382:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "9403:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9357:70:0"
									},
									"src": "9342:86:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a326259ec721617acd3cb2a00bcbeac91eefe409880e49aa2bbf473ed648da49",
									"id": 234,
									"name": "Purchased",
									"nameLocation": "9439:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "9465:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "9449:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "9488:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "9472:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9509:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "9493:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "9526:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "9518:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9448:84:0"
									},
									"src": "9433:100:0"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "9614:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 246,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "9658:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 247,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "9663:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 244,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9641:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9645:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9641:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9641:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 243,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9631:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9631:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 242,
												"id": 250,
												"nodeType": "Return",
												"src": "9624:48:0"
											}
										]
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_key",
									"nameLocation": "9548:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "9561:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "9553:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "9566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9552:30:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "9605:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9604:9:0"
									},
									"scope": 482,
									"src": "9539:140:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "9753:460:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 262,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "9771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9771:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "70726963653d30",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9782:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882",
																"typeString": "literal_string \"price=0\""
															},
															"value": "price=0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882",
																"typeString": "literal_string \"price=0\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9763:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "9763:29:0"
											},
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "9810:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "9802:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$125",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 269,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 268,
																"name": "IERC721",
																"nameLocations": [
																	"9802:7:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 125,
																"src": "9802:7:0"
															},
															"referencedDeclaration": 125,
															"src": "9802:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$125",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [
														{
															"id": 272,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "9826:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 271,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "9818:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$125_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9818:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$125",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9802:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "9862:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 276,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "9848:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$125",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9854:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 58,
																	"src": "9848:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9848:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 280,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9874:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9878:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9874:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9848:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9886:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9840:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "9840:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 289,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9939:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9943:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9939:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 293,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "9959:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SpageroNFTMarket_$482",
																					"typeString": "contract SpageroNFTMarket"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SpageroNFTMarket_$482",
																					"typeString": "contract SpageroNFTMarket"
																				}
																			],
																			"id": 292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9951:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 291,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9951:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9951:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 287,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "9916:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$125",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9922:16:0",
																	"memberName": "isApprovedForAll",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "9916:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view external returns (bool)"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9916:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 298,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "9987:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 296,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 270,
																			"src": "9969:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721_$125",
																				"typeString": "contract IERC721"
																			}
																		},
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9975:11:0",
																		"memberName": "getApproved",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 114,
																		"src": "9969:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view external returns (address)"
																		}
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9969:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 302,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10007:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SpageroNFTMarket_$482",
																				"typeString": "contract SpageroNFTMarket"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SpageroNFTMarket_$482",
																				"typeString": "contract SpageroNFTMarket"
																			}
																		],
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9999:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 300,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9999:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9999:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9969:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9916:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d61726b6574206e6f7420617070726f766564",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10026:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb",
																"typeString": "literal_string \"market not approved\""
															},
															"value": "market not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a2203f69edcfb746e3078c2e0b4ae838e134177020241fe35dd510968d9ffbb",
																"typeString": "literal_string \"market not approved\""
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9908:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9908:140:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "9908:140:0"
											},
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "10066:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "10058:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 309,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"id": 312,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "10075:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "10080:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 311,
														"name": "_key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "10070:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,uint256) pure returns (bytes32)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10070:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10058:30:0"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 316,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "10098:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$201_storage_$",
																"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
															}
														},
														"id": 318,
														"indexExpression": {
															"id": 317,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "10107:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10098:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$201_storage",
															"typeString": "struct SpageroNFTMarket.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 320,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10120:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10124:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10120:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 322,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "10132:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 323,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "10137:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 324,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "10146:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 319,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "10112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$201_storage_ptr_$",
																"typeString": "type(struct SpageroNFTMarket.Listing storage pointer)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10112:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
															"typeString": "struct SpageroNFTMarket.Listing memory"
														}
													},
													"src": "10098:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$201_storage",
														"typeString": "struct SpageroNFTMarket.Listing storage ref"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "10098:54:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10174:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10178:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10174:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "10186:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 332,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "10191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 333,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "10200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 328,
														"name": "Listed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "10167:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10167:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "EmitStatement",
												"src": "10162:44:0"
											}
										]
									},
									"functionSelector": "dda342bb",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "list",
									"nameLocation": "9694:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "9707:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "9699:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9720:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "9712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "9737:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "9729:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9698:45:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9753:0:0"
									},
									"scope": 482,
									"src": "9685:528:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "10274:275:0",
										"statements": [
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "10292:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 390,
														"src": "10284:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 344,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"arguments": [
														{
															"id": 347,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "10301:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "10306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "_key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "10296:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,uint256) pure returns (bytes32)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10296:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10284:30:0"
											},
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "10339:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 390,
														"src": "10324:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
															"typeString": "struct SpageroNFTMarket.Listing"
														},
														"typeName": {
															"id": 352,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 351,
																"name": "Listing",
																"nameLocations": [
																	"10324:7:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 201,
																"src": "10324:7:0"
															},
															"referencedDeclaration": 201,
															"src": "10324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$201_storage_ptr",
																"typeString": "struct SpageroNFTMarket.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"baseExpression": {
														"id": 354,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "10343:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$201_storage_$",
															"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "10352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10343:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$201_storage",
														"typeString": "struct SpageroNFTMarket.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10324:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 359,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "10372:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
																		"typeString": "struct SpageroNFTMarket.Listing memory"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10374:6:0",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 194,
																"src": "10372:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10392:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10384:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 361,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10384:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10384:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10372:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206c6973746564",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10396:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7",
																"typeString": "literal_string \"not listed\""
															},
															"value": "not listed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7",
																"typeString": "literal_string \"not listed\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10364:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "10364:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 370,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "10427:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
																		"typeString": "struct SpageroNFTMarket.Listing memory"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10429:6:0",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 194,
																"src": "10427:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 372,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10439:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10443:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10439:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10427:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073656c6c6572",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10451:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															},
															"value": "not seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10419:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10419:45:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10474:18:0",
													"subExpression": {
														"baseExpression": {
															"id": 378,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "10481:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$201_storage_$",
																"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
															}
														},
														"id": 380,
														"indexExpression": {
															"id": 379,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "10490:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10481:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$201_storage",
															"typeString": "struct SpageroNFTMarket.Listing storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "10474:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10517:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10521:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "10529:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "10534:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Cancelled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "10507:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10507:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "10502:40:0"
											}
										]
									},
									"functionSelector": "98590ef9",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "10228:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "10243:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "10235:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10256:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "10248:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10234:30:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10274:0:0"
									},
									"scope": 482,
									"src": "10219:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "10628:467:0",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "10646:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "10638:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 400,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"arguments": [
														{
															"id": 403,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "10655:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "10660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 402,
														"name": "_key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "10650:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,uint256) pure returns (bytes32)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10650:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10638:30:0"
											},
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "10693:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "10678:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
															"typeString": "struct SpageroNFTMarket.Listing"
														},
														"typeName": {
															"id": 408,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 407,
																"name": "Listing",
																"nameLocations": [
																	"10678:7:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 201,
																"src": "10678:7:0"
															},
															"referencedDeclaration": 201,
															"src": "10678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$201_storage_ptr",
																"typeString": "struct SpageroNFTMarket.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"baseExpression": {
														"id": 410,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "10697:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$201_storage_$",
															"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
														}
													},
													"id": 412,
													"indexExpression": {
														"id": 411,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "10706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10697:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$201_storage",
														"typeString": "struct SpageroNFTMarket.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10678:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 415,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "10726:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
																		"typeString": "struct SpageroNFTMarket.Listing memory"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10728:6:0",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 194,
																"src": "10726:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10746:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10738:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10738:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10738:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10726:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206c6973746564",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10750:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7",
																"typeString": "literal_string \"not listed\""
															},
															"value": "not listed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce26b2f71bef415d02b24a9143f5862ae8ad55f9cda554fa94dacfa0ef4da5f7",
																"typeString": "literal_string \"not listed\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10718:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10718:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "10718:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 426,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10781:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10785:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "10781:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 428,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "10794:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
																		"typeString": "struct SpageroNFTMarket.Listing memory"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10796:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 200,
																"src": "10794:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10781:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6261642076616c7565",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10803:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7",
																"typeString": "literal_string \"bad value\""
															},
															"value": "bad value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2e5165a60eaee1c6ee52001c1676df358076a1b284b14778190ce620dad8ad7",
																"typeString": "literal_string \"bad value\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10773:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10773:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "10773:42:0"
											},
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10825:18:0",
													"subExpression": {
														"baseExpression": {
															"id": 434,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "10832:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$201_storage_$",
																"typeString": "mapping(bytes32 => struct SpageroNFTMarket.Listing storage ref)"
															}
														},
														"id": 436,
														"indexExpression": {
															"id": 435,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "10841:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10832:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$201_storage",
															"typeString": "struct SpageroNFTMarket.Listing storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "10825:18:0"
											},
											{
												"assignments": [
													440,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "10859:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "10854:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 439,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10854:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10908:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 443,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "10875:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
																				"typeString": "struct SpageroNFTMarket.Listing memory"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10877:6:0",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 194,
																		"src": "10875:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10867:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 441,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10867:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10867:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10885:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10867:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 447,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10897:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10901:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "10897:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10867:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10867:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10853:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "10929:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7061792073656c6c6572206661696c6564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10933:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1",
																"typeString": "literal_string \"pay seller failed\""
															},
															"value": "pay seller failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_551f34a10e7bd2ad90ad01e7200942a644223bb956c4aecf383643a204ce31f1",
																"typeString": "literal_string \"pay seller failed\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10921:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "10921:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 463,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "10995:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
																	"typeString": "struct SpageroNFTMarket.Listing memory"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10997:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 194,
															"src": "10995:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11005:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11009:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11005:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 467,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "11017:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
																	"typeString": "struct SpageroNFTMarket.Listing memory"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11019:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 198,
															"src": "11017:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 459,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "10971:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$201_memory_ptr",
																			"typeString": "struct SpageroNFTMarket.Listing memory"
																		}
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10973:3:0",
																	"memberName": "nft",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "10971:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 458,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "10963:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$125_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10963:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$125",
																"typeString": "contract IERC721"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10978:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 80,
														"src": "10963:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10963:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "10963:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11052:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11056:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11052:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "11064:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "11069:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11078:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11082:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "11078:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "Purchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "11042:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11042:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "EmitStatement",
												"src": "11037:51:0"
											}
										]
									},
									"functionSelector": "cce7ec13",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 398,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 397,
												"name": "nonReentrant",
												"nameLocations": [
													"10615:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 154,
												"src": "10615:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10615:12:0"
										}
									],
									"name": "buy",
									"nameLocation": "10564:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "10576:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "10568:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "10581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10567:30:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10628:0:0"
									},
									"scope": 482,
									"src": "10555:540:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 483,
							"src": "9054:2043:0",
							"usedErrors": [],
							"usedEvents": [
								216,
								224,
								234
							]
						}
					],
					"src": "182:10916:0"
				},
				"id": 0
			}
		}
	}
}